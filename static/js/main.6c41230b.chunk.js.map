{"version":3,"sources":["Main.elm","serviceWorker.js","index.js"],"names":["scope","F","arity","fun","wrapper","a","f","F2","b","F3","c","F4","d","A2","A3","A4","_Utils_eq","x","y","pair","stack","isEqual","_Utils_eqHelp","pop","depth","_Debug_crash","push","_Utils_Tuple2","key","$","$elm$core$Dict$toList","_Utils_equal","_Utils_cmp","ord","_Utils_update","oldRecord","updatedFields","newRecord","_Utils_ap","xs","ys","root","_List_Cons","curr","_List_Nil","hd","tl","_List_cons","_List_fromArray","arr","out","i","length","_List_map2","_JsArray_initialize","size","offset","func","result","Array","_JsArray_initializeFromList","max","ls","_JsArray_unsafeGet","index","array","_JsArray_unsafeSet","value","_JsArray_foldr","acc","_JsArray_slice","from","to","slice","_JsArray_appendN","n","dest","source","destLen","itemsToCopy","identifier","Error","_Basics_pow","Math","pow","_Basics_ceiling","ceil","_Basics_floor","floor","_Basics_log","log","_String_join","sep","strs","join","_String_fromNumber","number","_Json_decodePrim","decoder","_Json_expecting","$elm$core$Result$Ok","isFinite","_Json_wrap","_Json_decodeString","String","_Json_decodeField","field","_Json_map1","d1","decoders","g","_Json_mapMany","_Json_run","_Json_runHelp","_Json_unwrap","_Json_isArray","_Json_runArrayDecoder","_Json_toElmArray","$elm$core$Result$isOk","$elm$core$Result$Err","$elm$json$Json$Decode$Field","e","$elm$json$Json$Decode$Index","keyValuePairs","hasOwnProperty","$elm$core$List$reverse","answer","h","errors","temp","$elm$json$Json$Decode$OneOf","$elm$json$Json$Decode$Failure","toElmValue","len","isArray","FileList","$elm$core$Array$initialize","type","_Json_equality","_Json_listEquality","aDecoders","bDecoders","_Scheduler_succeed","_Scheduler_binding","callback","_Scheduler_andThen","task","_Scheduler_guid","_Scheduler_rawSpawn","proc","_Scheduler_enqueue","_Scheduler_working","_Scheduler_queue","shift","_Scheduler_step","rootTag","newRoot","_Platform_effectManagers","_Platform_instantiateManager","info","sendToApp","router","undefined","onEffects","onSelfMsg","cmdMap","subMap","loop","state","msg","j","_Platform_sendToApp","_Platform_batch","list","m","_VirtualDom_divertHrefToApp","_Platform_effectsQueue","_Platform_effectsActive","_Platform_enqueueEffects","managers","cmdBag","subBag","p","q","r","fx","_Platform_dispatchEffects","effectsDict","home","_Platform_gatherEffects","isCmd","bag","taggers","k","effect","t","s","l","_Platform_toEffect","newEffect","effects","_Platform_insert","o","_VirtualDom_doc","document","_VirtualDom_appendChild","parent","child","appendChild","_VirtualDom_text","string","_VirtualDom_nodeNS","namespace","tag","factList","kidList","kids","descendantsCount","kid","_VirtualDom_organizeFacts","_VirtualDom_node","_VirtualDom_keyedNodeNS","_VirtualDom_passiveSupported","_VirtualDom_on","handler","_VirtualDom_property","_VirtualDom_attribute","facts","entry","subFacts","_VirtualDom_addClass","object","newClass","classes","_VirtualDom_render","vNode","eventNode","createTextNode","subNode","tagger","subEventRoot","domNode","elm_event_node_ref","_VirtualDom_applyFacts","createElementNS","createElement","addEventListener","_VirtualDom_applyStyles","_VirtualDom_applyEvents","_VirtualDom_applyAttrs","_VirtualDom_applyAttrsNS","styles","domNodeStyle","style","attrs","setAttribute","removeAttribute","nsAttrs","setAttributeNS","removeAttributeNS","events","allCallbacks","elmFs","newHandler","oldCallback","removeEventListener","_VirtualDom_makeCallback","passive","$elm$virtual_dom$VirtualDom$toHandlerInt","window","Object","defineProperty","get","initialHandler","event","message","A","stopPropagation","an","currentEventNode","aj","preventDefault","_VirtualDom_equalEvents","_VirtualDom_pushPatch","patches","data","patch","u","_VirtualDom_diffHelp","xType","yType","keyedNode","keyedKids","_VirtualDom_dekey","xRefs","yRefs","same","subPatches","xTaggers","yTaggers","nesting","xSubNode","ySubNode","as","bs","_VirtualDom_pairwiseRefEqual","_VirtualDom_diffNodes","_VirtualDom_diffKids","_VirtualDom_diffKeyedKids","factsDiff","_VirtualDom_diffFacts","diffKids","category","diff","xKey","xValue","yValue","subDiff","yKey","xParent","yParent","xKids","yKids","xLen","yLen","v","minLen","xKid","rootIndex","localPatches","changes","inserts","xIndex","yIndex","xNode","yNode","newMatch","oldMatch","xNext","yNext","xNextKey","xNextNode","yNextKey","yNextNode","_VirtualDom_insertNode","_VirtualDom_removeNode","endInserts","w","_VirtualDom_POSTFIX","vnode","z","_VirtualDom_applyPatches","rootDomNode","oldVirtualNode","_VirtualDom_addDomNodes","_VirtualDom_addDomNodesHelp","low","high","patchType","vKids","childNodes","vKid","nextLow","_VirtualDom_applyPatchesHelp","localDomNode","newNode","_VirtualDom_applyPatch","parentNode","replaceChild","_VirtualDom_applyPatchRedraw","replaceData","removeChild","theEnd","insertBefore","frag","createDocumentFragment","_VirtualDom_applyPatchReorderEndInsertsHelp","insert","node","_VirtualDom_applyPatchReorder","_Browser_element","impl","flagDecoder","debugMetadata","args","init","update","subscriptions","stepperBuilder","model","stepper","ports","manager","_Platform_setupEffects","viewMetadata","_Platform_initialize","bn","bx","bv","initialModel","view","by","currNode","_VirtualDom_virtualize","nodeType","textContent","attrList","attributes","attr","name","tagName","toLowerCase","draw","updateIfNeeded","_Browser_requestAnimationFrame","nextModel","isSync","_Browser_makeAnimator","nextNode","_VirtualDom_diff","cancelAnimationFrame","requestAnimationFrame","setTimeout","$elm$core$Basics$always","$elm$core$List$cons","$elm$core$Dict$foldr","left","$temp$func","$temp$acc","dict","$elm$core$Elm$JsArray$foldr","$elm$core$Array$foldr","baseCase","_v0","tree","tail","helper","$elm$core$Maybe$Just","$elm$core$Maybe$Nothing","$elm$core$String$fromInt","$elm$core$String$join","chunks","_List_toArray","$elm$core$List$foldl","$elm$core$List$length","$elm$core$List$map2","$elm$core$List$rangeHelp","lo","hi","$temp$lo","$temp$hi","$temp$list","$elm$core$List$range","$elm$core$List$indexedMap","$elm$core$Array$Array_elm_builtin","$elm$core$Elm$JsArray$empty","$elm$core$Basics$ceiling","$elm$core$Basics$logBase","base","$elm$core$Array$shiftStep","$elm$core$Array$empty","$elm$core$Elm$JsArray$initialize","$elm$core$Array$Leaf","$elm$core$Basics$eq","$elm$core$Basics$floor","$elm$core$Elm$JsArray$length","$elm$core$Basics$max","$elm$core$Array$SubTree","$elm$core$Elm$JsArray$initializeFromList","$elm$core$Array$compressNodes","nodes","remainingNodes","newAcc","$elm$core$Array$treeFromBuilder","nodeList","nodeListSize","newNodeSize","$elm$core$Array$builderToArray","reverseNodeList","builder","treeLen","correctNodeList","$elm$core$Array$initializeHelp","fn","fromIndex","leaf","tailLen","$elm$json$Json$Decode$map","$elm$json$Json$Decode$succeed","$elm$core$Basics$identity","$elm$core$Task$succeed","$elm$core$Task$init","$elm$core$List$foldrHelper","ctr","r1","r2","r3","r4","$elm$core$List$foldr","$elm$core$List$map","$elm$core$Task$andThen","$elm$core$Task$map","taskA","$elm$core$Task$map2","taskB","$elm$core$Platform$sendToApp","$elm$core$Task$spawnCmd","_Scheduler_spawn","commands","tasks","initialPair","exports","$elm$browser$Browser$element","$elm$core$Array$bitMask","$elm$core$Elm$JsArray$unsafeGet","$elm$core$Array$getHelp","$elm$core$Array$tailIndex","$elm$core$Array$get","startShift","$elm$core$List$maybeCons","mx","$elm$core$List$filterMap","$elm$core$Array$fromListHelp","jsArray","remainingItems","$elm$core$Array$fromList","$elm$core$Array$length","$elm$core$Elm$JsArray$appendN","$elm$core$Elm$JsArray$slice","$elm$core$Array$appendHelpBuilder","notAppended","appended","$elm$core$List$drop","drop","$elm$core$Array$sliceLeft","skipNodes","leafNodes","nodesToInsert","head","rest","initialBuilder","$elm$core$Array$fetchNewTail","end","treeEnd","$elm$core$Array$hoistTree","oldShift","newShift","$elm$core$Elm$JsArray$unsafeSet","$elm$core$Array$sliceTree","endIdx","lastPos","newSub","$elm$core$Array$sliceRight","$elm$core$Array$translateIndex","posIndex","$elm$core$Array$slice","correctTo","correctFrom","$author$project$Allele$getPrimerBindIndices","primer","allele","tripletArray","primerLength","$author$project$Allele$getSize","$author$project$SimAgg$tripletPrimer","$author$project$SimAgg$getTripletFragmentSizes","alleleSize","$elm$core$Array$repeat","$elm$core$Array$setHelp","pos","$elm$core$Array$set","$elm$core$Maybe$withDefault","_default","maybe","$author$project$SimAgg$calculateFragmentDistribution","allelePair","relFreq","alleleBFragmentSizes","ba","alleleAFragmentSizes","a9","$author$project$SimAggRev$tripletPrimer","$author$project$SimAggRev$getTripletFragmentSizes","reversedAllele","$author$project$SimAggRev$calculateFragmentDistribution","$elm$core$List$filter","isGood","$author$project$SimTriplet$getFullFragmentSize","$author$project$SimTriplet$tripletPrimer","$author$project$SimTriplet$getTripletFragmentSizes","$author$project$SimTriplet$calculateFragmentDistribution","alleleBFullFragmentSize","alleleAFullFragmentSize","alleleFullFragmentSizes","relFreqWithTrip","$elm$core$List$repeatHelp","$elm$core$List$repeat","$author$project$Allele$createWithSize","$author$project$Main$initialModel","E","P","Q","X","$elm$core$Platform$Cmd$none","$author$project$Main$init","$elm$core$Platform$Sub$none","$elm$core$List$takeReverse","kept","takeReverse","$elm$core$List$takeTailRec","$elm$core$List$takeFast","_v0$1","_v0$5","_v2","_v4","_v5","_v7","_v8","_v9","_v10","$elm$core$List$take","$author$project$Allele$changeTripletLength","newLength","currentLength","$author$project$Allele$cycleTripletAtIndex","$author$project$Triplet$cycle","$elm_community$list_extra$List$Extra$getAt","idx","$author$project$Allele$getTripletAtIndex","$author$project$Allele$setTripletAtIndex","triplet","$author$project$Main$withCmd","cmd","$author$project$Main$update","allelePairId","newSize","str","total","code0","charCodeAt","start","code","$elm$core$String$toInt","newAllelePair","newCalculatedSimAggRevValues","newCalculatedSimAggValues","newCalculatedSimTripletValues","lastAggPositionsA","lastAggPositionsB","$elm$html$Html$a","$elm$html$Html$b","$elm$json$Json$Encode$string","$elm$html$Html$Attributes$stringProperty","$elm$html$Html$Attributes$class","$elm$html$Html$div","$elm$html$Html$h1","$elm$html$Html$h2","$elm$html$Html$Attributes$href","url","test","replace","$elm$html$Html$Attributes$id","$elm$html$Html$p","$elm$html$Html$span","$elm$virtual_dom$VirtualDom$text","$elm$html$Html$text","$author$project$Main$ChangedAlleleSize","$author$project$Main$inertBlock","inner","$elm$html$Html$input","$elm$html$Html$Events$alwaysStop","$elm$virtual_dom$VirtualDom$on","$elm$html$Html$Events$stopPropagationOn","$elm$json$Json$Decode$field","$elm$json$Json$Decode$string","$elm$html$Html$Events$targetValue","fields","$elm_community$list_extra$List$Extra$groupWhile","isSameGroup","items","_v1","restOfGroup","groups","$author$project$Triplet$toString","$elm$html$Html$Attributes$type_","$elm$html$Html$Attributes$value","$author$project$Main$ClickedAlleleBlock","$elm$html$Html$Events$on","$author$project$Main$viewAlleleVisualTriplet","$author$project$Main$viewAllele","$author$project$Allele$allelePairIdToString","count","$author$project$Allele$toGroupedString","$elm_community$array_extra$Array$Extra$indexedMapToList","mapIndexedElement","element","listSoFar","$elm$core$Basics$pow","$elm$svg$Svg$Attributes$fill","$elm$svg$Svg$Attributes$fontSize","$elm$core$String$fromFloat","$elm$svg$Svg$trustedNode","$elm$svg$Svg$g","$elm$svg$Svg$Attributes$height","$elm$svg$Svg$Attributes$points","$elm$svg$Svg$polyline","$elm$svg$Svg$rect","$elm$svg$Svg$Attributes$stroke","$elm$svg$Svg$Attributes$strokeLinejoin","$elm$svg$Svg$svg","$elm$svg$Svg$text","$elm$svg$Svg$Attributes$textAnchor","$elm$svg$Svg$text_","$elm$svg$Svg$Attributes$viewBox","$elm$svg$Svg$Attributes$width","$elm$svg$Svg$Attributes$x","$elm$svg$Svg$Attributes$y","$elm$svg$Svg$Attributes$class","$elm$svg$Svg$line","$elm$svg$Svg$Attributes$opacity","$elm$svg$Svg$Attributes$x1","$elm$svg$Svg$Attributes$x2","$elm$svg$Svg$Attributes$y1","$elm$svg$Svg$Attributes$y2","Main","xminString","viewBoxString","fullAlleleBUnsorted","fullAlleleAUnsorted","alleleBSizeUnsorted","alleleASizeUnsorted","fullAlleleA","fullAlleleB","alleleASize","alleleBSize","xmin","$author$project$Main$viewSimTriplet","aboveZeroIndices","$author$project$Main$viewSimAgg","$author$project$Main$viewSimAggRev","$author$project$Main$main","_Platform_mergeExportsProd","obj","this","location","hostname","match","Elm","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.6c41230b.chunk.js","sourcesContent":["(function(scope){\n'use strict';\n\nfunction F(arity, fun, wrapper) {\n  wrapper.a = arity;\n  wrapper.f = fun;\n  return wrapper;\n}\n\nfunction F2(fun) {\n  return F(2, fun, function(a) { return function(b) { return fun(a,b); }; })\n}\nfunction F3(fun) {\n  return F(3, fun, function(a) {\n    return function(b) { return function(c) { return fun(a, b, c); }; };\n  });\n}\nfunction F4(fun) {\n  return F(4, fun, function(a) { return function(b) { return function(c) {\n    return function(d) { return fun(a, b, c, d); }; }; };\n  });\n}\nfunction F5(fun) {\n  return F(5, fun, function(a) { return function(b) { return function(c) {\n    return function(d) { return function(e) { return fun(a, b, c, d, e); }; }; }; };\n  });\n}\nfunction F6(fun) {\n  return F(6, fun, function(a) { return function(b) { return function(c) {\n    return function(d) { return function(e) { return function(f) {\n    return fun(a, b, c, d, e, f); }; }; }; }; };\n  });\n}\nfunction F7(fun) {\n  return F(7, fun, function(a) { return function(b) { return function(c) {\n    return function(d) { return function(e) { return function(f) {\n    return function(g) { return fun(a, b, c, d, e, f, g); }; }; }; }; }; };\n  });\n}\nfunction F8(fun) {\n  return F(8, fun, function(a) { return function(b) { return function(c) {\n    return function(d) { return function(e) { return function(f) {\n    return function(g) { return function(h) {\n    return fun(a, b, c, d, e, f, g, h); }; }; }; }; }; }; };\n  });\n}\nfunction F9(fun) {\n  return F(9, fun, function(a) { return function(b) { return function(c) {\n    return function(d) { return function(e) { return function(f) {\n    return function(g) { return function(h) { return function(i) {\n    return fun(a, b, c, d, e, f, g, h, i); }; }; }; }; }; }; }; };\n  });\n}\n\nfunction A2(fun, a, b) {\n  return fun.a === 2 ? fun.f(a, b) : fun(a)(b);\n}\nfunction A3(fun, a, b, c) {\n  return fun.a === 3 ? fun.f(a, b, c) : fun(a)(b)(c);\n}\nfunction A4(fun, a, b, c, d) {\n  return fun.a === 4 ? fun.f(a, b, c, d) : fun(a)(b)(c)(d);\n}\nfunction A5(fun, a, b, c, d, e) {\n  return fun.a === 5 ? fun.f(a, b, c, d, e) : fun(a)(b)(c)(d)(e);\n}\nfunction A6(fun, a, b, c, d, e, f) {\n  return fun.a === 6 ? fun.f(a, b, c, d, e, f) : fun(a)(b)(c)(d)(e)(f);\n}\nfunction A7(fun, a, b, c, d, e, f, g) {\n  return fun.a === 7 ? fun.f(a, b, c, d, e, f, g) : fun(a)(b)(c)(d)(e)(f)(g);\n}\nfunction A8(fun, a, b, c, d, e, f, g, h) {\n  return fun.a === 8 ? fun.f(a, b, c, d, e, f, g, h) : fun(a)(b)(c)(d)(e)(f)(g)(h);\n}\nfunction A9(fun, a, b, c, d, e, f, g, h, i) {\n  return fun.a === 9 ? fun.f(a, b, c, d, e, f, g, h, i) : fun(a)(b)(c)(d)(e)(f)(g)(h)(i);\n}\n\n\n\n\n// EQUALITY\n\nfunction _Utils_eq(x, y)\n{\n\tfor (\n\t\tvar pair, stack = [], isEqual = _Utils_eqHelp(x, y, 0, stack);\n\t\tisEqual && (pair = stack.pop());\n\t\tisEqual = _Utils_eqHelp(pair.a, pair.b, 0, stack)\n\t\t)\n\t{}\n\n\treturn isEqual;\n}\n\nfunction _Utils_eqHelp(x, y, depth, stack)\n{\n\tif (x === y)\n\t{\n\t\treturn true;\n\t}\n\n\tif (typeof x !== 'object' || x === null || y === null)\n\t{\n\t\ttypeof x === 'function' && _Debug_crash(5);\n\t\treturn false;\n\t}\n\n\tif (depth > 100)\n\t{\n\t\tstack.push(_Utils_Tuple2(x,y));\n\t\treturn true;\n\t}\n\n\t/**_UNUSED/\n\tif (x.$ === 'Set_elm_builtin')\n\t{\n\t\tx = $elm$core$Set$toList(x);\n\t\ty = $elm$core$Set$toList(y);\n\t}\n\tif (x.$ === 'RBNode_elm_builtin' || x.$ === 'RBEmpty_elm_builtin')\n\t{\n\t\tx = $elm$core$Dict$toList(x);\n\t\ty = $elm$core$Dict$toList(y);\n\t}\n\t//*/\n\n\t/**/\n\tif (x.$ < 0)\n\t{\n\t\tx = $elm$core$Dict$toList(x);\n\t\ty = $elm$core$Dict$toList(y);\n\t}\n\t//*/\n\n\tfor (var key in x)\n\t{\n\t\tif (!_Utils_eqHelp(x[key], y[key], depth + 1, stack))\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\n\nvar _Utils_equal = F2(_Utils_eq);\nvar _Utils_notEqual = F2(function(a, b) { return !_Utils_eq(a,b); });\n\n\n\n// COMPARISONS\n\n// Code in Generate/JavaScript.hs, Basics.js, and List.js depends on\n// the particular integer values assigned to LT, EQ, and GT.\n\nfunction _Utils_cmp(x, y, ord)\n{\n\tif (typeof x !== 'object')\n\t{\n\t\treturn x === y ? /*EQ*/ 0 : x < y ? /*LT*/ -1 : /*GT*/ 1;\n\t}\n\n\t/**_UNUSED/\n\tif (x instanceof String)\n\t{\n\t\tvar a = x.valueOf();\n\t\tvar b = y.valueOf();\n\t\treturn a === b ? 0 : a < b ? -1 : 1;\n\t}\n\t//*/\n\n\t/**/\n\tif (typeof x.$ === 'undefined')\n\t//*/\n\t/**_UNUSED/\n\tif (x.$[0] === '#')\n\t//*/\n\t{\n\t\treturn (ord = _Utils_cmp(x.a, y.a))\n\t\t\t? ord\n\t\t\t: (ord = _Utils_cmp(x.b, y.b))\n\t\t\t\t? ord\n\t\t\t\t: _Utils_cmp(x.c, y.c);\n\t}\n\n\t// traverse conses until end of a list or a mismatch\n\tfor (; x.b && y.b && !(ord = _Utils_cmp(x.a, y.a)); x = x.b, y = y.b) {} // WHILE_CONSES\n\treturn ord || (x.b ? /*GT*/ 1 : y.b ? /*LT*/ -1 : /*EQ*/ 0);\n}\n\nvar _Utils_lt = F2(function(a, b) { return _Utils_cmp(a, b) < 0; });\nvar _Utils_le = F2(function(a, b) { return _Utils_cmp(a, b) < 1; });\nvar _Utils_gt = F2(function(a, b) { return _Utils_cmp(a, b) > 0; });\nvar _Utils_ge = F2(function(a, b) { return _Utils_cmp(a, b) >= 0; });\n\nvar _Utils_compare = F2(function(x, y)\n{\n\tvar n = _Utils_cmp(x, y);\n\treturn n < 0 ? $elm$core$Basics$LT : n ? $elm$core$Basics$GT : $elm$core$Basics$EQ;\n});\n\n\n// COMMON VALUES\n\nvar _Utils_Tuple0 = 0;\nvar _Utils_Tuple0_UNUSED = { $: '#0' };\n\nfunction _Utils_Tuple2(a, b) { return { a: a, b: b }; }\nfunction _Utils_Tuple2_UNUSED(a, b) { return { $: '#2', a: a, b: b }; }\n\nfunction _Utils_Tuple3(a, b, c) { return { a: a, b: b, c: c }; }\nfunction _Utils_Tuple3_UNUSED(a, b, c) { return { $: '#3', a: a, b: b, c: c }; }\n\nfunction _Utils_chr(c) { return c; }\nfunction _Utils_chr_UNUSED(c) { return new String(c); }\n\n\n// RECORDS\n\nfunction _Utils_update(oldRecord, updatedFields)\n{\n\tvar newRecord = {};\n\n\tfor (var key in oldRecord)\n\t{\n\t\tnewRecord[key] = oldRecord[key];\n\t}\n\n\tfor (var key in updatedFields)\n\t{\n\t\tnewRecord[key] = updatedFields[key];\n\t}\n\n\treturn newRecord;\n}\n\n\n// APPEND\n\nvar _Utils_append = F2(_Utils_ap);\n\nfunction _Utils_ap(xs, ys)\n{\n\t// append Strings\n\tif (typeof xs === 'string')\n\t{\n\t\treturn xs + ys;\n\t}\n\n\t// append Lists\n\tif (!xs.b)\n\t{\n\t\treturn ys;\n\t}\n\tvar root = _List_Cons(xs.a, ys);\n\txs = xs.b\n\tfor (var curr = root; xs.b; xs = xs.b) // WHILE_CONS\n\t{\n\t\tcurr = curr.b = _List_Cons(xs.a, ys);\n\t}\n\treturn root;\n}\n\n\n\nvar _List_Nil = { $: 0 };\nvar _List_Nil_UNUSED = { $: '[]' };\n\nfunction _List_Cons(hd, tl) { return { $: 1, a: hd, b: tl }; }\nfunction _List_Cons_UNUSED(hd, tl) { return { $: '::', a: hd, b: tl }; }\n\n\nvar _List_cons = F2(_List_Cons);\n\nfunction _List_fromArray(arr)\n{\n\tvar out = _List_Nil;\n\tfor (var i = arr.length; i--; )\n\t{\n\t\tout = _List_Cons(arr[i], out);\n\t}\n\treturn out;\n}\n\nfunction _List_toArray(xs)\n{\n\tfor (var out = []; xs.b; xs = xs.b) // WHILE_CONS\n\t{\n\t\tout.push(xs.a);\n\t}\n\treturn out;\n}\n\nvar _List_map2 = F3(function(f, xs, ys)\n{\n\tfor (var arr = []; xs.b && ys.b; xs = xs.b, ys = ys.b) // WHILE_CONSES\n\t{\n\t\tarr.push(A2(f, xs.a, ys.a));\n\t}\n\treturn _List_fromArray(arr);\n});\n\nvar _List_map3 = F4(function(f, xs, ys, zs)\n{\n\tfor (var arr = []; xs.b && ys.b && zs.b; xs = xs.b, ys = ys.b, zs = zs.b) // WHILE_CONSES\n\t{\n\t\tarr.push(A3(f, xs.a, ys.a, zs.a));\n\t}\n\treturn _List_fromArray(arr);\n});\n\nvar _List_map4 = F5(function(f, ws, xs, ys, zs)\n{\n\tfor (var arr = []; ws.b && xs.b && ys.b && zs.b; ws = ws.b, xs = xs.b, ys = ys.b, zs = zs.b) // WHILE_CONSES\n\t{\n\t\tarr.push(A4(f, ws.a, xs.a, ys.a, zs.a));\n\t}\n\treturn _List_fromArray(arr);\n});\n\nvar _List_map5 = F6(function(f, vs, ws, xs, ys, zs)\n{\n\tfor (var arr = []; vs.b && ws.b && xs.b && ys.b && zs.b; vs = vs.b, ws = ws.b, xs = xs.b, ys = ys.b, zs = zs.b) // WHILE_CONSES\n\t{\n\t\tarr.push(A5(f, vs.a, ws.a, xs.a, ys.a, zs.a));\n\t}\n\treturn _List_fromArray(arr);\n});\n\nvar _List_sortBy = F2(function(f, xs)\n{\n\treturn _List_fromArray(_List_toArray(xs).sort(function(a, b) {\n\t\treturn _Utils_cmp(f(a), f(b));\n\t}));\n});\n\nvar _List_sortWith = F2(function(f, xs)\n{\n\treturn _List_fromArray(_List_toArray(xs).sort(function(a, b) {\n\t\tvar ord = A2(f, a, b);\n\t\treturn ord === $elm$core$Basics$EQ ? 0 : ord === $elm$core$Basics$LT ? -1 : 1;\n\t}));\n});\n\n\n\nvar _JsArray_empty = [];\n\nfunction _JsArray_singleton(value)\n{\n    return [value];\n}\n\nfunction _JsArray_length(array)\n{\n    return array.length;\n}\n\nvar _JsArray_initialize = F3(function(size, offset, func)\n{\n    var result = new Array(size);\n\n    for (var i = 0; i < size; i++)\n    {\n        result[i] = func(offset + i);\n    }\n\n    return result;\n});\n\nvar _JsArray_initializeFromList = F2(function (max, ls)\n{\n    var result = new Array(max);\n\n    for (var i = 0; i < max && ls.b; i++)\n    {\n        result[i] = ls.a;\n        ls = ls.b;\n    }\n\n    result.length = i;\n    return _Utils_Tuple2(result, ls);\n});\n\nvar _JsArray_unsafeGet = F2(function(index, array)\n{\n    return array[index];\n});\n\nvar _JsArray_unsafeSet = F3(function(index, value, array)\n{\n    var length = array.length;\n    var result = new Array(length);\n\n    for (var i = 0; i < length; i++)\n    {\n        result[i] = array[i];\n    }\n\n    result[index] = value;\n    return result;\n});\n\nvar _JsArray_push = F2(function(value, array)\n{\n    var length = array.length;\n    var result = new Array(length + 1);\n\n    for (var i = 0; i < length; i++)\n    {\n        result[i] = array[i];\n    }\n\n    result[length] = value;\n    return result;\n});\n\nvar _JsArray_foldl = F3(function(func, acc, array)\n{\n    var length = array.length;\n\n    for (var i = 0; i < length; i++)\n    {\n        acc = A2(func, array[i], acc);\n    }\n\n    return acc;\n});\n\nvar _JsArray_foldr = F3(function(func, acc, array)\n{\n    for (var i = array.length - 1; i >= 0; i--)\n    {\n        acc = A2(func, array[i], acc);\n    }\n\n    return acc;\n});\n\nvar _JsArray_map = F2(function(func, array)\n{\n    var length = array.length;\n    var result = new Array(length);\n\n    for (var i = 0; i < length; i++)\n    {\n        result[i] = func(array[i]);\n    }\n\n    return result;\n});\n\nvar _JsArray_indexedMap = F3(function(func, offset, array)\n{\n    var length = array.length;\n    var result = new Array(length);\n\n    for (var i = 0; i < length; i++)\n    {\n        result[i] = A2(func, offset + i, array[i]);\n    }\n\n    return result;\n});\n\nvar _JsArray_slice = F3(function(from, to, array)\n{\n    return array.slice(from, to);\n});\n\nvar _JsArray_appendN = F3(function(n, dest, source)\n{\n    var destLen = dest.length;\n    var itemsToCopy = n - destLen;\n\n    if (itemsToCopy > source.length)\n    {\n        itemsToCopy = source.length;\n    }\n\n    var size = destLen + itemsToCopy;\n    var result = new Array(size);\n\n    for (var i = 0; i < destLen; i++)\n    {\n        result[i] = dest[i];\n    }\n\n    for (var i = 0; i < itemsToCopy; i++)\n    {\n        result[i + destLen] = source[i];\n    }\n\n    return result;\n});\n\n\n\n// LOG\n\nvar _Debug_log = F2(function(tag, value)\n{\n\treturn value;\n});\n\nvar _Debug_log_UNUSED = F2(function(tag, value)\n{\n\tconsole.log(tag + ': ' + _Debug_toString(value));\n\treturn value;\n});\n\n\n// TODOS\n\nfunction _Debug_todo(moduleName, region)\n{\n\treturn function(message) {\n\t\t_Debug_crash(8, moduleName, region, message);\n\t};\n}\n\nfunction _Debug_todoCase(moduleName, region, value)\n{\n\treturn function(message) {\n\t\t_Debug_crash(9, moduleName, region, value, message);\n\t};\n}\n\n\n// TO STRING\n\nfunction _Debug_toString(value)\n{\n\treturn '<internals>';\n}\n\nfunction _Debug_toString_UNUSED(value)\n{\n\treturn _Debug_toAnsiString(false, value);\n}\n\nfunction _Debug_toAnsiString(ansi, value)\n{\n\tif (typeof value === 'function')\n\t{\n\t\treturn _Debug_internalColor(ansi, '<function>');\n\t}\n\n\tif (typeof value === 'boolean')\n\t{\n\t\treturn _Debug_ctorColor(ansi, value ? 'True' : 'False');\n\t}\n\n\tif (typeof value === 'number')\n\t{\n\t\treturn _Debug_numberColor(ansi, value + '');\n\t}\n\n\tif (value instanceof String)\n\t{\n\t\treturn _Debug_charColor(ansi, \"'\" + _Debug_addSlashes(value, true) + \"'\");\n\t}\n\n\tif (typeof value === 'string')\n\t{\n\t\treturn _Debug_stringColor(ansi, '\"' + _Debug_addSlashes(value, false) + '\"');\n\t}\n\n\tif (typeof value === 'object' && '$' in value)\n\t{\n\t\tvar tag = value.$;\n\n\t\tif (typeof tag === 'number')\n\t\t{\n\t\t\treturn _Debug_internalColor(ansi, '<internals>');\n\t\t}\n\n\t\tif (tag[0] === '#')\n\t\t{\n\t\t\tvar output = [];\n\t\t\tfor (var k in value)\n\t\t\t{\n\t\t\t\tif (k === '$') continue;\n\t\t\t\toutput.push(_Debug_toAnsiString(ansi, value[k]));\n\t\t\t}\n\t\t\treturn '(' + output.join(',') + ')';\n\t\t}\n\n\t\tif (tag === 'Set_elm_builtin')\n\t\t{\n\t\t\treturn _Debug_ctorColor(ansi, 'Set')\n\t\t\t\t+ _Debug_fadeColor(ansi, '.fromList') + ' '\n\t\t\t\t+ _Debug_toAnsiString(ansi, $elm$core$Set$toList(value));\n\t\t}\n\n\t\tif (tag === 'RBNode_elm_builtin' || tag === 'RBEmpty_elm_builtin')\n\t\t{\n\t\t\treturn _Debug_ctorColor(ansi, 'Dict')\n\t\t\t\t+ _Debug_fadeColor(ansi, '.fromList') + ' '\n\t\t\t\t+ _Debug_toAnsiString(ansi, $elm$core$Dict$toList(value));\n\t\t}\n\n\t\tif (tag === 'Array_elm_builtin')\n\t\t{\n\t\t\treturn _Debug_ctorColor(ansi, 'Array')\n\t\t\t\t+ _Debug_fadeColor(ansi, '.fromList') + ' '\n\t\t\t\t+ _Debug_toAnsiString(ansi, $elm$core$Array$toList(value));\n\t\t}\n\n\t\tif (tag === '::' || tag === '[]')\n\t\t{\n\t\t\tvar output = '[';\n\n\t\t\tvalue.b && (output += _Debug_toAnsiString(ansi, value.a), value = value.b)\n\n\t\t\tfor (; value.b; value = value.b) // WHILE_CONS\n\t\t\t{\n\t\t\t\toutput += ',' + _Debug_toAnsiString(ansi, value.a);\n\t\t\t}\n\t\t\treturn output + ']';\n\t\t}\n\n\t\tvar output = '';\n\t\tfor (var i in value)\n\t\t{\n\t\t\tif (i === '$') continue;\n\t\t\tvar str = _Debug_toAnsiString(ansi, value[i]);\n\t\t\tvar c0 = str[0];\n\t\t\tvar parenless = c0 === '{' || c0 === '(' || c0 === '[' || c0 === '<' || c0 === '\"' || str.indexOf(' ') < 0;\n\t\t\toutput += ' ' + (parenless ? str : '(' + str + ')');\n\t\t}\n\t\treturn _Debug_ctorColor(ansi, tag) + output;\n\t}\n\n\tif (typeof DataView === 'function' && value instanceof DataView)\n\t{\n\t\treturn _Debug_stringColor(ansi, '<' + value.byteLength + ' bytes>');\n\t}\n\n\tif (typeof File !== 'undefined' && value instanceof File)\n\t{\n\t\treturn _Debug_internalColor(ansi, '<' + value.name + '>');\n\t}\n\n\tif (typeof value === 'object')\n\t{\n\t\tvar output = [];\n\t\tfor (var key in value)\n\t\t{\n\t\t\tvar field = key[0] === '_' ? key.slice(1) : key;\n\t\t\toutput.push(_Debug_fadeColor(ansi, field) + ' = ' + _Debug_toAnsiString(ansi, value[key]));\n\t\t}\n\t\tif (output.length === 0)\n\t\t{\n\t\t\treturn '{}';\n\t\t}\n\t\treturn '{ ' + output.join(', ') + ' }';\n\t}\n\n\treturn _Debug_internalColor(ansi, '<internals>');\n}\n\nfunction _Debug_addSlashes(str, isChar)\n{\n\tvar s = str\n\t\t.replace(/\\\\/g, '\\\\\\\\')\n\t\t.replace(/\\n/g, '\\\\n')\n\t\t.replace(/\\t/g, '\\\\t')\n\t\t.replace(/\\r/g, '\\\\r')\n\t\t.replace(/\\v/g, '\\\\v')\n\t\t.replace(/\\0/g, '\\\\0');\n\n\tif (isChar)\n\t{\n\t\treturn s.replace(/\\'/g, '\\\\\\'');\n\t}\n\telse\n\t{\n\t\treturn s.replace(/\\\"/g, '\\\\\"');\n\t}\n}\n\nfunction _Debug_ctorColor(ansi, string)\n{\n\treturn ansi ? '\\x1b[96m' + string + '\\x1b[0m' : string;\n}\n\nfunction _Debug_numberColor(ansi, string)\n{\n\treturn ansi ? '\\x1b[95m' + string + '\\x1b[0m' : string;\n}\n\nfunction _Debug_stringColor(ansi, string)\n{\n\treturn ansi ? '\\x1b[93m' + string + '\\x1b[0m' : string;\n}\n\nfunction _Debug_charColor(ansi, string)\n{\n\treturn ansi ? '\\x1b[92m' + string + '\\x1b[0m' : string;\n}\n\nfunction _Debug_fadeColor(ansi, string)\n{\n\treturn ansi ? '\\x1b[37m' + string + '\\x1b[0m' : string;\n}\n\nfunction _Debug_internalColor(ansi, string)\n{\n\treturn ansi ? '\\x1b[36m' + string + '\\x1b[0m' : string;\n}\n\nfunction _Debug_toHexDigit(n)\n{\n\treturn String.fromCharCode(n < 10 ? 48 + n : 55 + n);\n}\n\n\n// CRASH\n\n\nfunction _Debug_crash(identifier)\n{\n\tthrow new Error('https://github.com/elm/core/blob/1.0.0/hints/' + identifier + '.md');\n}\n\n\nfunction _Debug_crash_UNUSED(identifier, fact1, fact2, fact3, fact4)\n{\n\tswitch(identifier)\n\t{\n\t\tcase 0:\n\t\t\tthrow new Error('What node should I take over? In JavaScript I need something like:\\n\\n    Elm.Main.init({\\n        node: document.getElementById(\"elm-node\")\\n    })\\n\\nYou need to do this with any Browser.sandbox or Browser.element program.');\n\n\t\tcase 1:\n\t\t\tthrow new Error('Browser.application programs cannot handle URLs like this:\\n\\n    ' + document.location.href + '\\n\\nWhat is the root? The root of your file system? Try looking at this program with `elm reactor` or some other server.');\n\n\t\tcase 2:\n\t\t\tvar jsonErrorString = fact1;\n\t\t\tthrow new Error('Problem with the flags given to your Elm program on initialization.\\n\\n' + jsonErrorString);\n\n\t\tcase 3:\n\t\t\tvar portName = fact1;\n\t\t\tthrow new Error('There can only be one port named `' + portName + '`, but your program has multiple.');\n\n\t\tcase 4:\n\t\t\tvar portName = fact1;\n\t\t\tvar problem = fact2;\n\t\t\tthrow new Error('Trying to send an unexpected type of value through port `' + portName + '`:\\n' + problem);\n\n\t\tcase 5:\n\t\t\tthrow new Error('Trying to use `(==)` on functions.\\nThere is no way to know if functions are \"the same\" in the Elm sense.\\nRead more about this at https://package.elm-lang.org/packages/elm/core/latest/Basics#== which describes why it is this way and what the better version will look like.');\n\n\t\tcase 6:\n\t\t\tvar moduleName = fact1;\n\t\t\tthrow new Error('Your page is loading multiple Elm scripts with a module named ' + moduleName + '. Maybe a duplicate script is getting loaded accidentally? If not, rename one of them so I know which is which!');\n\n\t\tcase 8:\n\t\t\tvar moduleName = fact1;\n\t\t\tvar region = fact2;\n\t\t\tvar message = fact3;\n\t\t\tthrow new Error('TODO in module `' + moduleName + '` ' + _Debug_regionToString(region) + '\\n\\n' + message);\n\n\t\tcase 9:\n\t\t\tvar moduleName = fact1;\n\t\t\tvar region = fact2;\n\t\t\tvar value = fact3;\n\t\t\tvar message = fact4;\n\t\t\tthrow new Error(\n\t\t\t\t'TODO in module `' + moduleName + '` from the `case` expression '\n\t\t\t\t+ _Debug_regionToString(region) + '\\n\\nIt received the following value:\\n\\n    '\n\t\t\t\t+ _Debug_toString(value).replace('\\n', '\\n    ')\n\t\t\t\t+ '\\n\\nBut the branch that handles it says:\\n\\n    ' + message.replace('\\n', '\\n    ')\n\t\t\t);\n\n\t\tcase 10:\n\t\t\tthrow new Error('Bug in https://github.com/elm/virtual-dom/issues');\n\n\t\tcase 11:\n\t\t\tthrow new Error('Cannot perform mod 0. Division by zero error.');\n\t}\n}\n\nfunction _Debug_regionToString(region)\n{\n\tif (region.am.U === region.au.U)\n\t{\n\t\treturn 'on line ' + region.am.U;\n\t}\n\treturn 'on lines ' + region.am.U + ' through ' + region.au.U;\n}\n\n\n\n// MATH\n\nvar _Basics_add = F2(function(a, b) { return a + b; });\nvar _Basics_sub = F2(function(a, b) { return a - b; });\nvar _Basics_mul = F2(function(a, b) { return a * b; });\nvar _Basics_fdiv = F2(function(a, b) { return a / b; });\nvar _Basics_idiv = F2(function(a, b) { return (a / b) | 0; });\nvar _Basics_pow = F2(Math.pow);\n\nvar _Basics_remainderBy = F2(function(b, a) { return a % b; });\n\n// https://www.microsoft.com/en-us/research/wp-content/uploads/2016/02/divmodnote-letter.pdf\nvar _Basics_modBy = F2(function(modulus, x)\n{\n\tvar answer = x % modulus;\n\treturn modulus === 0\n\t\t? _Debug_crash(11)\n\t\t:\n\t((answer > 0 && modulus < 0) || (answer < 0 && modulus > 0))\n\t\t? answer + modulus\n\t\t: answer;\n});\n\n\n// TRIGONOMETRY\n\nvar _Basics_pi = Math.PI;\nvar _Basics_e = Math.E;\nvar _Basics_cos = Math.cos;\nvar _Basics_sin = Math.sin;\nvar _Basics_tan = Math.tan;\nvar _Basics_acos = Math.acos;\nvar _Basics_asin = Math.asin;\nvar _Basics_atan = Math.atan;\nvar _Basics_atan2 = F2(Math.atan2);\n\n\n// MORE MATH\n\nfunction _Basics_toFloat(x) { return x; }\nfunction _Basics_truncate(n) { return n | 0; }\nfunction _Basics_isInfinite(n) { return n === Infinity || n === -Infinity; }\n\nvar _Basics_ceiling = Math.ceil;\nvar _Basics_floor = Math.floor;\nvar _Basics_round = Math.round;\nvar _Basics_sqrt = Math.sqrt;\nvar _Basics_log = Math.log;\nvar _Basics_isNaN = isNaN;\n\n\n// BOOLEANS\n\nfunction _Basics_not(bool) { return !bool; }\nvar _Basics_and = F2(function(a, b) { return a && b; });\nvar _Basics_or  = F2(function(a, b) { return a || b; });\nvar _Basics_xor = F2(function(a, b) { return a !== b; });\n\n\n\nvar _String_cons = F2(function(chr, str)\n{\n\treturn chr + str;\n});\n\nfunction _String_uncons(string)\n{\n\tvar word = string.charCodeAt(0);\n\treturn !isNaN(word)\n\t\t? $elm$core$Maybe$Just(\n\t\t\t0xD800 <= word && word <= 0xDBFF\n\t\t\t\t? _Utils_Tuple2(_Utils_chr(string[0] + string[1]), string.slice(2))\n\t\t\t\t: _Utils_Tuple2(_Utils_chr(string[0]), string.slice(1))\n\t\t)\n\t\t: $elm$core$Maybe$Nothing;\n}\n\nvar _String_append = F2(function(a, b)\n{\n\treturn a + b;\n});\n\nfunction _String_length(str)\n{\n\treturn str.length;\n}\n\nvar _String_map = F2(function(func, string)\n{\n\tvar len = string.length;\n\tvar array = new Array(len);\n\tvar i = 0;\n\twhile (i < len)\n\t{\n\t\tvar word = string.charCodeAt(i);\n\t\tif (0xD800 <= word && word <= 0xDBFF)\n\t\t{\n\t\t\tarray[i] = func(_Utils_chr(string[i] + string[i+1]));\n\t\t\ti += 2;\n\t\t\tcontinue;\n\t\t}\n\t\tarray[i] = func(_Utils_chr(string[i]));\n\t\ti++;\n\t}\n\treturn array.join('');\n});\n\nvar _String_filter = F2(function(isGood, str)\n{\n\tvar arr = [];\n\tvar len = str.length;\n\tvar i = 0;\n\twhile (i < len)\n\t{\n\t\tvar char = str[i];\n\t\tvar word = str.charCodeAt(i);\n\t\ti++;\n\t\tif (0xD800 <= word && word <= 0xDBFF)\n\t\t{\n\t\t\tchar += str[i];\n\t\t\ti++;\n\t\t}\n\n\t\tif (isGood(_Utils_chr(char)))\n\t\t{\n\t\t\tarr.push(char);\n\t\t}\n\t}\n\treturn arr.join('');\n});\n\nfunction _String_reverse(str)\n{\n\tvar len = str.length;\n\tvar arr = new Array(len);\n\tvar i = 0;\n\twhile (i < len)\n\t{\n\t\tvar word = str.charCodeAt(i);\n\t\tif (0xD800 <= word && word <= 0xDBFF)\n\t\t{\n\t\t\tarr[len - i] = str[i + 1];\n\t\t\ti++;\n\t\t\tarr[len - i] = str[i - 1];\n\t\t\ti++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tarr[len - i] = str[i];\n\t\t\ti++;\n\t\t}\n\t}\n\treturn arr.join('');\n}\n\nvar _String_foldl = F3(function(func, state, string)\n{\n\tvar len = string.length;\n\tvar i = 0;\n\twhile (i < len)\n\t{\n\t\tvar char = string[i];\n\t\tvar word = string.charCodeAt(i);\n\t\ti++;\n\t\tif (0xD800 <= word && word <= 0xDBFF)\n\t\t{\n\t\t\tchar += string[i];\n\t\t\ti++;\n\t\t}\n\t\tstate = A2(func, _Utils_chr(char), state);\n\t}\n\treturn state;\n});\n\nvar _String_foldr = F3(function(func, state, string)\n{\n\tvar i = string.length;\n\twhile (i--)\n\t{\n\t\tvar char = string[i];\n\t\tvar word = string.charCodeAt(i);\n\t\tif (0xDC00 <= word && word <= 0xDFFF)\n\t\t{\n\t\t\ti--;\n\t\t\tchar = string[i] + char;\n\t\t}\n\t\tstate = A2(func, _Utils_chr(char), state);\n\t}\n\treturn state;\n});\n\nvar _String_split = F2(function(sep, str)\n{\n\treturn str.split(sep);\n});\n\nvar _String_join = F2(function(sep, strs)\n{\n\treturn strs.join(sep);\n});\n\nvar _String_slice = F3(function(start, end, str) {\n\treturn str.slice(start, end);\n});\n\nfunction _String_trim(str)\n{\n\treturn str.trim();\n}\n\nfunction _String_trimLeft(str)\n{\n\treturn str.replace(/^\\s+/, '');\n}\n\nfunction _String_trimRight(str)\n{\n\treturn str.replace(/\\s+$/, '');\n}\n\nfunction _String_words(str)\n{\n\treturn _List_fromArray(str.trim().split(/\\s+/g));\n}\n\nfunction _String_lines(str)\n{\n\treturn _List_fromArray(str.split(/\\r\\n|\\r|\\n/g));\n}\n\nfunction _String_toUpper(str)\n{\n\treturn str.toUpperCase();\n}\n\nfunction _String_toLower(str)\n{\n\treturn str.toLowerCase();\n}\n\nvar _String_any = F2(function(isGood, string)\n{\n\tvar i = string.length;\n\twhile (i--)\n\t{\n\t\tvar char = string[i];\n\t\tvar word = string.charCodeAt(i);\n\t\tif (0xDC00 <= word && word <= 0xDFFF)\n\t\t{\n\t\t\ti--;\n\t\t\tchar = string[i] + char;\n\t\t}\n\t\tif (isGood(_Utils_chr(char)))\n\t\t{\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n});\n\nvar _String_all = F2(function(isGood, string)\n{\n\tvar i = string.length;\n\twhile (i--)\n\t{\n\t\tvar char = string[i];\n\t\tvar word = string.charCodeAt(i);\n\t\tif (0xDC00 <= word && word <= 0xDFFF)\n\t\t{\n\t\t\ti--;\n\t\t\tchar = string[i] + char;\n\t\t}\n\t\tif (!isGood(_Utils_chr(char)))\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n});\n\nvar _String_contains = F2(function(sub, str)\n{\n\treturn str.indexOf(sub) > -1;\n});\n\nvar _String_startsWith = F2(function(sub, str)\n{\n\treturn str.indexOf(sub) === 0;\n});\n\nvar _String_endsWith = F2(function(sub, str)\n{\n\treturn str.length >= sub.length &&\n\t\tstr.lastIndexOf(sub) === str.length - sub.length;\n});\n\nvar _String_indexes = F2(function(sub, str)\n{\n\tvar subLen = sub.length;\n\n\tif (subLen < 1)\n\t{\n\t\treturn _List_Nil;\n\t}\n\n\tvar i = 0;\n\tvar is = [];\n\n\twhile ((i = str.indexOf(sub, i)) > -1)\n\t{\n\t\tis.push(i);\n\t\ti = i + subLen;\n\t}\n\n\treturn _List_fromArray(is);\n});\n\n\n// TO STRING\n\nfunction _String_fromNumber(number)\n{\n\treturn number + '';\n}\n\n\n// INT CONVERSIONS\n\nfunction _String_toInt(str)\n{\n\tvar total = 0;\n\tvar code0 = str.charCodeAt(0);\n\tvar start = code0 == 0x2B /* + */ || code0 == 0x2D /* - */ ? 1 : 0;\n\n\tfor (var i = start; i < str.length; ++i)\n\t{\n\t\tvar code = str.charCodeAt(i);\n\t\tif (code < 0x30 || 0x39 < code)\n\t\t{\n\t\t\treturn $elm$core$Maybe$Nothing;\n\t\t}\n\t\ttotal = 10 * total + code - 0x30;\n\t}\n\n\treturn i == start\n\t\t? $elm$core$Maybe$Nothing\n\t\t: $elm$core$Maybe$Just(code0 == 0x2D ? -total : total);\n}\n\n\n// FLOAT CONVERSIONS\n\nfunction _String_toFloat(s)\n{\n\t// check if it is a hex, octal, or binary number\n\tif (s.length === 0 || /[\\sxbo]/.test(s))\n\t{\n\t\treturn $elm$core$Maybe$Nothing;\n\t}\n\tvar n = +s;\n\t// faster isNaN check\n\treturn n === n ? $elm$core$Maybe$Just(n) : $elm$core$Maybe$Nothing;\n}\n\nfunction _String_fromList(chars)\n{\n\treturn _List_toArray(chars).join('');\n}\n\n\n\n\nfunction _Char_toCode(char)\n{\n\tvar code = char.charCodeAt(0);\n\tif (0xD800 <= code && code <= 0xDBFF)\n\t{\n\t\treturn (code - 0xD800) * 0x400 + char.charCodeAt(1) - 0xDC00 + 0x10000\n\t}\n\treturn code;\n}\n\nfunction _Char_fromCode(code)\n{\n\treturn _Utils_chr(\n\t\t(code < 0 || 0x10FFFF < code)\n\t\t\t? '\\uFFFD'\n\t\t\t:\n\t\t(code <= 0xFFFF)\n\t\t\t? String.fromCharCode(code)\n\t\t\t:\n\t\t(code -= 0x10000,\n\t\t\tString.fromCharCode(Math.floor(code / 0x400) + 0xD800, code % 0x400 + 0xDC00)\n\t\t)\n\t);\n}\n\nfunction _Char_toUpper(char)\n{\n\treturn _Utils_chr(char.toUpperCase());\n}\n\nfunction _Char_toLower(char)\n{\n\treturn _Utils_chr(char.toLowerCase());\n}\n\nfunction _Char_toLocaleUpper(char)\n{\n\treturn _Utils_chr(char.toLocaleUpperCase());\n}\n\nfunction _Char_toLocaleLower(char)\n{\n\treturn _Utils_chr(char.toLocaleLowerCase());\n}\n\n\n\n/**_UNUSED/\nfunction _Json_errorToString(error)\n{\n\treturn $elm$json$Json$Decode$errorToString(error);\n}\n//*/\n\n\n// CORE DECODERS\n\nfunction _Json_succeed(msg)\n{\n\treturn {\n\t\t$: 0,\n\t\ta: msg\n\t};\n}\n\nfunction _Json_fail(msg)\n{\n\treturn {\n\t\t$: 1,\n\t\ta: msg\n\t};\n}\n\nfunction _Json_decodePrim(decoder)\n{\n\treturn { $: 2, b: decoder };\n}\n\nvar _Json_decodeInt = _Json_decodePrim(function(value) {\n\treturn (typeof value !== 'number')\n\t\t? _Json_expecting('an INT', value)\n\t\t:\n\t(-2147483647 < value && value < 2147483647 && (value | 0) === value)\n\t\t? $elm$core$Result$Ok(value)\n\t\t:\n\t(isFinite(value) && !(value % 1))\n\t\t? $elm$core$Result$Ok(value)\n\t\t: _Json_expecting('an INT', value);\n});\n\nvar _Json_decodeBool = _Json_decodePrim(function(value) {\n\treturn (typeof value === 'boolean')\n\t\t? $elm$core$Result$Ok(value)\n\t\t: _Json_expecting('a BOOL', value);\n});\n\nvar _Json_decodeFloat = _Json_decodePrim(function(value) {\n\treturn (typeof value === 'number')\n\t\t? $elm$core$Result$Ok(value)\n\t\t: _Json_expecting('a FLOAT', value);\n});\n\nvar _Json_decodeValue = _Json_decodePrim(function(value) {\n\treturn $elm$core$Result$Ok(_Json_wrap(value));\n});\n\nvar _Json_decodeString = _Json_decodePrim(function(value) {\n\treturn (typeof value === 'string')\n\t\t? $elm$core$Result$Ok(value)\n\t\t: (value instanceof String)\n\t\t\t? $elm$core$Result$Ok(value + '')\n\t\t\t: _Json_expecting('a STRING', value);\n});\n\nfunction _Json_decodeList(decoder) { return { $: 3, b: decoder }; }\nfunction _Json_decodeArray(decoder) { return { $: 4, b: decoder }; }\n\nfunction _Json_decodeNull(value) { return { $: 5, c: value }; }\n\nvar _Json_decodeField = F2(function(field, decoder)\n{\n\treturn {\n\t\t$: 6,\n\t\td: field,\n\t\tb: decoder\n\t};\n});\n\nvar _Json_decodeIndex = F2(function(index, decoder)\n{\n\treturn {\n\t\t$: 7,\n\t\te: index,\n\t\tb: decoder\n\t};\n});\n\nfunction _Json_decodeKeyValuePairs(decoder)\n{\n\treturn {\n\t\t$: 8,\n\t\tb: decoder\n\t};\n}\n\nfunction _Json_mapMany(f, decoders)\n{\n\treturn {\n\t\t$: 9,\n\t\tf: f,\n\t\tg: decoders\n\t};\n}\n\nvar _Json_andThen = F2(function(callback, decoder)\n{\n\treturn {\n\t\t$: 10,\n\t\tb: decoder,\n\t\th: callback\n\t};\n});\n\nfunction _Json_oneOf(decoders)\n{\n\treturn {\n\t\t$: 11,\n\t\tg: decoders\n\t};\n}\n\n\n// DECODING OBJECTS\n\nvar _Json_map1 = F2(function(f, d1)\n{\n\treturn _Json_mapMany(f, [d1]);\n});\n\nvar _Json_map2 = F3(function(f, d1, d2)\n{\n\treturn _Json_mapMany(f, [d1, d2]);\n});\n\nvar _Json_map3 = F4(function(f, d1, d2, d3)\n{\n\treturn _Json_mapMany(f, [d1, d2, d3]);\n});\n\nvar _Json_map4 = F5(function(f, d1, d2, d3, d4)\n{\n\treturn _Json_mapMany(f, [d1, d2, d3, d4]);\n});\n\nvar _Json_map5 = F6(function(f, d1, d2, d3, d4, d5)\n{\n\treturn _Json_mapMany(f, [d1, d2, d3, d4, d5]);\n});\n\nvar _Json_map6 = F7(function(f, d1, d2, d3, d4, d5, d6)\n{\n\treturn _Json_mapMany(f, [d1, d2, d3, d4, d5, d6]);\n});\n\nvar _Json_map7 = F8(function(f, d1, d2, d3, d4, d5, d6, d7)\n{\n\treturn _Json_mapMany(f, [d1, d2, d3, d4, d5, d6, d7]);\n});\n\nvar _Json_map8 = F9(function(f, d1, d2, d3, d4, d5, d6, d7, d8)\n{\n\treturn _Json_mapMany(f, [d1, d2, d3, d4, d5, d6, d7, d8]);\n});\n\n\n// DECODE\n\nvar _Json_runOnString = F2(function(decoder, string)\n{\n\ttry\n\t{\n\t\tvar value = JSON.parse(string);\n\t\treturn _Json_runHelp(decoder, value);\n\t}\n\tcatch (e)\n\t{\n\t\treturn $elm$core$Result$Err(A2($elm$json$Json$Decode$Failure, 'This is not valid JSON! ' + e.message, _Json_wrap(string)));\n\t}\n});\n\nvar _Json_run = F2(function(decoder, value)\n{\n\treturn _Json_runHelp(decoder, _Json_unwrap(value));\n});\n\nfunction _Json_runHelp(decoder, value)\n{\n\tswitch (decoder.$)\n\t{\n\t\tcase 2:\n\t\t\treturn decoder.b(value);\n\n\t\tcase 5:\n\t\t\treturn (value === null)\n\t\t\t\t? $elm$core$Result$Ok(decoder.c)\n\t\t\t\t: _Json_expecting('null', value);\n\n\t\tcase 3:\n\t\t\tif (!_Json_isArray(value))\n\t\t\t{\n\t\t\t\treturn _Json_expecting('a LIST', value);\n\t\t\t}\n\t\t\treturn _Json_runArrayDecoder(decoder.b, value, _List_fromArray);\n\n\t\tcase 4:\n\t\t\tif (!_Json_isArray(value))\n\t\t\t{\n\t\t\t\treturn _Json_expecting('an ARRAY', value);\n\t\t\t}\n\t\t\treturn _Json_runArrayDecoder(decoder.b, value, _Json_toElmArray);\n\n\t\tcase 6:\n\t\t\tvar field = decoder.d;\n\t\t\tif (typeof value !== 'object' || value === null || !(field in value))\n\t\t\t{\n\t\t\t\treturn _Json_expecting('an OBJECT with a field named `' + field + '`', value);\n\t\t\t}\n\t\t\tvar result = _Json_runHelp(decoder.b, value[field]);\n\t\t\treturn ($elm$core$Result$isOk(result)) ? result : $elm$core$Result$Err(A2($elm$json$Json$Decode$Field, field, result.a));\n\n\t\tcase 7:\n\t\t\tvar index = decoder.e;\n\t\t\tif (!_Json_isArray(value))\n\t\t\t{\n\t\t\t\treturn _Json_expecting('an ARRAY', value);\n\t\t\t}\n\t\t\tif (index >= value.length)\n\t\t\t{\n\t\t\t\treturn _Json_expecting('a LONGER array. Need index ' + index + ' but only see ' + value.length + ' entries', value);\n\t\t\t}\n\t\t\tvar result = _Json_runHelp(decoder.b, value[index]);\n\t\t\treturn ($elm$core$Result$isOk(result)) ? result : $elm$core$Result$Err(A2($elm$json$Json$Decode$Index, index, result.a));\n\n\t\tcase 8:\n\t\t\tif (typeof value !== 'object' || value === null || _Json_isArray(value))\n\t\t\t{\n\t\t\t\treturn _Json_expecting('an OBJECT', value);\n\t\t\t}\n\n\t\t\tvar keyValuePairs = _List_Nil;\n\t\t\t// TODO test perf of Object.keys and switch when support is good enough\n\t\t\tfor (var key in value)\n\t\t\t{\n\t\t\t\tif (value.hasOwnProperty(key))\n\t\t\t\t{\n\t\t\t\t\tvar result = _Json_runHelp(decoder.b, value[key]);\n\t\t\t\t\tif (!$elm$core$Result$isOk(result))\n\t\t\t\t\t{\n\t\t\t\t\t\treturn $elm$core$Result$Err(A2($elm$json$Json$Decode$Field, key, result.a));\n\t\t\t\t\t}\n\t\t\t\t\tkeyValuePairs = _List_Cons(_Utils_Tuple2(key, result.a), keyValuePairs);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn $elm$core$Result$Ok($elm$core$List$reverse(keyValuePairs));\n\n\t\tcase 9:\n\t\t\tvar answer = decoder.f;\n\t\t\tvar decoders = decoder.g;\n\t\t\tfor (var i = 0; i < decoders.length; i++)\n\t\t\t{\n\t\t\t\tvar result = _Json_runHelp(decoders[i], value);\n\t\t\t\tif (!$elm$core$Result$isOk(result))\n\t\t\t\t{\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\t\t\t\tanswer = answer(result.a);\n\t\t\t}\n\t\t\treturn $elm$core$Result$Ok(answer);\n\n\t\tcase 10:\n\t\t\tvar result = _Json_runHelp(decoder.b, value);\n\t\t\treturn (!$elm$core$Result$isOk(result))\n\t\t\t\t? result\n\t\t\t\t: _Json_runHelp(decoder.h(result.a), value);\n\n\t\tcase 11:\n\t\t\tvar errors = _List_Nil;\n\t\t\tfor (var temp = decoder.g; temp.b; temp = temp.b) // WHILE_CONS\n\t\t\t{\n\t\t\t\tvar result = _Json_runHelp(temp.a, value);\n\t\t\t\tif ($elm$core$Result$isOk(result))\n\t\t\t\t{\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\t\t\t\terrors = _List_Cons(result.a, errors);\n\t\t\t}\n\t\t\treturn $elm$core$Result$Err($elm$json$Json$Decode$OneOf($elm$core$List$reverse(errors)));\n\n\t\tcase 1:\n\t\t\treturn $elm$core$Result$Err(A2($elm$json$Json$Decode$Failure, decoder.a, _Json_wrap(value)));\n\n\t\tcase 0:\n\t\t\treturn $elm$core$Result$Ok(decoder.a);\n\t}\n}\n\nfunction _Json_runArrayDecoder(decoder, value, toElmValue)\n{\n\tvar len = value.length;\n\tvar array = new Array(len);\n\tfor (var i = 0; i < len; i++)\n\t{\n\t\tvar result = _Json_runHelp(decoder, value[i]);\n\t\tif (!$elm$core$Result$isOk(result))\n\t\t{\n\t\t\treturn $elm$core$Result$Err(A2($elm$json$Json$Decode$Index, i, result.a));\n\t\t}\n\t\tarray[i] = result.a;\n\t}\n\treturn $elm$core$Result$Ok(toElmValue(array));\n}\n\nfunction _Json_isArray(value)\n{\n\treturn Array.isArray(value) || (typeof FileList === 'function' && value instanceof FileList);\n}\n\nfunction _Json_toElmArray(array)\n{\n\treturn A2($elm$core$Array$initialize, array.length, function(i) { return array[i]; });\n}\n\nfunction _Json_expecting(type, value)\n{\n\treturn $elm$core$Result$Err(A2($elm$json$Json$Decode$Failure, 'Expecting ' + type, _Json_wrap(value)));\n}\n\n\n// EQUALITY\n\nfunction _Json_equality(x, y)\n{\n\tif (x === y)\n\t{\n\t\treturn true;\n\t}\n\n\tif (x.$ !== y.$)\n\t{\n\t\treturn false;\n\t}\n\n\tswitch (x.$)\n\t{\n\t\tcase 0:\n\t\tcase 1:\n\t\t\treturn x.a === y.a;\n\n\t\tcase 2:\n\t\t\treturn x.b === y.b;\n\n\t\tcase 5:\n\t\t\treturn x.c === y.c;\n\n\t\tcase 3:\n\t\tcase 4:\n\t\tcase 8:\n\t\t\treturn _Json_equality(x.b, y.b);\n\n\t\tcase 6:\n\t\t\treturn x.d === y.d && _Json_equality(x.b, y.b);\n\n\t\tcase 7:\n\t\t\treturn x.e === y.e && _Json_equality(x.b, y.b);\n\n\t\tcase 9:\n\t\t\treturn x.f === y.f && _Json_listEquality(x.g, y.g);\n\n\t\tcase 10:\n\t\t\treturn x.h === y.h && _Json_equality(x.b, y.b);\n\n\t\tcase 11:\n\t\t\treturn _Json_listEquality(x.g, y.g);\n\t}\n}\n\nfunction _Json_listEquality(aDecoders, bDecoders)\n{\n\tvar len = aDecoders.length;\n\tif (len !== bDecoders.length)\n\t{\n\t\treturn false;\n\t}\n\tfor (var i = 0; i < len; i++)\n\t{\n\t\tif (!_Json_equality(aDecoders[i], bDecoders[i]))\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\n\n\n// ENCODE\n\nvar _Json_encode = F2(function(indentLevel, value)\n{\n\treturn JSON.stringify(_Json_unwrap(value), null, indentLevel) + '';\n});\n\nfunction _Json_wrap_UNUSED(value) { return { $: 0, a: value }; }\nfunction _Json_unwrap_UNUSED(value) { return value.a; }\n\nfunction _Json_wrap(value) { return value; }\nfunction _Json_unwrap(value) { return value; }\n\nfunction _Json_emptyArray() { return []; }\nfunction _Json_emptyObject() { return {}; }\n\nvar _Json_addField = F3(function(key, value, object)\n{\n\tobject[key] = _Json_unwrap(value);\n\treturn object;\n});\n\nfunction _Json_addEntry(func)\n{\n\treturn F2(function(entry, array)\n\t{\n\t\tarray.push(_Json_unwrap(func(entry)));\n\t\treturn array;\n\t});\n}\n\nvar _Json_encodeNull = _Json_wrap(null);\n\n\n\n// TASKS\n\nfunction _Scheduler_succeed(value)\n{\n\treturn {\n\t\t$: 0,\n\t\ta: value\n\t};\n}\n\nfunction _Scheduler_fail(error)\n{\n\treturn {\n\t\t$: 1,\n\t\ta: error\n\t};\n}\n\nfunction _Scheduler_binding(callback)\n{\n\treturn {\n\t\t$: 2,\n\t\tb: callback,\n\t\tc: null\n\t};\n}\n\nvar _Scheduler_andThen = F2(function(callback, task)\n{\n\treturn {\n\t\t$: 3,\n\t\tb: callback,\n\t\td: task\n\t};\n});\n\nvar _Scheduler_onError = F2(function(callback, task)\n{\n\treturn {\n\t\t$: 4,\n\t\tb: callback,\n\t\td: task\n\t};\n});\n\nfunction _Scheduler_receive(callback)\n{\n\treturn {\n\t\t$: 5,\n\t\tb: callback\n\t};\n}\n\n\n// PROCESSES\n\nvar _Scheduler_guid = 0;\n\nfunction _Scheduler_rawSpawn(task)\n{\n\tvar proc = {\n\t\t$: 0,\n\t\te: _Scheduler_guid++,\n\t\tf: task,\n\t\tg: null,\n\t\th: []\n\t};\n\n\t_Scheduler_enqueue(proc);\n\n\treturn proc;\n}\n\nfunction _Scheduler_spawn(task)\n{\n\treturn _Scheduler_binding(function(callback) {\n\t\tcallback(_Scheduler_succeed(_Scheduler_rawSpawn(task)));\n\t});\n}\n\nfunction _Scheduler_rawSend(proc, msg)\n{\n\tproc.h.push(msg);\n\t_Scheduler_enqueue(proc);\n}\n\nvar _Scheduler_send = F2(function(proc, msg)\n{\n\treturn _Scheduler_binding(function(callback) {\n\t\t_Scheduler_rawSend(proc, msg);\n\t\tcallback(_Scheduler_succeed(_Utils_Tuple0));\n\t});\n});\n\nfunction _Scheduler_kill(proc)\n{\n\treturn _Scheduler_binding(function(callback) {\n\t\tvar task = proc.f;\n\t\tif (task.$ === 2 && task.c)\n\t\t{\n\t\t\ttask.c();\n\t\t}\n\n\t\tproc.f = null;\n\n\t\tcallback(_Scheduler_succeed(_Utils_Tuple0));\n\t});\n}\n\n\n/* STEP PROCESSES\n\ntype alias Process =\n  { $ : tag\n  , id : unique_id\n  , root : Task\n  , stack : null | { $: SUCCEED | FAIL, a: callback, b: stack }\n  , mailbox : [msg]\n  }\n\n*/\n\n\nvar _Scheduler_working = false;\nvar _Scheduler_queue = [];\n\n\nfunction _Scheduler_enqueue(proc)\n{\n\t_Scheduler_queue.push(proc);\n\tif (_Scheduler_working)\n\t{\n\t\treturn;\n\t}\n\t_Scheduler_working = true;\n\twhile (proc = _Scheduler_queue.shift())\n\t{\n\t\t_Scheduler_step(proc);\n\t}\n\t_Scheduler_working = false;\n}\n\n\nfunction _Scheduler_step(proc)\n{\n\twhile (proc.f)\n\t{\n\t\tvar rootTag = proc.f.$;\n\t\tif (rootTag === 0 || rootTag === 1)\n\t\t{\n\t\t\twhile (proc.g && proc.g.$ !== rootTag)\n\t\t\t{\n\t\t\t\tproc.g = proc.g.i;\n\t\t\t}\n\t\t\tif (!proc.g)\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tproc.f = proc.g.b(proc.f.a);\n\t\t\tproc.g = proc.g.i;\n\t\t}\n\t\telse if (rootTag === 2)\n\t\t{\n\t\t\tproc.f.c = proc.f.b(function(newRoot) {\n\t\t\t\tproc.f = newRoot;\n\t\t\t\t_Scheduler_enqueue(proc);\n\t\t\t});\n\t\t\treturn;\n\t\t}\n\t\telse if (rootTag === 5)\n\t\t{\n\t\t\tif (proc.h.length === 0)\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tproc.f = proc.f.b(proc.h.shift());\n\t\t}\n\t\telse // if (rootTag === 3 || rootTag === 4)\n\t\t{\n\t\t\tproc.g = {\n\t\t\t\t$: rootTag === 3 ? 0 : 1,\n\t\t\t\tb: proc.f.b,\n\t\t\t\ti: proc.g\n\t\t\t};\n\t\t\tproc.f = proc.f.d;\n\t\t}\n\t}\n}\n\n\n\nfunction _Process_sleep(time)\n{\n\treturn _Scheduler_binding(function(callback) {\n\t\tvar id = setTimeout(function() {\n\t\t\tcallback(_Scheduler_succeed(_Utils_Tuple0));\n\t\t}, time);\n\n\t\treturn function() { clearTimeout(id); };\n\t});\n}\n\n\n\n\n// PROGRAMS\n\n\nvar _Platform_worker = F4(function(impl, flagDecoder, debugMetadata, args)\n{\n\treturn _Platform_initialize(\n\t\tflagDecoder,\n\t\targs,\n\t\timpl.bn,\n\t\timpl.bx,\n\t\timpl.bv,\n\t\tfunction() { return function() {} }\n\t);\n});\n\n\n\n// INITIALIZE A PROGRAM\n\n\nfunction _Platform_initialize(flagDecoder, args, init, update, subscriptions, stepperBuilder)\n{\n\tvar result = A2(_Json_run, flagDecoder, _Json_wrap(args ? args['flags'] : undefined));\n\t$elm$core$Result$isOk(result) || _Debug_crash(2 /**_UNUSED/, _Json_errorToString(result.a) /**/);\n\tvar managers = {};\n\tresult = init(result.a);\n\tvar model = result.a;\n\tvar stepper = stepperBuilder(sendToApp, model);\n\tvar ports = _Platform_setupEffects(managers, sendToApp);\n\n\tfunction sendToApp(msg, viewMetadata)\n\t{\n\t\tresult = A2(update, msg, model);\n\t\tstepper(model = result.a, viewMetadata);\n\t\t_Platform_enqueueEffects(managers, result.b, subscriptions(model));\n\t}\n\n\t_Platform_enqueueEffects(managers, result.b, subscriptions(model));\n\n\treturn ports ? { ports: ports } : {};\n}\n\n\n\n// TRACK PRELOADS\n//\n// This is used by code in elm/browser and elm/http\n// to register any HTTP requests that are triggered by init.\n//\n\n\nvar _Platform_preload;\n\n\nfunction _Platform_registerPreload(url)\n{\n\t_Platform_preload.add(url);\n}\n\n\n\n// EFFECT MANAGERS\n\n\nvar _Platform_effectManagers = {};\n\n\nfunction _Platform_setupEffects(managers, sendToApp)\n{\n\tvar ports;\n\n\t// setup all necessary effect managers\n\tfor (var key in _Platform_effectManagers)\n\t{\n\t\tvar manager = _Platform_effectManagers[key];\n\n\t\tif (manager.a)\n\t\t{\n\t\t\tports = ports || {};\n\t\t\tports[key] = manager.a(key, sendToApp);\n\t\t}\n\n\t\tmanagers[key] = _Platform_instantiateManager(manager, sendToApp);\n\t}\n\n\treturn ports;\n}\n\n\nfunction _Platform_createManager(init, onEffects, onSelfMsg, cmdMap, subMap)\n{\n\treturn {\n\t\tb: init,\n\t\tc: onEffects,\n\t\td: onSelfMsg,\n\t\te: cmdMap,\n\t\tf: subMap\n\t};\n}\n\n\nfunction _Platform_instantiateManager(info, sendToApp)\n{\n\tvar router = {\n\t\tg: sendToApp,\n\t\th: undefined\n\t};\n\n\tvar onEffects = info.c;\n\tvar onSelfMsg = info.d;\n\tvar cmdMap = info.e;\n\tvar subMap = info.f;\n\n\tfunction loop(state)\n\t{\n\t\treturn A2(_Scheduler_andThen, loop, _Scheduler_receive(function(msg)\n\t\t{\n\t\t\tvar value = msg.a;\n\n\t\t\tif (msg.$ === 0)\n\t\t\t{\n\t\t\t\treturn A3(onSelfMsg, router, value, state);\n\t\t\t}\n\n\t\t\treturn cmdMap && subMap\n\t\t\t\t? A4(onEffects, router, value.i, value.j, state)\n\t\t\t\t: A3(onEffects, router, cmdMap ? value.i : value.j, state);\n\t\t}));\n\t}\n\n\treturn router.h = _Scheduler_rawSpawn(A2(_Scheduler_andThen, loop, info.b));\n}\n\n\n\n// ROUTING\n\n\nvar _Platform_sendToApp = F2(function(router, msg)\n{\n\treturn _Scheduler_binding(function(callback)\n\t{\n\t\trouter.g(msg);\n\t\tcallback(_Scheduler_succeed(_Utils_Tuple0));\n\t});\n});\n\n\nvar _Platform_sendToSelf = F2(function(router, msg)\n{\n\treturn A2(_Scheduler_send, router.h, {\n\t\t$: 0,\n\t\ta: msg\n\t});\n});\n\n\n\n// BAGS\n\n\nfunction _Platform_leaf(home)\n{\n\treturn function(value)\n\t{\n\t\treturn {\n\t\t\t$: 1,\n\t\t\tk: home,\n\t\t\tl: value\n\t\t};\n\t};\n}\n\n\nfunction _Platform_batch(list)\n{\n\treturn {\n\t\t$: 2,\n\t\tm: list\n\t};\n}\n\n\nvar _Platform_map = F2(function(tagger, bag)\n{\n\treturn {\n\t\t$: 3,\n\t\tn: tagger,\n\t\to: bag\n\t}\n});\n\n\n\n// PIPE BAGS INTO EFFECT MANAGERS\n//\n// Effects must be queued!\n//\n// Say your init contains a synchronous command, like Time.now or Time.here\n//\n//   - This will produce a batch of effects (FX_1)\n//   - The synchronous task triggers the subsequent `update` call\n//   - This will produce a batch of effects (FX_2)\n//\n// If we just start dispatching FX_2, subscriptions from FX_2 can be processed\n// before subscriptions from FX_1. No good! Earlier versions of this code had\n// this problem, leading to these reports:\n//\n//   https://github.com/elm/core/issues/980\n//   https://github.com/elm/core/pull/981\n//   https://github.com/elm/compiler/issues/1776\n//\n// The queue is necessary to avoid ordering issues for synchronous commands.\n\n\n// Why use true/false here? Why not just check the length of the queue?\n// The goal is to detect \"are we currently dispatching effects?\" If we\n// are, we need to bail and let the ongoing while loop handle things.\n//\n// Now say the queue has 1 element. When we dequeue the final element,\n// the queue will be empty, but we are still actively dispatching effects.\n// So you could get queue jumping in a really tricky category of cases.\n//\nvar _Platform_effectsQueue = [];\nvar _Platform_effectsActive = false;\n\n\nfunction _Platform_enqueueEffects(managers, cmdBag, subBag)\n{\n\t_Platform_effectsQueue.push({ p: managers, q: cmdBag, r: subBag });\n\n\tif (_Platform_effectsActive) return;\n\n\t_Platform_effectsActive = true;\n\tfor (var fx; fx = _Platform_effectsQueue.shift(); )\n\t{\n\t\t_Platform_dispatchEffects(fx.p, fx.q, fx.r);\n\t}\n\t_Platform_effectsActive = false;\n}\n\n\nfunction _Platform_dispatchEffects(managers, cmdBag, subBag)\n{\n\tvar effectsDict = {};\n\t_Platform_gatherEffects(true, cmdBag, effectsDict, null);\n\t_Platform_gatherEffects(false, subBag, effectsDict, null);\n\n\tfor (var home in managers)\n\t{\n\t\t_Scheduler_rawSend(managers[home], {\n\t\t\t$: 'fx',\n\t\t\ta: effectsDict[home] || { i: _List_Nil, j: _List_Nil }\n\t\t});\n\t}\n}\n\n\nfunction _Platform_gatherEffects(isCmd, bag, effectsDict, taggers)\n{\n\tswitch (bag.$)\n\t{\n\t\tcase 1:\n\t\t\tvar home = bag.k;\n\t\t\tvar effect = _Platform_toEffect(isCmd, home, taggers, bag.l);\n\t\t\teffectsDict[home] = _Platform_insert(isCmd, effect, effectsDict[home]);\n\t\t\treturn;\n\n\t\tcase 2:\n\t\t\tfor (var list = bag.m; list.b; list = list.b) // WHILE_CONS\n\t\t\t{\n\t\t\t\t_Platform_gatherEffects(isCmd, list.a, effectsDict, taggers);\n\t\t\t}\n\t\t\treturn;\n\n\t\tcase 3:\n\t\t\t_Platform_gatherEffects(isCmd, bag.o, effectsDict, {\n\t\t\t\ts: bag.n,\n\t\t\t\tt: taggers\n\t\t\t});\n\t\t\treturn;\n\t}\n}\n\n\nfunction _Platform_toEffect(isCmd, home, taggers, value)\n{\n\tfunction applyTaggers(x)\n\t{\n\t\tfor (var temp = taggers; temp; temp = temp.t)\n\t\t{\n\t\t\tx = temp.s(x);\n\t\t}\n\t\treturn x;\n\t}\n\n\tvar map = isCmd\n\t\t? _Platform_effectManagers[home].e\n\t\t: _Platform_effectManagers[home].f;\n\n\treturn A2(map, applyTaggers, value)\n}\n\n\nfunction _Platform_insert(isCmd, newEffect, effects)\n{\n\teffects = effects || { i: _List_Nil, j: _List_Nil };\n\n\tisCmd\n\t\t? (effects.i = _List_Cons(newEffect, effects.i))\n\t\t: (effects.j = _List_Cons(newEffect, effects.j));\n\n\treturn effects;\n}\n\n\n\n// PORTS\n\n\nfunction _Platform_checkPortName(name)\n{\n\tif (_Platform_effectManagers[name])\n\t{\n\t\t_Debug_crash(3, name)\n\t}\n}\n\n\n\n// OUTGOING PORTS\n\n\nfunction _Platform_outgoingPort(name, converter)\n{\n\t_Platform_checkPortName(name);\n\t_Platform_effectManagers[name] = {\n\t\te: _Platform_outgoingPortMap,\n\t\tu: converter,\n\t\ta: _Platform_setupOutgoingPort\n\t};\n\treturn _Platform_leaf(name);\n}\n\n\nvar _Platform_outgoingPortMap = F2(function(tagger, value) { return value; });\n\n\nfunction _Platform_setupOutgoingPort(name)\n{\n\tvar subs = [];\n\tvar converter = _Platform_effectManagers[name].u;\n\n\t// CREATE MANAGER\n\n\tvar init = _Process_sleep(0);\n\n\t_Platform_effectManagers[name].b = init;\n\t_Platform_effectManagers[name].c = F3(function(router, cmdList, state)\n\t{\n\t\tfor ( ; cmdList.b; cmdList = cmdList.b) // WHILE_CONS\n\t\t{\n\t\t\t// grab a separate reference to subs in case unsubscribe is called\n\t\t\tvar currentSubs = subs;\n\t\t\tvar value = _Json_unwrap(converter(cmdList.a));\n\t\t\tfor (var i = 0; i < currentSubs.length; i++)\n\t\t\t{\n\t\t\t\tcurrentSubs[i](value);\n\t\t\t}\n\t\t}\n\t\treturn init;\n\t});\n\n\t// PUBLIC API\n\n\tfunction subscribe(callback)\n\t{\n\t\tsubs.push(callback);\n\t}\n\n\tfunction unsubscribe(callback)\n\t{\n\t\t// copy subs into a new array in case unsubscribe is called within a\n\t\t// subscribed callback\n\t\tsubs = subs.slice();\n\t\tvar index = subs.indexOf(callback);\n\t\tif (index >= 0)\n\t\t{\n\t\t\tsubs.splice(index, 1);\n\t\t}\n\t}\n\n\treturn {\n\t\tsubscribe: subscribe,\n\t\tunsubscribe: unsubscribe\n\t};\n}\n\n\n\n// INCOMING PORTS\n\n\nfunction _Platform_incomingPort(name, converter)\n{\n\t_Platform_checkPortName(name);\n\t_Platform_effectManagers[name] = {\n\t\tf: _Platform_incomingPortMap,\n\t\tu: converter,\n\t\ta: _Platform_setupIncomingPort\n\t};\n\treturn _Platform_leaf(name);\n}\n\n\nvar _Platform_incomingPortMap = F2(function(tagger, finalTagger)\n{\n\treturn function(value)\n\t{\n\t\treturn tagger(finalTagger(value));\n\t};\n});\n\n\nfunction _Platform_setupIncomingPort(name, sendToApp)\n{\n\tvar subs = _List_Nil;\n\tvar converter = _Platform_effectManagers[name].u;\n\n\t// CREATE MANAGER\n\n\tvar init = _Scheduler_succeed(null);\n\n\t_Platform_effectManagers[name].b = init;\n\t_Platform_effectManagers[name].c = F3(function(router, subList, state)\n\t{\n\t\tsubs = subList;\n\t\treturn init;\n\t});\n\n\t// PUBLIC API\n\n\tfunction send(incomingValue)\n\t{\n\t\tvar result = A2(_Json_run, converter, _Json_wrap(incomingValue));\n\n\t\t$elm$core$Result$isOk(result) || _Debug_crash(4, name, result.a);\n\n\t\tvar value = result.a;\n\t\tfor (var temp = subs; temp.b; temp = temp.b) // WHILE_CONS\n\t\t{\n\t\t\tsendToApp(temp.a(value));\n\t\t}\n\t}\n\n\treturn { send: send };\n}\n\n\n\n// EXPORT ELM MODULES\n//\n// Have DEBUG and PROD versions so that we can (1) give nicer errors in\n// debug mode and (2) not pay for the bits needed for that in prod mode.\n//\n\n\nfunction _Platform_export(exports)\n{\n\tscope['Elm']\n\t\t? _Platform_mergeExportsProd(scope['Elm'], exports)\n\t\t: scope['Elm'] = exports;\n}\n\n\nfunction _Platform_mergeExportsProd(obj, exports)\n{\n\tfor (var name in exports)\n\t{\n\t\t(name in obj)\n\t\t\t? (name == 'init')\n\t\t\t\t? _Debug_crash(6)\n\t\t\t\t: _Platform_mergeExportsProd(obj[name], exports[name])\n\t\t\t: (obj[name] = exports[name]);\n\t}\n}\n\n\nfunction _Platform_export_UNUSED(exports)\n{\n\tscope['Elm']\n\t\t? _Platform_mergeExportsDebug('Elm', scope['Elm'], exports)\n\t\t: scope['Elm'] = exports;\n}\n\n\nfunction _Platform_mergeExportsDebug(moduleName, obj, exports)\n{\n\tfor (var name in exports)\n\t{\n\t\t(name in obj)\n\t\t\t? (name == 'init')\n\t\t\t\t? _Debug_crash(6, moduleName)\n\t\t\t\t: _Platform_mergeExportsDebug(moduleName + '.' + name, obj[name], exports[name])\n\t\t\t: (obj[name] = exports[name]);\n\t}\n}\n\n\n\n\n// HELPERS\n\n\nvar _VirtualDom_divertHrefToApp;\n\nvar _VirtualDom_doc = typeof document !== 'undefined' ? document : {};\n\n\nfunction _VirtualDom_appendChild(parent, child)\n{\n\tparent.appendChild(child);\n}\n\nvar _VirtualDom_init = F4(function(virtualNode, flagDecoder, debugMetadata, args)\n{\n\t// NOTE: this function needs _Platform_export available to work\n\n\t/**/\n\tvar node = args['node'];\n\t//*/\n\t/**_UNUSED/\n\tvar node = args && args['node'] ? args['node'] : _Debug_crash(0);\n\t//*/\n\n\tnode.parentNode.replaceChild(\n\t\t_VirtualDom_render(virtualNode, function() {}),\n\t\tnode\n\t);\n\n\treturn {};\n});\n\n\n\n// TEXT\n\n\nfunction _VirtualDom_text(string)\n{\n\treturn {\n\t\t$: 0,\n\t\ta: string\n\t};\n}\n\n\n\n// NODE\n\n\nvar _VirtualDom_nodeNS = F2(function(namespace, tag)\n{\n\treturn F2(function(factList, kidList)\n\t{\n\t\tfor (var kids = [], descendantsCount = 0; kidList.b; kidList = kidList.b) // WHILE_CONS\n\t\t{\n\t\t\tvar kid = kidList.a;\n\t\t\tdescendantsCount += (kid.b || 0);\n\t\t\tkids.push(kid);\n\t\t}\n\t\tdescendantsCount += kids.length;\n\n\t\treturn {\n\t\t\t$: 1,\n\t\t\tc: tag,\n\t\t\td: _VirtualDom_organizeFacts(factList),\n\t\t\te: kids,\n\t\t\tf: namespace,\n\t\t\tb: descendantsCount\n\t\t};\n\t});\n});\n\n\nvar _VirtualDom_node = _VirtualDom_nodeNS(undefined);\n\n\n\n// KEYED NODE\n\n\nvar _VirtualDom_keyedNodeNS = F2(function(namespace, tag)\n{\n\treturn F2(function(factList, kidList)\n\t{\n\t\tfor (var kids = [], descendantsCount = 0; kidList.b; kidList = kidList.b) // WHILE_CONS\n\t\t{\n\t\t\tvar kid = kidList.a;\n\t\t\tdescendantsCount += (kid.b.b || 0);\n\t\t\tkids.push(kid);\n\t\t}\n\t\tdescendantsCount += kids.length;\n\n\t\treturn {\n\t\t\t$: 2,\n\t\t\tc: tag,\n\t\t\td: _VirtualDom_organizeFacts(factList),\n\t\t\te: kids,\n\t\t\tf: namespace,\n\t\t\tb: descendantsCount\n\t\t};\n\t});\n});\n\n\nvar _VirtualDom_keyedNode = _VirtualDom_keyedNodeNS(undefined);\n\n\n\n// CUSTOM\n\n\nfunction _VirtualDom_custom(factList, model, render, diff)\n{\n\treturn {\n\t\t$: 3,\n\t\td: _VirtualDom_organizeFacts(factList),\n\t\tg: model,\n\t\th: render,\n\t\ti: diff\n\t};\n}\n\n\n\n// MAP\n\n\nvar _VirtualDom_map = F2(function(tagger, node)\n{\n\treturn {\n\t\t$: 4,\n\t\tj: tagger,\n\t\tk: node,\n\t\tb: 1 + (node.b || 0)\n\t};\n});\n\n\n\n// LAZY\n\n\nfunction _VirtualDom_thunk(refs, thunk)\n{\n\treturn {\n\t\t$: 5,\n\t\tl: refs,\n\t\tm: thunk,\n\t\tk: undefined\n\t};\n}\n\nvar _VirtualDom_lazy = F2(function(func, a)\n{\n\treturn _VirtualDom_thunk([func, a], function() {\n\t\treturn func(a);\n\t});\n});\n\nvar _VirtualDom_lazy2 = F3(function(func, a, b)\n{\n\treturn _VirtualDom_thunk([func, a, b], function() {\n\t\treturn A2(func, a, b);\n\t});\n});\n\nvar _VirtualDom_lazy3 = F4(function(func, a, b, c)\n{\n\treturn _VirtualDom_thunk([func, a, b, c], function() {\n\t\treturn A3(func, a, b, c);\n\t});\n});\n\nvar _VirtualDom_lazy4 = F5(function(func, a, b, c, d)\n{\n\treturn _VirtualDom_thunk([func, a, b, c, d], function() {\n\t\treturn A4(func, a, b, c, d);\n\t});\n});\n\nvar _VirtualDom_lazy5 = F6(function(func, a, b, c, d, e)\n{\n\treturn _VirtualDom_thunk([func, a, b, c, d, e], function() {\n\t\treturn A5(func, a, b, c, d, e);\n\t});\n});\n\nvar _VirtualDom_lazy6 = F7(function(func, a, b, c, d, e, f)\n{\n\treturn _VirtualDom_thunk([func, a, b, c, d, e, f], function() {\n\t\treturn A6(func, a, b, c, d, e, f);\n\t});\n});\n\nvar _VirtualDom_lazy7 = F8(function(func, a, b, c, d, e, f, g)\n{\n\treturn _VirtualDom_thunk([func, a, b, c, d, e, f, g], function() {\n\t\treturn A7(func, a, b, c, d, e, f, g);\n\t});\n});\n\nvar _VirtualDom_lazy8 = F9(function(func, a, b, c, d, e, f, g, h)\n{\n\treturn _VirtualDom_thunk([func, a, b, c, d, e, f, g, h], function() {\n\t\treturn A8(func, a, b, c, d, e, f, g, h);\n\t});\n});\n\n\n\n// FACTS\n\n\nvar _VirtualDom_on = F2(function(key, handler)\n{\n\treturn {\n\t\t$: 'a0',\n\t\tn: key,\n\t\to: handler\n\t};\n});\nvar _VirtualDom_style = F2(function(key, value)\n{\n\treturn {\n\t\t$: 'a1',\n\t\tn: key,\n\t\to: value\n\t};\n});\nvar _VirtualDom_property = F2(function(key, value)\n{\n\treturn {\n\t\t$: 'a2',\n\t\tn: key,\n\t\to: value\n\t};\n});\nvar _VirtualDom_attribute = F2(function(key, value)\n{\n\treturn {\n\t\t$: 'a3',\n\t\tn: key,\n\t\to: value\n\t};\n});\nvar _VirtualDom_attributeNS = F3(function(namespace, key, value)\n{\n\treturn {\n\t\t$: 'a4',\n\t\tn: key,\n\t\to: { f: namespace, o: value }\n\t};\n});\n\n\n\n// XSS ATTACK VECTOR CHECKS\n\n\nfunction _VirtualDom_noScript(tag)\n{\n\treturn tag == 'script' ? 'p' : tag;\n}\n\nfunction _VirtualDom_noOnOrFormAction(key)\n{\n\treturn /^(on|formAction$)/i.test(key) ? 'data-' + key : key;\n}\n\nfunction _VirtualDom_noInnerHtmlOrFormAction(key)\n{\n\treturn key == 'innerHTML' || key == 'formAction' ? 'data-' + key : key;\n}\n\nfunction _VirtualDom_noJavaScriptUri(value)\n{\n\treturn /^javascript:/i.test(value.replace(/\\s/g,'')) ? '' : value;\n}\n\nfunction _VirtualDom_noJavaScriptUri_UNUSED(value)\n{\n\treturn /^javascript:/i.test(value.replace(/\\s/g,''))\n\t\t? 'javascript:alert(\"This is an XSS vector. Please use ports or web components instead.\")'\n\t\t: value;\n}\n\nfunction _VirtualDom_noJavaScriptOrHtmlUri(value)\n{\n\treturn /^\\s*(javascript:|data:text\\/html)/i.test(value) ? '' : value;\n}\n\nfunction _VirtualDom_noJavaScriptOrHtmlUri_UNUSED(value)\n{\n\treturn /^\\s*(javascript:|data:text\\/html)/i.test(value)\n\t\t? 'javascript:alert(\"This is an XSS vector. Please use ports or web components instead.\")'\n\t\t: value;\n}\n\n\n\n// MAP FACTS\n\n\nvar _VirtualDom_mapAttribute = F2(function(func, attr)\n{\n\treturn (attr.$ === 'a0')\n\t\t? A2(_VirtualDom_on, attr.n, _VirtualDom_mapHandler(func, attr.o))\n\t\t: attr;\n});\n\nfunction _VirtualDom_mapHandler(func, handler)\n{\n\tvar tag = $elm$virtual_dom$VirtualDom$toHandlerInt(handler);\n\n\t// 0 = Normal\n\t// 1 = MayStopPropagation\n\t// 2 = MayPreventDefault\n\t// 3 = Custom\n\n\treturn {\n\t\t$: handler.$,\n\t\ta:\n\t\t\t!tag\n\t\t\t\t? A2($elm$json$Json$Decode$map, func, handler.a)\n\t\t\t\t:\n\t\t\tA3($elm$json$Json$Decode$map2,\n\t\t\t\ttag < 3\n\t\t\t\t\t? _VirtualDom_mapEventTuple\n\t\t\t\t\t: _VirtualDom_mapEventRecord,\n\t\t\t\t$elm$json$Json$Decode$succeed(func),\n\t\t\t\thandler.a\n\t\t\t)\n\t};\n}\n\nvar _VirtualDom_mapEventTuple = F2(function(func, tuple)\n{\n\treturn _Utils_Tuple2(func(tuple.a), tuple.b);\n});\n\nvar _VirtualDom_mapEventRecord = F2(function(func, record)\n{\n\treturn {\n\t\tA: func(record.A),\n\t\tan: record.an,\n\t\taj: record.aj\n\t}\n});\n\n\n\n// ORGANIZE FACTS\n\n\nfunction _VirtualDom_organizeFacts(factList)\n{\n\tfor (var facts = {}; factList.b; factList = factList.b) // WHILE_CONS\n\t{\n\t\tvar entry = factList.a;\n\n\t\tvar tag = entry.$;\n\t\tvar key = entry.n;\n\t\tvar value = entry.o;\n\n\t\tif (tag === 'a2')\n\t\t{\n\t\t\t(key === 'className')\n\t\t\t\t? _VirtualDom_addClass(facts, key, _Json_unwrap(value))\n\t\t\t\t: facts[key] = _Json_unwrap(value);\n\n\t\t\tcontinue;\n\t\t}\n\n\t\tvar subFacts = facts[tag] || (facts[tag] = {});\n\t\t(tag === 'a3' && key === 'class')\n\t\t\t? _VirtualDom_addClass(subFacts, key, value)\n\t\t\t: subFacts[key] = value;\n\t}\n\n\treturn facts;\n}\n\nfunction _VirtualDom_addClass(object, key, newClass)\n{\n\tvar classes = object[key];\n\tobject[key] = classes ? classes + ' ' + newClass : newClass;\n}\n\n\n\n// RENDER\n\n\nfunction _VirtualDom_render(vNode, eventNode)\n{\n\tvar tag = vNode.$;\n\n\tif (tag === 5)\n\t{\n\t\treturn _VirtualDom_render(vNode.k || (vNode.k = vNode.m()), eventNode);\n\t}\n\n\tif (tag === 0)\n\t{\n\t\treturn _VirtualDom_doc.createTextNode(vNode.a);\n\t}\n\n\tif (tag === 4)\n\t{\n\t\tvar subNode = vNode.k;\n\t\tvar tagger = vNode.j;\n\n\t\twhile (subNode.$ === 4)\n\t\t{\n\t\t\ttypeof tagger !== 'object'\n\t\t\t\t? tagger = [tagger, subNode.j]\n\t\t\t\t: tagger.push(subNode.j);\n\n\t\t\tsubNode = subNode.k;\n\t\t}\n\n\t\tvar subEventRoot = { j: tagger, p: eventNode };\n\t\tvar domNode = _VirtualDom_render(subNode, subEventRoot);\n\t\tdomNode.elm_event_node_ref = subEventRoot;\n\t\treturn domNode;\n\t}\n\n\tif (tag === 3)\n\t{\n\t\tvar domNode = vNode.h(vNode.g);\n\t\t_VirtualDom_applyFacts(domNode, eventNode, vNode.d);\n\t\treturn domNode;\n\t}\n\n\t// at this point `tag` must be 1 or 2\n\n\tvar domNode = vNode.f\n\t\t? _VirtualDom_doc.createElementNS(vNode.f, vNode.c)\n\t\t: _VirtualDom_doc.createElement(vNode.c);\n\n\tif (_VirtualDom_divertHrefToApp && vNode.c == 'a')\n\t{\n\t\tdomNode.addEventListener('click', _VirtualDom_divertHrefToApp(domNode));\n\t}\n\n\t_VirtualDom_applyFacts(domNode, eventNode, vNode.d);\n\n\tfor (var kids = vNode.e, i = 0; i < kids.length; i++)\n\t{\n\t\t_VirtualDom_appendChild(domNode, _VirtualDom_render(tag === 1 ? kids[i] : kids[i].b, eventNode));\n\t}\n\n\treturn domNode;\n}\n\n\n\n// APPLY FACTS\n\n\nfunction _VirtualDom_applyFacts(domNode, eventNode, facts)\n{\n\tfor (var key in facts)\n\t{\n\t\tvar value = facts[key];\n\n\t\tkey === 'a1'\n\t\t\t? _VirtualDom_applyStyles(domNode, value)\n\t\t\t:\n\t\tkey === 'a0'\n\t\t\t? _VirtualDom_applyEvents(domNode, eventNode, value)\n\t\t\t:\n\t\tkey === 'a3'\n\t\t\t? _VirtualDom_applyAttrs(domNode, value)\n\t\t\t:\n\t\tkey === 'a4'\n\t\t\t? _VirtualDom_applyAttrsNS(domNode, value)\n\t\t\t:\n\t\t((key !== 'value' && key !== 'checked') || domNode[key] !== value) && (domNode[key] = value);\n\t}\n}\n\n\n\n// APPLY STYLES\n\n\nfunction _VirtualDom_applyStyles(domNode, styles)\n{\n\tvar domNodeStyle = domNode.style;\n\n\tfor (var key in styles)\n\t{\n\t\tdomNodeStyle[key] = styles[key];\n\t}\n}\n\n\n\n// APPLY ATTRS\n\n\nfunction _VirtualDom_applyAttrs(domNode, attrs)\n{\n\tfor (var key in attrs)\n\t{\n\t\tvar value = attrs[key];\n\t\ttypeof value !== 'undefined'\n\t\t\t? domNode.setAttribute(key, value)\n\t\t\t: domNode.removeAttribute(key);\n\t}\n}\n\n\n\n// APPLY NAMESPACED ATTRS\n\n\nfunction _VirtualDom_applyAttrsNS(domNode, nsAttrs)\n{\n\tfor (var key in nsAttrs)\n\t{\n\t\tvar pair = nsAttrs[key];\n\t\tvar namespace = pair.f;\n\t\tvar value = pair.o;\n\n\t\ttypeof value !== 'undefined'\n\t\t\t? domNode.setAttributeNS(namespace, key, value)\n\t\t\t: domNode.removeAttributeNS(namespace, key);\n\t}\n}\n\n\n\n// APPLY EVENTS\n\n\nfunction _VirtualDom_applyEvents(domNode, eventNode, events)\n{\n\tvar allCallbacks = domNode.elmFs || (domNode.elmFs = {});\n\n\tfor (var key in events)\n\t{\n\t\tvar newHandler = events[key];\n\t\tvar oldCallback = allCallbacks[key];\n\n\t\tif (!newHandler)\n\t\t{\n\t\t\tdomNode.removeEventListener(key, oldCallback);\n\t\t\tallCallbacks[key] = undefined;\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (oldCallback)\n\t\t{\n\t\t\tvar oldHandler = oldCallback.q;\n\t\t\tif (oldHandler.$ === newHandler.$)\n\t\t\t{\n\t\t\t\toldCallback.q = newHandler;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tdomNode.removeEventListener(key, oldCallback);\n\t\t}\n\n\t\toldCallback = _VirtualDom_makeCallback(eventNode, newHandler);\n\t\tdomNode.addEventListener(key, oldCallback,\n\t\t\t_VirtualDom_passiveSupported\n\t\t\t&& { passive: $elm$virtual_dom$VirtualDom$toHandlerInt(newHandler) < 2 }\n\t\t);\n\t\tallCallbacks[key] = oldCallback;\n\t}\n}\n\n\n\n// PASSIVE EVENTS\n\n\nvar _VirtualDom_passiveSupported;\n\ntry\n{\n\twindow.addEventListener('t', null, Object.defineProperty({}, 'passive', {\n\t\tget: function() { _VirtualDom_passiveSupported = true; }\n\t}));\n}\ncatch(e) {}\n\n\n\n// EVENT HANDLERS\n\n\nfunction _VirtualDom_makeCallback(eventNode, initialHandler)\n{\n\tfunction callback(event)\n\t{\n\t\tvar handler = callback.q;\n\t\tvar result = _Json_runHelp(handler.a, event);\n\n\t\tif (!$elm$core$Result$isOk(result))\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tvar tag = $elm$virtual_dom$VirtualDom$toHandlerInt(handler);\n\n\t\t// 0 = Normal\n\t\t// 1 = MayStopPropagation\n\t\t// 2 = MayPreventDefault\n\t\t// 3 = Custom\n\n\t\tvar value = result.a;\n\t\tvar message = !tag ? value : tag < 3 ? value.a : value.A;\n\t\tvar stopPropagation = tag == 1 ? value.b : tag == 3 && value.an;\n\t\tvar currentEventNode = (\n\t\t\tstopPropagation && event.stopPropagation(),\n\t\t\t(tag == 2 ? value.b : tag == 3 && value.aj) && event.preventDefault(),\n\t\t\teventNode\n\t\t);\n\t\tvar tagger;\n\t\tvar i;\n\t\twhile (tagger = currentEventNode.j)\n\t\t{\n\t\t\tif (typeof tagger == 'function')\n\t\t\t{\n\t\t\t\tmessage = tagger(message);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tfor (var i = tagger.length; i--; )\n\t\t\t\t{\n\t\t\t\t\tmessage = tagger[i](message);\n\t\t\t\t}\n\t\t\t}\n\t\t\tcurrentEventNode = currentEventNode.p;\n\t\t}\n\t\tcurrentEventNode(message, stopPropagation); // stopPropagation implies isSync\n\t}\n\n\tcallback.q = initialHandler;\n\n\treturn callback;\n}\n\nfunction _VirtualDom_equalEvents(x, y)\n{\n\treturn x.$ == y.$ && _Json_equality(x.a, y.a);\n}\n\n\n\n// DIFF\n\n\n// TODO: Should we do patches like in iOS?\n//\n// type Patch\n//   = At Int Patch\n//   | Batch (List Patch)\n//   | Change ...\n//\n// How could it not be better?\n//\nfunction _VirtualDom_diff(x, y)\n{\n\tvar patches = [];\n\t_VirtualDom_diffHelp(x, y, patches, 0);\n\treturn patches;\n}\n\n\nfunction _VirtualDom_pushPatch(patches, type, index, data)\n{\n\tvar patch = {\n\t\t$: type,\n\t\tr: index,\n\t\ts: data,\n\t\tt: undefined,\n\t\tu: undefined\n\t};\n\tpatches.push(patch);\n\treturn patch;\n}\n\n\nfunction _VirtualDom_diffHelp(x, y, patches, index)\n{\n\tif (x === y)\n\t{\n\t\treturn;\n\t}\n\n\tvar xType = x.$;\n\tvar yType = y.$;\n\n\t// Bail if you run into different types of nodes. Implies that the\n\t// structure has changed significantly and it's not worth a diff.\n\tif (xType !== yType)\n\t{\n\t\tif (xType === 1 && yType === 2)\n\t\t{\n\t\t\ty = _VirtualDom_dekey(y);\n\t\t\tyType = 1;\n\t\t}\n\t\telse\n\t\t{\n\t\t\t_VirtualDom_pushPatch(patches, 0, index, y);\n\t\t\treturn;\n\t\t}\n\t}\n\n\t// Now we know that both nodes are the same $.\n\tswitch (yType)\n\t{\n\t\tcase 5:\n\t\t\tvar xRefs = x.l;\n\t\t\tvar yRefs = y.l;\n\t\t\tvar i = xRefs.length;\n\t\t\tvar same = i === yRefs.length;\n\t\t\twhile (same && i--)\n\t\t\t{\n\t\t\t\tsame = xRefs[i] === yRefs[i];\n\t\t\t}\n\t\t\tif (same)\n\t\t\t{\n\t\t\t\ty.k = x.k;\n\t\t\t\treturn;\n\t\t\t}\n\t\t\ty.k = y.m();\n\t\t\tvar subPatches = [];\n\t\t\t_VirtualDom_diffHelp(x.k, y.k, subPatches, 0);\n\t\t\tsubPatches.length > 0 && _VirtualDom_pushPatch(patches, 1, index, subPatches);\n\t\t\treturn;\n\n\t\tcase 4:\n\t\t\t// gather nested taggers\n\t\t\tvar xTaggers = x.j;\n\t\t\tvar yTaggers = y.j;\n\t\t\tvar nesting = false;\n\n\t\t\tvar xSubNode = x.k;\n\t\t\twhile (xSubNode.$ === 4)\n\t\t\t{\n\t\t\t\tnesting = true;\n\n\t\t\t\ttypeof xTaggers !== 'object'\n\t\t\t\t\t? xTaggers = [xTaggers, xSubNode.j]\n\t\t\t\t\t: xTaggers.push(xSubNode.j);\n\n\t\t\t\txSubNode = xSubNode.k;\n\t\t\t}\n\n\t\t\tvar ySubNode = y.k;\n\t\t\twhile (ySubNode.$ === 4)\n\t\t\t{\n\t\t\t\tnesting = true;\n\n\t\t\t\ttypeof yTaggers !== 'object'\n\t\t\t\t\t? yTaggers = [yTaggers, ySubNode.j]\n\t\t\t\t\t: yTaggers.push(ySubNode.j);\n\n\t\t\t\tySubNode = ySubNode.k;\n\t\t\t}\n\n\t\t\t// Just bail if different numbers of taggers. This implies the\n\t\t\t// structure of the virtual DOM has changed.\n\t\t\tif (nesting && xTaggers.length !== yTaggers.length)\n\t\t\t{\n\t\t\t\t_VirtualDom_pushPatch(patches, 0, index, y);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// check if taggers are \"the same\"\n\t\t\tif (nesting ? !_VirtualDom_pairwiseRefEqual(xTaggers, yTaggers) : xTaggers !== yTaggers)\n\t\t\t{\n\t\t\t\t_VirtualDom_pushPatch(patches, 2, index, yTaggers);\n\t\t\t}\n\n\t\t\t// diff everything below the taggers\n\t\t\t_VirtualDom_diffHelp(xSubNode, ySubNode, patches, index + 1);\n\t\t\treturn;\n\n\t\tcase 0:\n\t\t\tif (x.a !== y.a)\n\t\t\t{\n\t\t\t\t_VirtualDom_pushPatch(patches, 3, index, y.a);\n\t\t\t}\n\t\t\treturn;\n\n\t\tcase 1:\n\t\t\t_VirtualDom_diffNodes(x, y, patches, index, _VirtualDom_diffKids);\n\t\t\treturn;\n\n\t\tcase 2:\n\t\t\t_VirtualDom_diffNodes(x, y, patches, index, _VirtualDom_diffKeyedKids);\n\t\t\treturn;\n\n\t\tcase 3:\n\t\t\tif (x.h !== y.h)\n\t\t\t{\n\t\t\t\t_VirtualDom_pushPatch(patches, 0, index, y);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar factsDiff = _VirtualDom_diffFacts(x.d, y.d);\n\t\t\tfactsDiff && _VirtualDom_pushPatch(patches, 4, index, factsDiff);\n\n\t\t\tvar patch = y.i(x.g, y.g);\n\t\t\tpatch && _VirtualDom_pushPatch(patches, 5, index, patch);\n\n\t\t\treturn;\n\t}\n}\n\n// assumes the incoming arrays are the same length\nfunction _VirtualDom_pairwiseRefEqual(as, bs)\n{\n\tfor (var i = 0; i < as.length; i++)\n\t{\n\t\tif (as[i] !== bs[i])\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\n\treturn true;\n}\n\nfunction _VirtualDom_diffNodes(x, y, patches, index, diffKids)\n{\n\t// Bail if obvious indicators have changed. Implies more serious\n\t// structural changes such that it's not worth it to diff.\n\tif (x.c !== y.c || x.f !== y.f)\n\t{\n\t\t_VirtualDom_pushPatch(patches, 0, index, y);\n\t\treturn;\n\t}\n\n\tvar factsDiff = _VirtualDom_diffFacts(x.d, y.d);\n\tfactsDiff && _VirtualDom_pushPatch(patches, 4, index, factsDiff);\n\n\tdiffKids(x, y, patches, index);\n}\n\n\n\n// DIFF FACTS\n\n\n// TODO Instead of creating a new diff object, it's possible to just test if\n// there *is* a diff. During the actual patch, do the diff again and make the\n// modifications directly. This way, there's no new allocations. Worth it?\nfunction _VirtualDom_diffFacts(x, y, category)\n{\n\tvar diff;\n\n\t// look for changes and removals\n\tfor (var xKey in x)\n\t{\n\t\tif (xKey === 'a1' || xKey === 'a0' || xKey === 'a3' || xKey === 'a4')\n\t\t{\n\t\t\tvar subDiff = _VirtualDom_diffFacts(x[xKey], y[xKey] || {}, xKey);\n\t\t\tif (subDiff)\n\t\t\t{\n\t\t\t\tdiff = diff || {};\n\t\t\t\tdiff[xKey] = subDiff;\n\t\t\t}\n\t\t\tcontinue;\n\t\t}\n\n\t\t// remove if not in the new facts\n\t\tif (!(xKey in y))\n\t\t{\n\t\t\tdiff = diff || {};\n\t\t\tdiff[xKey] =\n\t\t\t\t!category\n\t\t\t\t\t? (typeof x[xKey] === 'string' ? '' : null)\n\t\t\t\t\t:\n\t\t\t\t(category === 'a1')\n\t\t\t\t\t? ''\n\t\t\t\t\t:\n\t\t\t\t(category === 'a0' || category === 'a3')\n\t\t\t\t\t? undefined\n\t\t\t\t\t:\n\t\t\t\t{ f: x[xKey].f, o: undefined };\n\n\t\t\tcontinue;\n\t\t}\n\n\t\tvar xValue = x[xKey];\n\t\tvar yValue = y[xKey];\n\n\t\t// reference equal, so don't worry about it\n\t\tif (xValue === yValue && xKey !== 'value' && xKey !== 'checked'\n\t\t\t|| category === 'a0' && _VirtualDom_equalEvents(xValue, yValue))\n\t\t{\n\t\t\tcontinue;\n\t\t}\n\n\t\tdiff = diff || {};\n\t\tdiff[xKey] = yValue;\n\t}\n\n\t// add new stuff\n\tfor (var yKey in y)\n\t{\n\t\tif (!(yKey in x))\n\t\t{\n\t\t\tdiff = diff || {};\n\t\t\tdiff[yKey] = y[yKey];\n\t\t}\n\t}\n\n\treturn diff;\n}\n\n\n\n// DIFF KIDS\n\n\nfunction _VirtualDom_diffKids(xParent, yParent, patches, index)\n{\n\tvar xKids = xParent.e;\n\tvar yKids = yParent.e;\n\n\tvar xLen = xKids.length;\n\tvar yLen = yKids.length;\n\n\t// FIGURE OUT IF THERE ARE INSERTS OR REMOVALS\n\n\tif (xLen > yLen)\n\t{\n\t\t_VirtualDom_pushPatch(patches, 6, index, {\n\t\t\tv: yLen,\n\t\t\ti: xLen - yLen\n\t\t});\n\t}\n\telse if (xLen < yLen)\n\t{\n\t\t_VirtualDom_pushPatch(patches, 7, index, {\n\t\t\tv: xLen,\n\t\t\te: yKids\n\t\t});\n\t}\n\n\t// PAIRWISE DIFF EVERYTHING ELSE\n\n\tfor (var minLen = xLen < yLen ? xLen : yLen, i = 0; i < minLen; i++)\n\t{\n\t\tvar xKid = xKids[i];\n\t\t_VirtualDom_diffHelp(xKid, yKids[i], patches, ++index);\n\t\tindex += xKid.b || 0;\n\t}\n}\n\n\n\n// KEYED DIFF\n\n\nfunction _VirtualDom_diffKeyedKids(xParent, yParent, patches, rootIndex)\n{\n\tvar localPatches = [];\n\n\tvar changes = {}; // Dict String Entry\n\tvar inserts = []; // Array { index : Int, entry : Entry }\n\t// type Entry = { tag : String, vnode : VNode, index : Int, data : _ }\n\n\tvar xKids = xParent.e;\n\tvar yKids = yParent.e;\n\tvar xLen = xKids.length;\n\tvar yLen = yKids.length;\n\tvar xIndex = 0;\n\tvar yIndex = 0;\n\n\tvar index = rootIndex;\n\n\twhile (xIndex < xLen && yIndex < yLen)\n\t{\n\t\tvar x = xKids[xIndex];\n\t\tvar y = yKids[yIndex];\n\n\t\tvar xKey = x.a;\n\t\tvar yKey = y.a;\n\t\tvar xNode = x.b;\n\t\tvar yNode = y.b;\n\n\t\tvar newMatch = undefined;\n\t\tvar oldMatch = undefined;\n\n\t\t// check if keys match\n\n\t\tif (xKey === yKey)\n\t\t{\n\t\t\tindex++;\n\t\t\t_VirtualDom_diffHelp(xNode, yNode, localPatches, index);\n\t\t\tindex += xNode.b || 0;\n\n\t\t\txIndex++;\n\t\t\tyIndex++;\n\t\t\tcontinue;\n\t\t}\n\n\t\t// look ahead 1 to detect insertions and removals.\n\n\t\tvar xNext = xKids[xIndex + 1];\n\t\tvar yNext = yKids[yIndex + 1];\n\n\t\tif (xNext)\n\t\t{\n\t\t\tvar xNextKey = xNext.a;\n\t\t\tvar xNextNode = xNext.b;\n\t\t\toldMatch = yKey === xNextKey;\n\t\t}\n\n\t\tif (yNext)\n\t\t{\n\t\t\tvar yNextKey = yNext.a;\n\t\t\tvar yNextNode = yNext.b;\n\t\t\tnewMatch = xKey === yNextKey;\n\t\t}\n\n\n\t\t// swap x and y\n\t\tif (newMatch && oldMatch)\n\t\t{\n\t\t\tindex++;\n\t\t\t_VirtualDom_diffHelp(xNode, yNextNode, localPatches, index);\n\t\t\t_VirtualDom_insertNode(changes, localPatches, xKey, yNode, yIndex, inserts);\n\t\t\tindex += xNode.b || 0;\n\n\t\t\tindex++;\n\t\t\t_VirtualDom_removeNode(changes, localPatches, xKey, xNextNode, index);\n\t\t\tindex += xNextNode.b || 0;\n\n\t\t\txIndex += 2;\n\t\t\tyIndex += 2;\n\t\t\tcontinue;\n\t\t}\n\n\t\t// insert y\n\t\tif (newMatch)\n\t\t{\n\t\t\tindex++;\n\t\t\t_VirtualDom_insertNode(changes, localPatches, yKey, yNode, yIndex, inserts);\n\t\t\t_VirtualDom_diffHelp(xNode, yNextNode, localPatches, index);\n\t\t\tindex += xNode.b || 0;\n\n\t\t\txIndex += 1;\n\t\t\tyIndex += 2;\n\t\t\tcontinue;\n\t\t}\n\n\t\t// remove x\n\t\tif (oldMatch)\n\t\t{\n\t\t\tindex++;\n\t\t\t_VirtualDom_removeNode(changes, localPatches, xKey, xNode, index);\n\t\t\tindex += xNode.b || 0;\n\n\t\t\tindex++;\n\t\t\t_VirtualDom_diffHelp(xNextNode, yNode, localPatches, index);\n\t\t\tindex += xNextNode.b || 0;\n\n\t\t\txIndex += 2;\n\t\t\tyIndex += 1;\n\t\t\tcontinue;\n\t\t}\n\n\t\t// remove x, insert y\n\t\tif (xNext && xNextKey === yNextKey)\n\t\t{\n\t\t\tindex++;\n\t\t\t_VirtualDom_removeNode(changes, localPatches, xKey, xNode, index);\n\t\t\t_VirtualDom_insertNode(changes, localPatches, yKey, yNode, yIndex, inserts);\n\t\t\tindex += xNode.b || 0;\n\n\t\t\tindex++;\n\t\t\t_VirtualDom_diffHelp(xNextNode, yNextNode, localPatches, index);\n\t\t\tindex += xNextNode.b || 0;\n\n\t\t\txIndex += 2;\n\t\t\tyIndex += 2;\n\t\t\tcontinue;\n\t\t}\n\n\t\tbreak;\n\t}\n\n\t// eat up any remaining nodes with removeNode and insertNode\n\n\twhile (xIndex < xLen)\n\t{\n\t\tindex++;\n\t\tvar x = xKids[xIndex];\n\t\tvar xNode = x.b;\n\t\t_VirtualDom_removeNode(changes, localPatches, x.a, xNode, index);\n\t\tindex += xNode.b || 0;\n\t\txIndex++;\n\t}\n\n\twhile (yIndex < yLen)\n\t{\n\t\tvar endInserts = endInserts || [];\n\t\tvar y = yKids[yIndex];\n\t\t_VirtualDom_insertNode(changes, localPatches, y.a, y.b, undefined, endInserts);\n\t\tyIndex++;\n\t}\n\n\tif (localPatches.length > 0 || inserts.length > 0 || endInserts)\n\t{\n\t\t_VirtualDom_pushPatch(patches, 8, rootIndex, {\n\t\t\tw: localPatches,\n\t\t\tx: inserts,\n\t\t\ty: endInserts\n\t\t});\n\t}\n}\n\n\n\n// CHANGES FROM KEYED DIFF\n\n\nvar _VirtualDom_POSTFIX = '_elmW6BL';\n\n\nfunction _VirtualDom_insertNode(changes, localPatches, key, vnode, yIndex, inserts)\n{\n\tvar entry = changes[key];\n\n\t// never seen this key before\n\tif (!entry)\n\t{\n\t\tentry = {\n\t\t\tc: 0,\n\t\t\tz: vnode,\n\t\t\tr: yIndex,\n\t\t\ts: undefined\n\t\t};\n\n\t\tinserts.push({ r: yIndex, A: entry });\n\t\tchanges[key] = entry;\n\n\t\treturn;\n\t}\n\n\t// this key was removed earlier, a match!\n\tif (entry.c === 1)\n\t{\n\t\tinserts.push({ r: yIndex, A: entry });\n\n\t\tentry.c = 2;\n\t\tvar subPatches = [];\n\t\t_VirtualDom_diffHelp(entry.z, vnode, subPatches, entry.r);\n\t\tentry.r = yIndex;\n\t\tentry.s.s = {\n\t\t\tw: subPatches,\n\t\t\tA: entry\n\t\t};\n\n\t\treturn;\n\t}\n\n\t// this key has already been inserted or moved, a duplicate!\n\t_VirtualDom_insertNode(changes, localPatches, key + _VirtualDom_POSTFIX, vnode, yIndex, inserts);\n}\n\n\nfunction _VirtualDom_removeNode(changes, localPatches, key, vnode, index)\n{\n\tvar entry = changes[key];\n\n\t// never seen this key before\n\tif (!entry)\n\t{\n\t\tvar patch = _VirtualDom_pushPatch(localPatches, 9, index, undefined);\n\n\t\tchanges[key] = {\n\t\t\tc: 1,\n\t\t\tz: vnode,\n\t\t\tr: index,\n\t\t\ts: patch\n\t\t};\n\n\t\treturn;\n\t}\n\n\t// this key was inserted earlier, a match!\n\tif (entry.c === 0)\n\t{\n\t\tentry.c = 2;\n\t\tvar subPatches = [];\n\t\t_VirtualDom_diffHelp(vnode, entry.z, subPatches, index);\n\n\t\t_VirtualDom_pushPatch(localPatches, 9, index, {\n\t\t\tw: subPatches,\n\t\t\tA: entry\n\t\t});\n\n\t\treturn;\n\t}\n\n\t// this key has already been removed or moved, a duplicate!\n\t_VirtualDom_removeNode(changes, localPatches, key + _VirtualDom_POSTFIX, vnode, index);\n}\n\n\n\n// ADD DOM NODES\n//\n// Each DOM node has an \"index\" assigned in order of traversal. It is important\n// to minimize our crawl over the actual DOM, so these indexes (along with the\n// descendantsCount of virtual nodes) let us skip touching entire subtrees of\n// the DOM if we know there are no patches there.\n\n\nfunction _VirtualDom_addDomNodes(domNode, vNode, patches, eventNode)\n{\n\t_VirtualDom_addDomNodesHelp(domNode, vNode, patches, 0, 0, vNode.b, eventNode);\n}\n\n\n// assumes `patches` is non-empty and indexes increase monotonically.\nfunction _VirtualDom_addDomNodesHelp(domNode, vNode, patches, i, low, high, eventNode)\n{\n\tvar patch = patches[i];\n\tvar index = patch.r;\n\n\twhile (index === low)\n\t{\n\t\tvar patchType = patch.$;\n\n\t\tif (patchType === 1)\n\t\t{\n\t\t\t_VirtualDom_addDomNodes(domNode, vNode.k, patch.s, eventNode);\n\t\t}\n\t\telse if (patchType === 8)\n\t\t{\n\t\t\tpatch.t = domNode;\n\t\t\tpatch.u = eventNode;\n\n\t\t\tvar subPatches = patch.s.w;\n\t\t\tif (subPatches.length > 0)\n\t\t\t{\n\t\t\t\t_VirtualDom_addDomNodesHelp(domNode, vNode, subPatches, 0, low, high, eventNode);\n\t\t\t}\n\t\t}\n\t\telse if (patchType === 9)\n\t\t{\n\t\t\tpatch.t = domNode;\n\t\t\tpatch.u = eventNode;\n\n\t\t\tvar data = patch.s;\n\t\t\tif (data)\n\t\t\t{\n\t\t\t\tdata.A.s = domNode;\n\t\t\t\tvar subPatches = data.w;\n\t\t\t\tif (subPatches.length > 0)\n\t\t\t\t{\n\t\t\t\t\t_VirtualDom_addDomNodesHelp(domNode, vNode, subPatches, 0, low, high, eventNode);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tpatch.t = domNode;\n\t\t\tpatch.u = eventNode;\n\t\t}\n\n\t\ti++;\n\n\t\tif (!(patch = patches[i]) || (index = patch.r) > high)\n\t\t{\n\t\t\treturn i;\n\t\t}\n\t}\n\n\tvar tag = vNode.$;\n\n\tif (tag === 4)\n\t{\n\t\tvar subNode = vNode.k;\n\n\t\twhile (subNode.$ === 4)\n\t\t{\n\t\t\tsubNode = subNode.k;\n\t\t}\n\n\t\treturn _VirtualDom_addDomNodesHelp(domNode, subNode, patches, i, low + 1, high, domNode.elm_event_node_ref);\n\t}\n\n\t// tag must be 1 or 2 at this point\n\n\tvar vKids = vNode.e;\n\tvar childNodes = domNode.childNodes;\n\tfor (var j = 0; j < vKids.length; j++)\n\t{\n\t\tlow++;\n\t\tvar vKid = tag === 1 ? vKids[j] : vKids[j].b;\n\t\tvar nextLow = low + (vKid.b || 0);\n\t\tif (low <= index && index <= nextLow)\n\t\t{\n\t\t\ti = _VirtualDom_addDomNodesHelp(childNodes[j], vKid, patches, i, low, nextLow, eventNode);\n\t\t\tif (!(patch = patches[i]) || (index = patch.r) > high)\n\t\t\t{\n\t\t\t\treturn i;\n\t\t\t}\n\t\t}\n\t\tlow = nextLow;\n\t}\n\treturn i;\n}\n\n\n\n// APPLY PATCHES\n\n\nfunction _VirtualDom_applyPatches(rootDomNode, oldVirtualNode, patches, eventNode)\n{\n\tif (patches.length === 0)\n\t{\n\t\treturn rootDomNode;\n\t}\n\n\t_VirtualDom_addDomNodes(rootDomNode, oldVirtualNode, patches, eventNode);\n\treturn _VirtualDom_applyPatchesHelp(rootDomNode, patches);\n}\n\nfunction _VirtualDom_applyPatchesHelp(rootDomNode, patches)\n{\n\tfor (var i = 0; i < patches.length; i++)\n\t{\n\t\tvar patch = patches[i];\n\t\tvar localDomNode = patch.t\n\t\tvar newNode = _VirtualDom_applyPatch(localDomNode, patch);\n\t\tif (localDomNode === rootDomNode)\n\t\t{\n\t\t\trootDomNode = newNode;\n\t\t}\n\t}\n\treturn rootDomNode;\n}\n\nfunction _VirtualDom_applyPatch(domNode, patch)\n{\n\tswitch (patch.$)\n\t{\n\t\tcase 0:\n\t\t\treturn _VirtualDom_applyPatchRedraw(domNode, patch.s, patch.u);\n\n\t\tcase 4:\n\t\t\t_VirtualDom_applyFacts(domNode, patch.u, patch.s);\n\t\t\treturn domNode;\n\n\t\tcase 3:\n\t\t\tdomNode.replaceData(0, domNode.length, patch.s);\n\t\t\treturn domNode;\n\n\t\tcase 1:\n\t\t\treturn _VirtualDom_applyPatchesHelp(domNode, patch.s);\n\n\t\tcase 2:\n\t\t\tif (domNode.elm_event_node_ref)\n\t\t\t{\n\t\t\t\tdomNode.elm_event_node_ref.j = patch.s;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tdomNode.elm_event_node_ref = { j: patch.s, p: patch.u };\n\t\t\t}\n\t\t\treturn domNode;\n\n\t\tcase 6:\n\t\t\tvar data = patch.s;\n\t\t\tfor (var i = 0; i < data.i; i++)\n\t\t\t{\n\t\t\t\tdomNode.removeChild(domNode.childNodes[data.v]);\n\t\t\t}\n\t\t\treturn domNode;\n\n\t\tcase 7:\n\t\t\tvar data = patch.s;\n\t\t\tvar kids = data.e;\n\t\t\tvar i = data.v;\n\t\t\tvar theEnd = domNode.childNodes[i];\n\t\t\tfor (; i < kids.length; i++)\n\t\t\t{\n\t\t\t\tdomNode.insertBefore(_VirtualDom_render(kids[i], patch.u), theEnd);\n\t\t\t}\n\t\t\treturn domNode;\n\n\t\tcase 9:\n\t\t\tvar data = patch.s;\n\t\t\tif (!data)\n\t\t\t{\n\t\t\t\tdomNode.parentNode.removeChild(domNode);\n\t\t\t\treturn domNode;\n\t\t\t}\n\t\t\tvar entry = data.A;\n\t\t\tif (typeof entry.r !== 'undefined')\n\t\t\t{\n\t\t\t\tdomNode.parentNode.removeChild(domNode);\n\t\t\t}\n\t\t\tentry.s = _VirtualDom_applyPatchesHelp(domNode, data.w);\n\t\t\treturn domNode;\n\n\t\tcase 8:\n\t\t\treturn _VirtualDom_applyPatchReorder(domNode, patch);\n\n\t\tcase 5:\n\t\t\treturn patch.s(domNode);\n\n\t\tdefault:\n\t\t\t_Debug_crash(10); // 'Ran into an unknown patch!'\n\t}\n}\n\n\nfunction _VirtualDom_applyPatchRedraw(domNode, vNode, eventNode)\n{\n\tvar parentNode = domNode.parentNode;\n\tvar newNode = _VirtualDom_render(vNode, eventNode);\n\n\tif (!newNode.elm_event_node_ref)\n\t{\n\t\tnewNode.elm_event_node_ref = domNode.elm_event_node_ref;\n\t}\n\n\tif (parentNode && newNode !== domNode)\n\t{\n\t\tparentNode.replaceChild(newNode, domNode);\n\t}\n\treturn newNode;\n}\n\n\nfunction _VirtualDom_applyPatchReorder(domNode, patch)\n{\n\tvar data = patch.s;\n\n\t// remove end inserts\n\tvar frag = _VirtualDom_applyPatchReorderEndInsertsHelp(data.y, patch);\n\n\t// removals\n\tdomNode = _VirtualDom_applyPatchesHelp(domNode, data.w);\n\n\t// inserts\n\tvar inserts = data.x;\n\tfor (var i = 0; i < inserts.length; i++)\n\t{\n\t\tvar insert = inserts[i];\n\t\tvar entry = insert.A;\n\t\tvar node = entry.c === 2\n\t\t\t? entry.s\n\t\t\t: _VirtualDom_render(entry.z, patch.u);\n\t\tdomNode.insertBefore(node, domNode.childNodes[insert.r]);\n\t}\n\n\t// add end inserts\n\tif (frag)\n\t{\n\t\t_VirtualDom_appendChild(domNode, frag);\n\t}\n\n\treturn domNode;\n}\n\n\nfunction _VirtualDom_applyPatchReorderEndInsertsHelp(endInserts, patch)\n{\n\tif (!endInserts)\n\t{\n\t\treturn;\n\t}\n\n\tvar frag = _VirtualDom_doc.createDocumentFragment();\n\tfor (var i = 0; i < endInserts.length; i++)\n\t{\n\t\tvar insert = endInserts[i];\n\t\tvar entry = insert.A;\n\t\t_VirtualDom_appendChild(frag, entry.c === 2\n\t\t\t? entry.s\n\t\t\t: _VirtualDom_render(entry.z, patch.u)\n\t\t);\n\t}\n\treturn frag;\n}\n\n\nfunction _VirtualDom_virtualize(node)\n{\n\t// TEXT NODES\n\n\tif (node.nodeType === 3)\n\t{\n\t\treturn _VirtualDom_text(node.textContent);\n\t}\n\n\n\t// WEIRD NODES\n\n\tif (node.nodeType !== 1)\n\t{\n\t\treturn _VirtualDom_text('');\n\t}\n\n\n\t// ELEMENT NODES\n\n\tvar attrList = _List_Nil;\n\tvar attrs = node.attributes;\n\tfor (var i = attrs.length; i--; )\n\t{\n\t\tvar attr = attrs[i];\n\t\tvar name = attr.name;\n\t\tvar value = attr.value;\n\t\tattrList = _List_Cons( A2(_VirtualDom_attribute, name, value), attrList );\n\t}\n\n\tvar tag = node.tagName.toLowerCase();\n\tvar kidList = _List_Nil;\n\tvar kids = node.childNodes;\n\n\tfor (var i = kids.length; i--; )\n\t{\n\t\tkidList = _List_Cons(_VirtualDom_virtualize(kids[i]), kidList);\n\t}\n\treturn A3(_VirtualDom_node, tag, attrList, kidList);\n}\n\nfunction _VirtualDom_dekey(keyedNode)\n{\n\tvar keyedKids = keyedNode.e;\n\tvar len = keyedKids.length;\n\tvar kids = new Array(len);\n\tfor (var i = 0; i < len; i++)\n\t{\n\t\tkids[i] = keyedKids[i].b;\n\t}\n\n\treturn {\n\t\t$: 1,\n\t\tc: keyedNode.c,\n\t\td: keyedNode.d,\n\t\te: kids,\n\t\tf: keyedNode.f,\n\t\tb: keyedNode.b\n\t};\n}\n\n\n\n\n// ELEMENT\n\n\nvar _Debugger_element;\n\nvar _Browser_element = _Debugger_element || F4(function(impl, flagDecoder, debugMetadata, args)\n{\n\treturn _Platform_initialize(\n\t\tflagDecoder,\n\t\targs,\n\t\timpl.bn,\n\t\timpl.bx,\n\t\timpl.bv,\n\t\tfunction(sendToApp, initialModel) {\n\t\t\tvar view = impl.by;\n\t\t\t/**/\n\t\t\tvar domNode = args['node'];\n\t\t\t//*/\n\t\t\t/**_UNUSED/\n\t\t\tvar domNode = args && args['node'] ? args['node'] : _Debug_crash(0);\n\t\t\t//*/\n\t\t\tvar currNode = _VirtualDom_virtualize(domNode);\n\n\t\t\treturn _Browser_makeAnimator(initialModel, function(model)\n\t\t\t{\n\t\t\t\tvar nextNode = view(model);\n\t\t\t\tvar patches = _VirtualDom_diff(currNode, nextNode);\n\t\t\t\tdomNode = _VirtualDom_applyPatches(domNode, currNode, patches, sendToApp);\n\t\t\t\tcurrNode = nextNode;\n\t\t\t});\n\t\t}\n\t);\n});\n\n\n\n// DOCUMENT\n\n\nvar _Debugger_document;\n\nvar _Browser_document = _Debugger_document || F4(function(impl, flagDecoder, debugMetadata, args)\n{\n\treturn _Platform_initialize(\n\t\tflagDecoder,\n\t\targs,\n\t\timpl.bn,\n\t\timpl.bx,\n\t\timpl.bv,\n\t\tfunction(sendToApp, initialModel) {\n\t\t\tvar divertHrefToApp = impl.al && impl.al(sendToApp)\n\t\t\tvar view = impl.by;\n\t\t\tvar title = _VirtualDom_doc.title;\n\t\t\tvar bodyNode = _VirtualDom_doc.body;\n\t\t\tvar currNode = _VirtualDom_virtualize(bodyNode);\n\t\t\treturn _Browser_makeAnimator(initialModel, function(model)\n\t\t\t{\n\t\t\t\t_VirtualDom_divertHrefToApp = divertHrefToApp;\n\t\t\t\tvar doc = view(model);\n\t\t\t\tvar nextNode = _VirtualDom_node('body')(_List_Nil)(doc.bc);\n\t\t\t\tvar patches = _VirtualDom_diff(currNode, nextNode);\n\t\t\t\tbodyNode = _VirtualDom_applyPatches(bodyNode, currNode, patches, sendToApp);\n\t\t\t\tcurrNode = nextNode;\n\t\t\t\t_VirtualDom_divertHrefToApp = 0;\n\t\t\t\t(title !== doc.bw) && (_VirtualDom_doc.title = title = doc.bw);\n\t\t\t});\n\t\t}\n\t);\n});\n\n\n\n// ANIMATION\n\n\nvar _Browser_cancelAnimationFrame =\n\ttypeof cancelAnimationFrame !== 'undefined'\n\t\t? cancelAnimationFrame\n\t\t: function(id) { clearTimeout(id); };\n\nvar _Browser_requestAnimationFrame =\n\ttypeof requestAnimationFrame !== 'undefined'\n\t\t? requestAnimationFrame\n\t\t: function(callback) { return setTimeout(callback, 1000 / 60); };\n\n\nfunction _Browser_makeAnimator(model, draw)\n{\n\tdraw(model);\n\n\tvar state = 0;\n\n\tfunction updateIfNeeded()\n\t{\n\t\tstate = state === 1\n\t\t\t? 0\n\t\t\t: ( _Browser_requestAnimationFrame(updateIfNeeded), draw(model), 1 );\n\t}\n\n\treturn function(nextModel, isSync)\n\t{\n\t\tmodel = nextModel;\n\n\t\tisSync\n\t\t\t? ( draw(model),\n\t\t\t\tstate === 2 && (state = 1)\n\t\t\t\t)\n\t\t\t: ( state === 0 && _Browser_requestAnimationFrame(updateIfNeeded),\n\t\t\t\tstate = 2\n\t\t\t\t);\n\t};\n}\n\n\n\n// APPLICATION\n\n\nfunction _Browser_application(impl)\n{\n\tvar onUrlChange = impl.br;\n\tvar onUrlRequest = impl.bs;\n\tvar key = function() { key.a(onUrlChange(_Browser_getUrl())); };\n\n\treturn _Browser_document({\n\t\tal: function(sendToApp)\n\t\t{\n\t\t\tkey.a = sendToApp;\n\t\t\t_Browser_window.addEventListener('popstate', key);\n\t\t\t_Browser_window.navigator.userAgent.indexOf('Trident') < 0 || _Browser_window.addEventListener('hashchange', key);\n\n\t\t\treturn F2(function(domNode, event)\n\t\t\t{\n\t\t\t\tif (!event.ctrlKey && !event.metaKey && !event.shiftKey && event.button < 1 && !domNode.target && !domNode.hasAttribute('download'))\n\t\t\t\t{\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\tvar href = domNode.href;\n\t\t\t\t\tvar curr = _Browser_getUrl();\n\t\t\t\t\tvar next = $elm$url$Url$fromString(href).a;\n\t\t\t\t\tsendToApp(onUrlRequest(\n\t\t\t\t\t\t(next\n\t\t\t\t\t\t\t&& curr.aR === next.aR\n\t\t\t\t\t\t\t&& curr.aB === next.aB\n\t\t\t\t\t\t\t&& curr.aN.a === next.aN.a\n\t\t\t\t\t\t)\n\t\t\t\t\t\t\t? $elm$browser$Browser$Internal(next)\n\t\t\t\t\t\t\t: $elm$browser$Browser$External(href)\n\t\t\t\t\t));\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\t\tbn: function(flags)\n\t\t{\n\t\t\treturn A3(impl.bn, flags, _Browser_getUrl(), key);\n\t\t},\n\t\tby: impl.by,\n\t\tbx: impl.bx,\n\t\tbv: impl.bv\n\t});\n}\n\nfunction _Browser_getUrl()\n{\n\treturn $elm$url$Url$fromString(_VirtualDom_doc.location.href).a || _Debug_crash(1);\n}\n\nvar _Browser_go = F2(function(key, n)\n{\n\treturn A2($elm$core$Task$perform, $elm$core$Basics$never, _Scheduler_binding(function() {\n\t\tn && history.go(n);\n\t\tkey();\n\t}));\n});\n\nvar _Browser_pushUrl = F2(function(key, url)\n{\n\treturn A2($elm$core$Task$perform, $elm$core$Basics$never, _Scheduler_binding(function() {\n\t\thistory.pushState({}, '', url);\n\t\tkey();\n\t}));\n});\n\nvar _Browser_replaceUrl = F2(function(key, url)\n{\n\treturn A2($elm$core$Task$perform, $elm$core$Basics$never, _Scheduler_binding(function() {\n\t\thistory.replaceState({}, '', url);\n\t\tkey();\n\t}));\n});\n\n\n\n// GLOBAL EVENTS\n\n\nvar _Browser_fakeNode = { addEventListener: function() {}, removeEventListener: function() {} };\nvar _Browser_doc = typeof document !== 'undefined' ? document : _Browser_fakeNode;\nvar _Browser_window = typeof window !== 'undefined' ? window : _Browser_fakeNode;\n\nvar _Browser_on = F3(function(node, eventName, sendToSelf)\n{\n\treturn _Scheduler_spawn(_Scheduler_binding(function(callback)\n\t{\n\t\tfunction handler(event)\t{ _Scheduler_rawSpawn(sendToSelf(event)); }\n\t\tnode.addEventListener(eventName, handler, _VirtualDom_passiveSupported && { passive: true });\n\t\treturn function() { node.removeEventListener(eventName, handler); };\n\t}));\n});\n\nvar _Browser_decodeEvent = F2(function(decoder, event)\n{\n\tvar result = _Json_runHelp(decoder, event);\n\treturn $elm$core$Result$isOk(result) ? $elm$core$Maybe$Just(result.a) : $elm$core$Maybe$Nothing;\n});\n\n\n\n// PAGE VISIBILITY\n\n\nfunction _Browser_visibilityInfo()\n{\n\treturn (typeof _VirtualDom_doc.hidden !== 'undefined')\n\t\t? { bl: 'hidden', bd: 'visibilitychange' }\n\t\t:\n\t(typeof _VirtualDom_doc.mozHidden !== 'undefined')\n\t\t? { bl: 'mozHidden', bd: 'mozvisibilitychange' }\n\t\t:\n\t(typeof _VirtualDom_doc.msHidden !== 'undefined')\n\t\t? { bl: 'msHidden', bd: 'msvisibilitychange' }\n\t\t:\n\t(typeof _VirtualDom_doc.webkitHidden !== 'undefined')\n\t\t? { bl: 'webkitHidden', bd: 'webkitvisibilitychange' }\n\t\t: { bl: 'hidden', bd: 'visibilitychange' };\n}\n\n\n\n// ANIMATION FRAMES\n\n\nfunction _Browser_rAF()\n{\n\treturn _Scheduler_binding(function(callback)\n\t{\n\t\tvar id = _Browser_requestAnimationFrame(function() {\n\t\t\tcallback(_Scheduler_succeed(Date.now()));\n\t\t});\n\n\t\treturn function() {\n\t\t\t_Browser_cancelAnimationFrame(id);\n\t\t};\n\t});\n}\n\n\nfunction _Browser_now()\n{\n\treturn _Scheduler_binding(function(callback)\n\t{\n\t\tcallback(_Scheduler_succeed(Date.now()));\n\t});\n}\n\n\n\n// DOM STUFF\n\n\nfunction _Browser_withNode(id, doStuff)\n{\n\treturn _Scheduler_binding(function(callback)\n\t{\n\t\t_Browser_requestAnimationFrame(function() {\n\t\t\tvar node = document.getElementById(id);\n\t\t\tcallback(node\n\t\t\t\t? _Scheduler_succeed(doStuff(node))\n\t\t\t\t: _Scheduler_fail($elm$browser$Browser$Dom$NotFound(id))\n\t\t\t);\n\t\t});\n\t});\n}\n\n\nfunction _Browser_withWindow(doStuff)\n{\n\treturn _Scheduler_binding(function(callback)\n\t{\n\t\t_Browser_requestAnimationFrame(function() {\n\t\t\tcallback(_Scheduler_succeed(doStuff()));\n\t\t});\n\t});\n}\n\n\n// FOCUS and BLUR\n\n\nvar _Browser_call = F2(function(functionName, id)\n{\n\treturn _Browser_withNode(id, function(node) {\n\t\tnode[functionName]();\n\t\treturn _Utils_Tuple0;\n\t});\n});\n\n\n\n// WINDOW VIEWPORT\n\n\nfunction _Browser_getViewport()\n{\n\treturn {\n\t\taZ: _Browser_getScene(),\n\t\ta3: {\n\t\t\ta5: _Browser_window.pageXOffset,\n\t\t\ta6: _Browser_window.pageYOffset,\n\t\t\ta4: _Browser_doc.documentElement.clientWidth,\n\t\t\taA: _Browser_doc.documentElement.clientHeight\n\t\t}\n\t};\n}\n\nfunction _Browser_getScene()\n{\n\tvar body = _Browser_doc.body;\n\tvar elem = _Browser_doc.documentElement;\n\treturn {\n\t\ta4: Math.max(body.scrollWidth, body.offsetWidth, elem.scrollWidth, elem.offsetWidth, elem.clientWidth),\n\t\taA: Math.max(body.scrollHeight, body.offsetHeight, elem.scrollHeight, elem.offsetHeight, elem.clientHeight)\n\t};\n}\n\nvar _Browser_setViewport = F2(function(x, y)\n{\n\treturn _Browser_withWindow(function()\n\t{\n\t\t_Browser_window.scroll(x, y);\n\t\treturn _Utils_Tuple0;\n\t});\n});\n\n\n\n// ELEMENT VIEWPORT\n\n\nfunction _Browser_getViewportOf(id)\n{\n\treturn _Browser_withNode(id, function(node)\n\t{\n\t\treturn {\n\t\t\taZ: {\n\t\t\t\ta4: node.scrollWidth,\n\t\t\t\taA: node.scrollHeight\n\t\t\t},\n\t\t\ta3: {\n\t\t\t\ta5: node.scrollLeft,\n\t\t\t\ta6: node.scrollTop,\n\t\t\t\ta4: node.clientWidth,\n\t\t\t\taA: node.clientHeight\n\t\t\t}\n\t\t};\n\t});\n}\n\n\nvar _Browser_setViewportOf = F3(function(id, x, y)\n{\n\treturn _Browser_withNode(id, function(node)\n\t{\n\t\tnode.scrollLeft = x;\n\t\tnode.scrollTop = y;\n\t\treturn _Utils_Tuple0;\n\t});\n});\n\n\n\n// ELEMENT\n\n\nfunction _Browser_getElement(id)\n{\n\treturn _Browser_withNode(id, function(node)\n\t{\n\t\tvar rect = node.getBoundingClientRect();\n\t\tvar x = _Browser_window.pageXOffset;\n\t\tvar y = _Browser_window.pageYOffset;\n\t\treturn {\n\t\t\taZ: _Browser_getScene(),\n\t\t\ta3: {\n\t\t\t\ta5: x,\n\t\t\t\ta6: y,\n\t\t\t\ta4: _Browser_doc.documentElement.clientWidth,\n\t\t\t\taA: _Browser_doc.documentElement.clientHeight\n\t\t\t},\n\t\t\tbg: {\n\t\t\t\ta5: x + rect.left,\n\t\t\t\ta6: y + rect.top,\n\t\t\t\ta4: rect.width,\n\t\t\t\taA: rect.height\n\t\t\t}\n\t\t};\n\t});\n}\n\n\n\n// LOAD and RELOAD\n\n\nfunction _Browser_reload(skipCache)\n{\n\treturn A2($elm$core$Task$perform, $elm$core$Basics$never, _Scheduler_binding(function(callback)\n\t{\n\t\t_VirtualDom_doc.location.reload(skipCache);\n\t}));\n}\n\nfunction _Browser_load(url)\n{\n\treturn A2($elm$core$Task$perform, $elm$core$Basics$never, _Scheduler_binding(function(callback)\n\t{\n\t\ttry\n\t\t{\n\t\t\t_Browser_window.location = url;\n\t\t}\n\t\tcatch(err)\n\t\t{\n\t\t\t// Only Firefox can throw a NS_ERROR_MALFORMED_URI exception here.\n\t\t\t// Other browsers reload the page, so let's be consistent about that.\n\t\t\t_VirtualDom_doc.location.reload(false);\n\t\t}\n\t}));\n}\n\n\n\nvar _Bitwise_and = F2(function(a, b)\n{\n\treturn a & b;\n});\n\nvar _Bitwise_or = F2(function(a, b)\n{\n\treturn a | b;\n});\n\nvar _Bitwise_xor = F2(function(a, b)\n{\n\treturn a ^ b;\n});\n\nfunction _Bitwise_complement(a)\n{\n\treturn ~a;\n};\n\nvar _Bitwise_shiftLeftBy = F2(function(offset, a)\n{\n\treturn a << offset;\n});\n\nvar _Bitwise_shiftRightBy = F2(function(offset, a)\n{\n\treturn a >> offset;\n});\n\nvar _Bitwise_shiftRightZfBy = F2(function(offset, a)\n{\n\treturn a >>> offset;\n});\nvar $elm$core$Basics$always = F2(\n\tfunction (a, _v0) {\n\t\treturn a;\n\t});\nvar $elm$core$Basics$EQ = 1;\nvar $elm$core$Basics$GT = 2;\nvar $elm$core$Basics$LT = 0;\nvar $elm$core$List$cons = _List_cons;\nvar $elm$core$Dict$foldr = F3(\n\tfunction (func, acc, t) {\n\t\tfoldr:\n\t\twhile (true) {\n\t\t\tif (t.$ === -2) {\n\t\t\t\treturn acc;\n\t\t\t} else {\n\t\t\t\tvar key = t.b;\n\t\t\t\tvar value = t.c;\n\t\t\t\tvar left = t.d;\n\t\t\t\tvar right = t.e;\n\t\t\t\tvar $temp$func = func,\n\t\t\t\t\t$temp$acc = A3(\n\t\t\t\t\tfunc,\n\t\t\t\t\tkey,\n\t\t\t\t\tvalue,\n\t\t\t\t\tA3($elm$core$Dict$foldr, func, acc, right)),\n\t\t\t\t\t$temp$t = left;\n\t\t\t\tfunc = $temp$func;\n\t\t\t\tacc = $temp$acc;\n\t\t\t\tt = $temp$t;\n\t\t\t\tcontinue foldr;\n\t\t\t}\n\t\t}\n\t});\nvar $elm$core$Dict$toList = function (dict) {\n\treturn A3(\n\t\t$elm$core$Dict$foldr,\n\t\tF3(\n\t\t\tfunction (key, value, list) {\n\t\t\t\treturn A2(\n\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t_Utils_Tuple2(key, value),\n\t\t\t\t\tlist);\n\t\t\t}),\n\t\t_List_Nil,\n\t\tdict);\n};\nvar $elm$core$Dict$keys = function (dict) {\n\treturn A3(\n\t\t$elm$core$Dict$foldr,\n\t\tF3(\n\t\t\tfunction (key, value, keyList) {\n\t\t\t\treturn A2($elm$core$List$cons, key, keyList);\n\t\t\t}),\n\t\t_List_Nil,\n\t\tdict);\n};\nvar $elm$core$Set$toList = function (_v0) {\n\tvar dict = _v0;\n\treturn $elm$core$Dict$keys(dict);\n};\nvar $elm$core$Elm$JsArray$foldr = _JsArray_foldr;\nvar $elm$core$Array$foldr = F3(\n\tfunction (func, baseCase, _v0) {\n\t\tvar tree = _v0.c;\n\t\tvar tail = _v0.d;\n\t\tvar helper = F2(\n\t\t\tfunction (node, acc) {\n\t\t\t\tif (!node.$) {\n\t\t\t\t\tvar subTree = node.a;\n\t\t\t\t\treturn A3($elm$core$Elm$JsArray$foldr, helper, acc, subTree);\n\t\t\t\t} else {\n\t\t\t\t\tvar values = node.a;\n\t\t\t\t\treturn A3($elm$core$Elm$JsArray$foldr, func, acc, values);\n\t\t\t\t}\n\t\t\t});\n\t\treturn A3(\n\t\t\t$elm$core$Elm$JsArray$foldr,\n\t\t\thelper,\n\t\t\tA3($elm$core$Elm$JsArray$foldr, func, baseCase, tail),\n\t\t\ttree);\n\t});\nvar $elm$core$Array$toList = function (array) {\n\treturn A3($elm$core$Array$foldr, $elm$core$List$cons, _List_Nil, array);\n};\nvar $elm$core$Result$Err = function (a) {\n\treturn {$: 1, a: a};\n};\nvar $elm$json$Json$Decode$Failure = F2(\n\tfunction (a, b) {\n\t\treturn {$: 3, a: a, b: b};\n\t});\nvar $elm$json$Json$Decode$Field = F2(\n\tfunction (a, b) {\n\t\treturn {$: 0, a: a, b: b};\n\t});\nvar $elm$json$Json$Decode$Index = F2(\n\tfunction (a, b) {\n\t\treturn {$: 1, a: a, b: b};\n\t});\nvar $elm$core$Result$Ok = function (a) {\n\treturn {$: 0, a: a};\n};\nvar $elm$json$Json$Decode$OneOf = function (a) {\n\treturn {$: 2, a: a};\n};\nvar $elm$core$Basics$False = 1;\nvar $elm$core$Basics$add = _Basics_add;\nvar $elm$core$Maybe$Just = function (a) {\n\treturn {$: 0, a: a};\n};\nvar $elm$core$Maybe$Nothing = {$: 1};\nvar $elm$core$String$all = _String_all;\nvar $elm$core$Basics$and = _Basics_and;\nvar $elm$core$Basics$append = _Utils_append;\nvar $elm$json$Json$Encode$encode = _Json_encode;\nvar $elm$core$String$fromInt = _String_fromNumber;\nvar $elm$core$String$join = F2(\n\tfunction (sep, chunks) {\n\t\treturn A2(\n\t\t\t_String_join,\n\t\t\tsep,\n\t\t\t_List_toArray(chunks));\n\t});\nvar $elm$core$String$split = F2(\n\tfunction (sep, string) {\n\t\treturn _List_fromArray(\n\t\t\tA2(_String_split, sep, string));\n\t});\nvar $elm$json$Json$Decode$indent = function (str) {\n\treturn A2(\n\t\t$elm$core$String$join,\n\t\t'\\n    ',\n\t\tA2($elm$core$String$split, '\\n', str));\n};\nvar $elm$core$List$foldl = F3(\n\tfunction (func, acc, list) {\n\t\tfoldl:\n\t\twhile (true) {\n\t\t\tif (!list.b) {\n\t\t\t\treturn acc;\n\t\t\t} else {\n\t\t\t\tvar x = list.a;\n\t\t\t\tvar xs = list.b;\n\t\t\t\tvar $temp$func = func,\n\t\t\t\t\t$temp$acc = A2(func, x, acc),\n\t\t\t\t\t$temp$list = xs;\n\t\t\t\tfunc = $temp$func;\n\t\t\t\tacc = $temp$acc;\n\t\t\t\tlist = $temp$list;\n\t\t\t\tcontinue foldl;\n\t\t\t}\n\t\t}\n\t});\nvar $elm$core$List$length = function (xs) {\n\treturn A3(\n\t\t$elm$core$List$foldl,\n\t\tF2(\n\t\t\tfunction (_v0, i) {\n\t\t\t\treturn i + 1;\n\t\t\t}),\n\t\t0,\n\t\txs);\n};\nvar $elm$core$List$map2 = _List_map2;\nvar $elm$core$Basics$le = _Utils_le;\nvar $elm$core$Basics$sub = _Basics_sub;\nvar $elm$core$List$rangeHelp = F3(\n\tfunction (lo, hi, list) {\n\t\trangeHelp:\n\t\twhile (true) {\n\t\t\tif (_Utils_cmp(lo, hi) < 1) {\n\t\t\t\tvar $temp$lo = lo,\n\t\t\t\t\t$temp$hi = hi - 1,\n\t\t\t\t\t$temp$list = A2($elm$core$List$cons, hi, list);\n\t\t\t\tlo = $temp$lo;\n\t\t\t\thi = $temp$hi;\n\t\t\t\tlist = $temp$list;\n\t\t\t\tcontinue rangeHelp;\n\t\t\t} else {\n\t\t\t\treturn list;\n\t\t\t}\n\t\t}\n\t});\nvar $elm$core$List$range = F2(\n\tfunction (lo, hi) {\n\t\treturn A3($elm$core$List$rangeHelp, lo, hi, _List_Nil);\n\t});\nvar $elm$core$List$indexedMap = F2(\n\tfunction (f, xs) {\n\t\treturn A3(\n\t\t\t$elm$core$List$map2,\n\t\t\tf,\n\t\t\tA2(\n\t\t\t\t$elm$core$List$range,\n\t\t\t\t0,\n\t\t\t\t$elm$core$List$length(xs) - 1),\n\t\t\txs);\n\t});\nvar $elm$core$Char$toCode = _Char_toCode;\nvar $elm$core$Char$isLower = function (_char) {\n\tvar code = $elm$core$Char$toCode(_char);\n\treturn (97 <= code) && (code <= 122);\n};\nvar $elm$core$Char$isUpper = function (_char) {\n\tvar code = $elm$core$Char$toCode(_char);\n\treturn (code <= 90) && (65 <= code);\n};\nvar $elm$core$Basics$or = _Basics_or;\nvar $elm$core$Char$isAlpha = function (_char) {\n\treturn $elm$core$Char$isLower(_char) || $elm$core$Char$isUpper(_char);\n};\nvar $elm$core$Char$isDigit = function (_char) {\n\tvar code = $elm$core$Char$toCode(_char);\n\treturn (code <= 57) && (48 <= code);\n};\nvar $elm$core$Char$isAlphaNum = function (_char) {\n\treturn $elm$core$Char$isLower(_char) || ($elm$core$Char$isUpper(_char) || $elm$core$Char$isDigit(_char));\n};\nvar $elm$core$List$reverse = function (list) {\n\treturn A3($elm$core$List$foldl, $elm$core$List$cons, _List_Nil, list);\n};\nvar $elm$core$String$uncons = _String_uncons;\nvar $elm$json$Json$Decode$errorOneOf = F2(\n\tfunction (i, error) {\n\t\treturn '\\n\\n(' + ($elm$core$String$fromInt(i + 1) + (') ' + $elm$json$Json$Decode$indent(\n\t\t\t$elm$json$Json$Decode$errorToString(error))));\n\t});\nvar $elm$json$Json$Decode$errorToString = function (error) {\n\treturn A2($elm$json$Json$Decode$errorToStringHelp, error, _List_Nil);\n};\nvar $elm$json$Json$Decode$errorToStringHelp = F2(\n\tfunction (error, context) {\n\t\terrorToStringHelp:\n\t\twhile (true) {\n\t\t\tswitch (error.$) {\n\t\t\t\tcase 0:\n\t\t\t\t\tvar f = error.a;\n\t\t\t\t\tvar err = error.b;\n\t\t\t\t\tvar isSimple = function () {\n\t\t\t\t\t\tvar _v1 = $elm$core$String$uncons(f);\n\t\t\t\t\t\tif (_v1.$ === 1) {\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tvar _v2 = _v1.a;\n\t\t\t\t\t\t\tvar _char = _v2.a;\n\t\t\t\t\t\t\tvar rest = _v2.b;\n\t\t\t\t\t\t\treturn $elm$core$Char$isAlpha(_char) && A2($elm$core$String$all, $elm$core$Char$isAlphaNum, rest);\n\t\t\t\t\t\t}\n\t\t\t\t\t}();\n\t\t\t\t\tvar fieldName = isSimple ? ('.' + f) : ('[\\'' + (f + '\\']'));\n\t\t\t\t\tvar $temp$error = err,\n\t\t\t\t\t\t$temp$context = A2($elm$core$List$cons, fieldName, context);\n\t\t\t\t\terror = $temp$error;\n\t\t\t\t\tcontext = $temp$context;\n\t\t\t\t\tcontinue errorToStringHelp;\n\t\t\t\tcase 1:\n\t\t\t\t\tvar i = error.a;\n\t\t\t\t\tvar err = error.b;\n\t\t\t\t\tvar indexName = '[' + ($elm$core$String$fromInt(i) + ']');\n\t\t\t\t\tvar $temp$error = err,\n\t\t\t\t\t\t$temp$context = A2($elm$core$List$cons, indexName, context);\n\t\t\t\t\terror = $temp$error;\n\t\t\t\t\tcontext = $temp$context;\n\t\t\t\t\tcontinue errorToStringHelp;\n\t\t\t\tcase 2:\n\t\t\t\t\tvar errors = error.a;\n\t\t\t\t\tif (!errors.b) {\n\t\t\t\t\t\treturn 'Ran into a Json.Decode.oneOf with no possibilities' + function () {\n\t\t\t\t\t\t\tif (!context.b) {\n\t\t\t\t\t\t\t\treturn '!';\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\treturn ' at json' + A2(\n\t\t\t\t\t\t\t\t\t$elm$core$String$join,\n\t\t\t\t\t\t\t\t\t'',\n\t\t\t\t\t\t\t\t\t$elm$core$List$reverse(context));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}();\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (!errors.b.b) {\n\t\t\t\t\t\t\tvar err = errors.a;\n\t\t\t\t\t\t\tvar $temp$error = err,\n\t\t\t\t\t\t\t\t$temp$context = context;\n\t\t\t\t\t\t\terror = $temp$error;\n\t\t\t\t\t\t\tcontext = $temp$context;\n\t\t\t\t\t\t\tcontinue errorToStringHelp;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tvar starter = function () {\n\t\t\t\t\t\t\t\tif (!context.b) {\n\t\t\t\t\t\t\t\t\treturn 'Json.Decode.oneOf';\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\treturn 'The Json.Decode.oneOf at json' + A2(\n\t\t\t\t\t\t\t\t\t\t$elm$core$String$join,\n\t\t\t\t\t\t\t\t\t\t'',\n\t\t\t\t\t\t\t\t\t\t$elm$core$List$reverse(context));\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}();\n\t\t\t\t\t\t\tvar introduction = starter + (' failed in the following ' + ($elm$core$String$fromInt(\n\t\t\t\t\t\t\t\t$elm$core$List$length(errors)) + ' ways:'));\n\t\t\t\t\t\t\treturn A2(\n\t\t\t\t\t\t\t\t$elm$core$String$join,\n\t\t\t\t\t\t\t\t'\\n\\n',\n\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t\t\t\t\tintroduction,\n\t\t\t\t\t\t\t\t\tA2($elm$core$List$indexedMap, $elm$json$Json$Decode$errorOneOf, errors)));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\tdefault:\n\t\t\t\t\tvar msg = error.a;\n\t\t\t\t\tvar json = error.b;\n\t\t\t\t\tvar introduction = function () {\n\t\t\t\t\t\tif (!context.b) {\n\t\t\t\t\t\t\treturn 'Problem with the given value:\\n\\n';\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn 'Problem with the value at json' + (A2(\n\t\t\t\t\t\t\t\t$elm$core$String$join,\n\t\t\t\t\t\t\t\t'',\n\t\t\t\t\t\t\t\t$elm$core$List$reverse(context)) + ':\\n\\n    ');\n\t\t\t\t\t\t}\n\t\t\t\t\t}();\n\t\t\t\t\treturn introduction + ($elm$json$Json$Decode$indent(\n\t\t\t\t\t\tA2($elm$json$Json$Encode$encode, 4, json)) + ('\\n\\n' + msg));\n\t\t\t}\n\t\t}\n\t});\nvar $elm$core$Array$branchFactor = 32;\nvar $elm$core$Array$Array_elm_builtin = F4(\n\tfunction (a, b, c, d) {\n\t\treturn {$: 0, a: a, b: b, c: c, d: d};\n\t});\nvar $elm$core$Elm$JsArray$empty = _JsArray_empty;\nvar $elm$core$Basics$ceiling = _Basics_ceiling;\nvar $elm$core$Basics$fdiv = _Basics_fdiv;\nvar $elm$core$Basics$logBase = F2(\n\tfunction (base, number) {\n\t\treturn _Basics_log(number) / _Basics_log(base);\n\t});\nvar $elm$core$Basics$toFloat = _Basics_toFloat;\nvar $elm$core$Array$shiftStep = $elm$core$Basics$ceiling(\n\tA2($elm$core$Basics$logBase, 2, $elm$core$Array$branchFactor));\nvar $elm$core$Array$empty = A4($elm$core$Array$Array_elm_builtin, 0, $elm$core$Array$shiftStep, $elm$core$Elm$JsArray$empty, $elm$core$Elm$JsArray$empty);\nvar $elm$core$Elm$JsArray$initialize = _JsArray_initialize;\nvar $elm$core$Array$Leaf = function (a) {\n\treturn {$: 1, a: a};\n};\nvar $elm$core$Basics$apL = F2(\n\tfunction (f, x) {\n\t\treturn f(x);\n\t});\nvar $elm$core$Basics$apR = F2(\n\tfunction (x, f) {\n\t\treturn f(x);\n\t});\nvar $elm$core$Basics$eq = _Utils_equal;\nvar $elm$core$Basics$floor = _Basics_floor;\nvar $elm$core$Elm$JsArray$length = _JsArray_length;\nvar $elm$core$Basics$gt = _Utils_gt;\nvar $elm$core$Basics$max = F2(\n\tfunction (x, y) {\n\t\treturn (_Utils_cmp(x, y) > 0) ? x : y;\n\t});\nvar $elm$core$Basics$mul = _Basics_mul;\nvar $elm$core$Array$SubTree = function (a) {\n\treturn {$: 0, a: a};\n};\nvar $elm$core$Elm$JsArray$initializeFromList = _JsArray_initializeFromList;\nvar $elm$core$Array$compressNodes = F2(\n\tfunction (nodes, acc) {\n\t\tcompressNodes:\n\t\twhile (true) {\n\t\t\tvar _v0 = A2($elm$core$Elm$JsArray$initializeFromList, $elm$core$Array$branchFactor, nodes);\n\t\t\tvar node = _v0.a;\n\t\t\tvar remainingNodes = _v0.b;\n\t\t\tvar newAcc = A2(\n\t\t\t\t$elm$core$List$cons,\n\t\t\t\t$elm$core$Array$SubTree(node),\n\t\t\t\tacc);\n\t\t\tif (!remainingNodes.b) {\n\t\t\t\treturn $elm$core$List$reverse(newAcc);\n\t\t\t} else {\n\t\t\t\tvar $temp$nodes = remainingNodes,\n\t\t\t\t\t$temp$acc = newAcc;\n\t\t\t\tnodes = $temp$nodes;\n\t\t\t\tacc = $temp$acc;\n\t\t\t\tcontinue compressNodes;\n\t\t\t}\n\t\t}\n\t});\nvar $elm$core$Tuple$first = function (_v0) {\n\tvar x = _v0.a;\n\treturn x;\n};\nvar $elm$core$Array$treeFromBuilder = F2(\n\tfunction (nodeList, nodeListSize) {\n\t\ttreeFromBuilder:\n\t\twhile (true) {\n\t\t\tvar newNodeSize = $elm$core$Basics$ceiling(nodeListSize / $elm$core$Array$branchFactor);\n\t\t\tif (newNodeSize === 1) {\n\t\t\t\treturn A2($elm$core$Elm$JsArray$initializeFromList, $elm$core$Array$branchFactor, nodeList).a;\n\t\t\t} else {\n\t\t\t\tvar $temp$nodeList = A2($elm$core$Array$compressNodes, nodeList, _List_Nil),\n\t\t\t\t\t$temp$nodeListSize = newNodeSize;\n\t\t\t\tnodeList = $temp$nodeList;\n\t\t\t\tnodeListSize = $temp$nodeListSize;\n\t\t\t\tcontinue treeFromBuilder;\n\t\t\t}\n\t\t}\n\t});\nvar $elm$core$Array$builderToArray = F2(\n\tfunction (reverseNodeList, builder) {\n\t\tif (!builder.f) {\n\t\t\treturn A4(\n\t\t\t\t$elm$core$Array$Array_elm_builtin,\n\t\t\t\t$elm$core$Elm$JsArray$length(builder.h),\n\t\t\t\t$elm$core$Array$shiftStep,\n\t\t\t\t$elm$core$Elm$JsArray$empty,\n\t\t\t\tbuilder.h);\n\t\t} else {\n\t\t\tvar treeLen = builder.f * $elm$core$Array$branchFactor;\n\t\t\tvar depth = $elm$core$Basics$floor(\n\t\t\t\tA2($elm$core$Basics$logBase, $elm$core$Array$branchFactor, treeLen - 1));\n\t\t\tvar correctNodeList = reverseNodeList ? $elm$core$List$reverse(builder.i) : builder.i;\n\t\t\tvar tree = A2($elm$core$Array$treeFromBuilder, correctNodeList, builder.f);\n\t\t\treturn A4(\n\t\t\t\t$elm$core$Array$Array_elm_builtin,\n\t\t\t\t$elm$core$Elm$JsArray$length(builder.h) + treeLen,\n\t\t\t\tA2($elm$core$Basics$max, 5, depth * $elm$core$Array$shiftStep),\n\t\t\t\ttree,\n\t\t\t\tbuilder.h);\n\t\t}\n\t});\nvar $elm$core$Basics$idiv = _Basics_idiv;\nvar $elm$core$Basics$lt = _Utils_lt;\nvar $elm$core$Array$initializeHelp = F5(\n\tfunction (fn, fromIndex, len, nodeList, tail) {\n\t\tinitializeHelp:\n\t\twhile (true) {\n\t\t\tif (fromIndex < 0) {\n\t\t\t\treturn A2(\n\t\t\t\t\t$elm$core$Array$builderToArray,\n\t\t\t\t\tfalse,\n\t\t\t\t\t{i: nodeList, f: (len / $elm$core$Array$branchFactor) | 0, h: tail});\n\t\t\t} else {\n\t\t\t\tvar leaf = $elm$core$Array$Leaf(\n\t\t\t\t\tA3($elm$core$Elm$JsArray$initialize, $elm$core$Array$branchFactor, fromIndex, fn));\n\t\t\t\tvar $temp$fn = fn,\n\t\t\t\t\t$temp$fromIndex = fromIndex - $elm$core$Array$branchFactor,\n\t\t\t\t\t$temp$len = len,\n\t\t\t\t\t$temp$nodeList = A2($elm$core$List$cons, leaf, nodeList),\n\t\t\t\t\t$temp$tail = tail;\n\t\t\t\tfn = $temp$fn;\n\t\t\t\tfromIndex = $temp$fromIndex;\n\t\t\t\tlen = $temp$len;\n\t\t\t\tnodeList = $temp$nodeList;\n\t\t\t\ttail = $temp$tail;\n\t\t\t\tcontinue initializeHelp;\n\t\t\t}\n\t\t}\n\t});\nvar $elm$core$Basics$remainderBy = _Basics_remainderBy;\nvar $elm$core$Array$initialize = F2(\n\tfunction (len, fn) {\n\t\tif (len <= 0) {\n\t\t\treturn $elm$core$Array$empty;\n\t\t} else {\n\t\t\tvar tailLen = len % $elm$core$Array$branchFactor;\n\t\t\tvar tail = A3($elm$core$Elm$JsArray$initialize, tailLen, len - tailLen, fn);\n\t\t\tvar initialFromIndex = (len - tailLen) - $elm$core$Array$branchFactor;\n\t\t\treturn A5($elm$core$Array$initializeHelp, fn, initialFromIndex, len, _List_Nil, tail);\n\t\t}\n\t});\nvar $elm$core$Basics$True = 0;\nvar $elm$core$Result$isOk = function (result) {\n\tif (!result.$) {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n};\nvar $elm$json$Json$Decode$map = _Json_map1;\nvar $elm$json$Json$Decode$map2 = _Json_map2;\nvar $elm$json$Json$Decode$succeed = _Json_succeed;\nvar $elm$virtual_dom$VirtualDom$toHandlerInt = function (handler) {\n\tswitch (handler.$) {\n\t\tcase 0:\n\t\t\treturn 0;\n\t\tcase 1:\n\t\t\treturn 1;\n\t\tcase 2:\n\t\t\treturn 2;\n\t\tdefault:\n\t\t\treturn 3;\n\t}\n};\nvar $elm$browser$Browser$External = function (a) {\n\treturn {$: 1, a: a};\n};\nvar $elm$browser$Browser$Internal = function (a) {\n\treturn {$: 0, a: a};\n};\nvar $elm$core$Basics$identity = function (x) {\n\treturn x;\n};\nvar $elm$browser$Browser$Dom$NotFound = $elm$core$Basics$identity;\nvar $elm$url$Url$Http = 0;\nvar $elm$url$Url$Https = 1;\nvar $elm$url$Url$Url = F6(\n\tfunction (protocol, host, port_, path, query, fragment) {\n\t\treturn {ay: fragment, aB: host, aL: path, aN: port_, aR: protocol, aS: query};\n\t});\nvar $elm$core$String$contains = _String_contains;\nvar $elm$core$String$length = _String_length;\nvar $elm$core$String$slice = _String_slice;\nvar $elm$core$String$dropLeft = F2(\n\tfunction (n, string) {\n\t\treturn (n < 1) ? string : A3(\n\t\t\t$elm$core$String$slice,\n\t\t\tn,\n\t\t\t$elm$core$String$length(string),\n\t\t\tstring);\n\t});\nvar $elm$core$String$indexes = _String_indexes;\nvar $elm$core$String$isEmpty = function (string) {\n\treturn string === '';\n};\nvar $elm$core$String$left = F2(\n\tfunction (n, string) {\n\t\treturn (n < 1) ? '' : A3($elm$core$String$slice, 0, n, string);\n\t});\nvar $elm$core$String$toInt = _String_toInt;\nvar $elm$url$Url$chompBeforePath = F5(\n\tfunction (protocol, path, params, frag, str) {\n\t\tif ($elm$core$String$isEmpty(str) || A2($elm$core$String$contains, '@', str)) {\n\t\t\treturn $elm$core$Maybe$Nothing;\n\t\t} else {\n\t\t\tvar _v0 = A2($elm$core$String$indexes, ':', str);\n\t\t\tif (!_v0.b) {\n\t\t\t\treturn $elm$core$Maybe$Just(\n\t\t\t\t\tA6($elm$url$Url$Url, protocol, str, $elm$core$Maybe$Nothing, path, params, frag));\n\t\t\t} else {\n\t\t\t\tif (!_v0.b.b) {\n\t\t\t\t\tvar i = _v0.a;\n\t\t\t\t\tvar _v1 = $elm$core$String$toInt(\n\t\t\t\t\t\tA2($elm$core$String$dropLeft, i + 1, str));\n\t\t\t\t\tif (_v1.$ === 1) {\n\t\t\t\t\t\treturn $elm$core$Maybe$Nothing;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar port_ = _v1;\n\t\t\t\t\t\treturn $elm$core$Maybe$Just(\n\t\t\t\t\t\t\tA6(\n\t\t\t\t\t\t\t\t$elm$url$Url$Url,\n\t\t\t\t\t\t\t\tprotocol,\n\t\t\t\t\t\t\t\tA2($elm$core$String$left, i, str),\n\t\t\t\t\t\t\t\tport_,\n\t\t\t\t\t\t\t\tpath,\n\t\t\t\t\t\t\t\tparams,\n\t\t\t\t\t\t\t\tfrag));\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\treturn $elm$core$Maybe$Nothing;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\nvar $elm$url$Url$chompBeforeQuery = F4(\n\tfunction (protocol, params, frag, str) {\n\t\tif ($elm$core$String$isEmpty(str)) {\n\t\t\treturn $elm$core$Maybe$Nothing;\n\t\t} else {\n\t\t\tvar _v0 = A2($elm$core$String$indexes, '/', str);\n\t\t\tif (!_v0.b) {\n\t\t\t\treturn A5($elm$url$Url$chompBeforePath, protocol, '/', params, frag, str);\n\t\t\t} else {\n\t\t\t\tvar i = _v0.a;\n\t\t\t\treturn A5(\n\t\t\t\t\t$elm$url$Url$chompBeforePath,\n\t\t\t\t\tprotocol,\n\t\t\t\t\tA2($elm$core$String$dropLeft, i, str),\n\t\t\t\t\tparams,\n\t\t\t\t\tfrag,\n\t\t\t\t\tA2($elm$core$String$left, i, str));\n\t\t\t}\n\t\t}\n\t});\nvar $elm$url$Url$chompBeforeFragment = F3(\n\tfunction (protocol, frag, str) {\n\t\tif ($elm$core$String$isEmpty(str)) {\n\t\t\treturn $elm$core$Maybe$Nothing;\n\t\t} else {\n\t\t\tvar _v0 = A2($elm$core$String$indexes, '?', str);\n\t\t\tif (!_v0.b) {\n\t\t\t\treturn A4($elm$url$Url$chompBeforeQuery, protocol, $elm$core$Maybe$Nothing, frag, str);\n\t\t\t} else {\n\t\t\t\tvar i = _v0.a;\n\t\t\t\treturn A4(\n\t\t\t\t\t$elm$url$Url$chompBeforeQuery,\n\t\t\t\t\tprotocol,\n\t\t\t\t\t$elm$core$Maybe$Just(\n\t\t\t\t\t\tA2($elm$core$String$dropLeft, i + 1, str)),\n\t\t\t\t\tfrag,\n\t\t\t\t\tA2($elm$core$String$left, i, str));\n\t\t\t}\n\t\t}\n\t});\nvar $elm$url$Url$chompAfterProtocol = F2(\n\tfunction (protocol, str) {\n\t\tif ($elm$core$String$isEmpty(str)) {\n\t\t\treturn $elm$core$Maybe$Nothing;\n\t\t} else {\n\t\t\tvar _v0 = A2($elm$core$String$indexes, '#', str);\n\t\t\tif (!_v0.b) {\n\t\t\t\treturn A3($elm$url$Url$chompBeforeFragment, protocol, $elm$core$Maybe$Nothing, str);\n\t\t\t} else {\n\t\t\t\tvar i = _v0.a;\n\t\t\t\treturn A3(\n\t\t\t\t\t$elm$url$Url$chompBeforeFragment,\n\t\t\t\t\tprotocol,\n\t\t\t\t\t$elm$core$Maybe$Just(\n\t\t\t\t\t\tA2($elm$core$String$dropLeft, i + 1, str)),\n\t\t\t\t\tA2($elm$core$String$left, i, str));\n\t\t\t}\n\t\t}\n\t});\nvar $elm$core$String$startsWith = _String_startsWith;\nvar $elm$url$Url$fromString = function (str) {\n\treturn A2($elm$core$String$startsWith, 'http://', str) ? A2(\n\t\t$elm$url$Url$chompAfterProtocol,\n\t\t0,\n\t\tA2($elm$core$String$dropLeft, 7, str)) : (A2($elm$core$String$startsWith, 'https://', str) ? A2(\n\t\t$elm$url$Url$chompAfterProtocol,\n\t\t1,\n\t\tA2($elm$core$String$dropLeft, 8, str)) : $elm$core$Maybe$Nothing);\n};\nvar $elm$core$Basics$never = function (_v0) {\n\tnever:\n\twhile (true) {\n\t\tvar nvr = _v0;\n\t\tvar $temp$_v0 = nvr;\n\t\t_v0 = $temp$_v0;\n\t\tcontinue never;\n\t}\n};\nvar $elm$core$Task$Perform = $elm$core$Basics$identity;\nvar $elm$core$Task$succeed = _Scheduler_succeed;\nvar $elm$core$Task$init = $elm$core$Task$succeed(0);\nvar $elm$core$List$foldrHelper = F4(\n\tfunction (fn, acc, ctr, ls) {\n\t\tif (!ls.b) {\n\t\t\treturn acc;\n\t\t} else {\n\t\t\tvar a = ls.a;\n\t\t\tvar r1 = ls.b;\n\t\t\tif (!r1.b) {\n\t\t\t\treturn A2(fn, a, acc);\n\t\t\t} else {\n\t\t\t\tvar b = r1.a;\n\t\t\t\tvar r2 = r1.b;\n\t\t\t\tif (!r2.b) {\n\t\t\t\t\treturn A2(\n\t\t\t\t\t\tfn,\n\t\t\t\t\t\ta,\n\t\t\t\t\t\tA2(fn, b, acc));\n\t\t\t\t} else {\n\t\t\t\t\tvar c = r2.a;\n\t\t\t\t\tvar r3 = r2.b;\n\t\t\t\t\tif (!r3.b) {\n\t\t\t\t\t\treturn A2(\n\t\t\t\t\t\t\tfn,\n\t\t\t\t\t\t\ta,\n\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\tfn,\n\t\t\t\t\t\t\t\tb,\n\t\t\t\t\t\t\t\tA2(fn, c, acc)));\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar d = r3.a;\n\t\t\t\t\t\tvar r4 = r3.b;\n\t\t\t\t\t\tvar res = (ctr > 500) ? A3(\n\t\t\t\t\t\t\t$elm$core$List$foldl,\n\t\t\t\t\t\t\tfn,\n\t\t\t\t\t\t\tacc,\n\t\t\t\t\t\t\t$elm$core$List$reverse(r4)) : A4($elm$core$List$foldrHelper, fn, acc, ctr + 1, r4);\n\t\t\t\t\t\treturn A2(\n\t\t\t\t\t\t\tfn,\n\t\t\t\t\t\t\ta,\n\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\tfn,\n\t\t\t\t\t\t\t\tb,\n\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\tfn,\n\t\t\t\t\t\t\t\t\tc,\n\t\t\t\t\t\t\t\t\tA2(fn, d, res))));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\nvar $elm$core$List$foldr = F3(\n\tfunction (fn, acc, ls) {\n\t\treturn A4($elm$core$List$foldrHelper, fn, acc, 0, ls);\n\t});\nvar $elm$core$List$map = F2(\n\tfunction (f, xs) {\n\t\treturn A3(\n\t\t\t$elm$core$List$foldr,\n\t\t\tF2(\n\t\t\t\tfunction (x, acc) {\n\t\t\t\t\treturn A2(\n\t\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t\tf(x),\n\t\t\t\t\t\tacc);\n\t\t\t\t}),\n\t\t\t_List_Nil,\n\t\t\txs);\n\t});\nvar $elm$core$Task$andThen = _Scheduler_andThen;\nvar $elm$core$Task$map = F2(\n\tfunction (func, taskA) {\n\t\treturn A2(\n\t\t\t$elm$core$Task$andThen,\n\t\t\tfunction (a) {\n\t\t\t\treturn $elm$core$Task$succeed(\n\t\t\t\t\tfunc(a));\n\t\t\t},\n\t\t\ttaskA);\n\t});\nvar $elm$core$Task$map2 = F3(\n\tfunction (func, taskA, taskB) {\n\t\treturn A2(\n\t\t\t$elm$core$Task$andThen,\n\t\t\tfunction (a) {\n\t\t\t\treturn A2(\n\t\t\t\t\t$elm$core$Task$andThen,\n\t\t\t\t\tfunction (b) {\n\t\t\t\t\t\treturn $elm$core$Task$succeed(\n\t\t\t\t\t\t\tA2(func, a, b));\n\t\t\t\t\t},\n\t\t\t\t\ttaskB);\n\t\t\t},\n\t\t\ttaskA);\n\t});\nvar $elm$core$Task$sequence = function (tasks) {\n\treturn A3(\n\t\t$elm$core$List$foldr,\n\t\t$elm$core$Task$map2($elm$core$List$cons),\n\t\t$elm$core$Task$succeed(_List_Nil),\n\t\ttasks);\n};\nvar $elm$core$Platform$sendToApp = _Platform_sendToApp;\nvar $elm$core$Task$spawnCmd = F2(\n\tfunction (router, _v0) {\n\t\tvar task = _v0;\n\t\treturn _Scheduler_spawn(\n\t\t\tA2(\n\t\t\t\t$elm$core$Task$andThen,\n\t\t\t\t$elm$core$Platform$sendToApp(router),\n\t\t\t\ttask));\n\t});\nvar $elm$core$Task$onEffects = F3(\n\tfunction (router, commands, state) {\n\t\treturn A2(\n\t\t\t$elm$core$Task$map,\n\t\t\tfunction (_v0) {\n\t\t\t\treturn 0;\n\t\t\t},\n\t\t\t$elm$core$Task$sequence(\n\t\t\t\tA2(\n\t\t\t\t\t$elm$core$List$map,\n\t\t\t\t\t$elm$core$Task$spawnCmd(router),\n\t\t\t\t\tcommands)));\n\t});\nvar $elm$core$Task$onSelfMsg = F3(\n\tfunction (_v0, _v1, _v2) {\n\t\treturn $elm$core$Task$succeed(0);\n\t});\nvar $elm$core$Task$cmdMap = F2(\n\tfunction (tagger, _v0) {\n\t\tvar task = _v0;\n\t\treturn A2($elm$core$Task$map, tagger, task);\n\t});\n_Platform_effectManagers['Task'] = _Platform_createManager($elm$core$Task$init, $elm$core$Task$onEffects, $elm$core$Task$onSelfMsg, $elm$core$Task$cmdMap);\nvar $elm$core$Task$command = _Platform_leaf('Task');\nvar $elm$core$Task$perform = F2(\n\tfunction (toMessage, task) {\n\t\treturn $elm$core$Task$command(\n\t\t\tA2($elm$core$Task$map, toMessage, task));\n\t});\nvar $elm$browser$Browser$element = _Browser_element;\nvar $elm$core$Bitwise$and = _Bitwise_and;\nvar $elm$core$Bitwise$shiftRightZfBy = _Bitwise_shiftRightZfBy;\nvar $elm$core$Array$bitMask = 4294967295 >>> (32 - $elm$core$Array$shiftStep);\nvar $elm$core$Basics$ge = _Utils_ge;\nvar $elm$core$Elm$JsArray$unsafeGet = _JsArray_unsafeGet;\nvar $elm$core$Array$getHelp = F3(\n\tfunction (shift, index, tree) {\n\t\tgetHelp:\n\t\twhile (true) {\n\t\t\tvar pos = $elm$core$Array$bitMask & (index >>> shift);\n\t\t\tvar _v0 = A2($elm$core$Elm$JsArray$unsafeGet, pos, tree);\n\t\t\tif (!_v0.$) {\n\t\t\t\tvar subTree = _v0.a;\n\t\t\t\tvar $temp$shift = shift - $elm$core$Array$shiftStep,\n\t\t\t\t\t$temp$index = index,\n\t\t\t\t\t$temp$tree = subTree;\n\t\t\t\tshift = $temp$shift;\n\t\t\t\tindex = $temp$index;\n\t\t\t\ttree = $temp$tree;\n\t\t\t\tcontinue getHelp;\n\t\t\t} else {\n\t\t\t\tvar values = _v0.a;\n\t\t\t\treturn A2($elm$core$Elm$JsArray$unsafeGet, $elm$core$Array$bitMask & index, values);\n\t\t\t}\n\t\t}\n\t});\nvar $elm$core$Bitwise$shiftLeftBy = _Bitwise_shiftLeftBy;\nvar $elm$core$Array$tailIndex = function (len) {\n\treturn (len >>> 5) << 5;\n};\nvar $elm$core$Array$get = F2(\n\tfunction (index, _v0) {\n\t\tvar len = _v0.a;\n\t\tvar startShift = _v0.b;\n\t\tvar tree = _v0.c;\n\t\tvar tail = _v0.d;\n\t\treturn ((index < 0) || (_Utils_cmp(index, len) > -1)) ? $elm$core$Maybe$Nothing : ((_Utils_cmp(\n\t\t\tindex,\n\t\t\t$elm$core$Array$tailIndex(len)) > -1) ? $elm$core$Maybe$Just(\n\t\t\tA2($elm$core$Elm$JsArray$unsafeGet, $elm$core$Array$bitMask & index, tail)) : $elm$core$Maybe$Just(\n\t\t\tA3($elm$core$Array$getHelp, startShift, index, tree)));\n\t});\nvar $elm$core$List$maybeCons = F3(\n\tfunction (f, mx, xs) {\n\t\tvar _v0 = f(mx);\n\t\tif (!_v0.$) {\n\t\t\tvar x = _v0.a;\n\t\t\treturn A2($elm$core$List$cons, x, xs);\n\t\t} else {\n\t\t\treturn xs;\n\t\t}\n\t});\nvar $elm$core$List$filterMap = F2(\n\tfunction (f, xs) {\n\t\treturn A3(\n\t\t\t$elm$core$List$foldr,\n\t\t\t$elm$core$List$maybeCons(f),\n\t\t\t_List_Nil,\n\t\t\txs);\n\t});\nvar $elm$core$Array$fromListHelp = F3(\n\tfunction (list, nodeList, nodeListSize) {\n\t\tfromListHelp:\n\t\twhile (true) {\n\t\t\tvar _v0 = A2($elm$core$Elm$JsArray$initializeFromList, $elm$core$Array$branchFactor, list);\n\t\t\tvar jsArray = _v0.a;\n\t\t\tvar remainingItems = _v0.b;\n\t\t\tif (_Utils_cmp(\n\t\t\t\t$elm$core$Elm$JsArray$length(jsArray),\n\t\t\t\t$elm$core$Array$branchFactor) < 0) {\n\t\t\t\treturn A2(\n\t\t\t\t\t$elm$core$Array$builderToArray,\n\t\t\t\t\ttrue,\n\t\t\t\t\t{i: nodeList, f: nodeListSize, h: jsArray});\n\t\t\t} else {\n\t\t\t\tvar $temp$list = remainingItems,\n\t\t\t\t\t$temp$nodeList = A2(\n\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t$elm$core$Array$Leaf(jsArray),\n\t\t\t\t\tnodeList),\n\t\t\t\t\t$temp$nodeListSize = nodeListSize + 1;\n\t\t\t\tlist = $temp$list;\n\t\t\t\tnodeList = $temp$nodeList;\n\t\t\t\tnodeListSize = $temp$nodeListSize;\n\t\t\t\tcontinue fromListHelp;\n\t\t\t}\n\t\t}\n\t});\nvar $elm$core$Array$fromList = function (list) {\n\tif (!list.b) {\n\t\treturn $elm$core$Array$empty;\n\t} else {\n\t\treturn A3($elm$core$Array$fromListHelp, list, _List_Nil, 0);\n\t}\n};\nvar $elm$core$Array$length = function (_v0) {\n\tvar len = _v0.a;\n\treturn len;\n};\nvar $elm$core$Elm$JsArray$appendN = _JsArray_appendN;\nvar $elm$core$Elm$JsArray$slice = _JsArray_slice;\nvar $elm$core$Array$appendHelpBuilder = F2(\n\tfunction (tail, builder) {\n\t\tvar tailLen = $elm$core$Elm$JsArray$length(tail);\n\t\tvar notAppended = ($elm$core$Array$branchFactor - $elm$core$Elm$JsArray$length(builder.h)) - tailLen;\n\t\tvar appended = A3($elm$core$Elm$JsArray$appendN, $elm$core$Array$branchFactor, builder.h, tail);\n\t\treturn (notAppended < 0) ? {\n\t\t\ti: A2(\n\t\t\t\t$elm$core$List$cons,\n\t\t\t\t$elm$core$Array$Leaf(appended),\n\t\t\t\tbuilder.i),\n\t\t\tf: builder.f + 1,\n\t\t\th: A3($elm$core$Elm$JsArray$slice, notAppended, tailLen, tail)\n\t\t} : ((!notAppended) ? {\n\t\t\ti: A2(\n\t\t\t\t$elm$core$List$cons,\n\t\t\t\t$elm$core$Array$Leaf(appended),\n\t\t\t\tbuilder.i),\n\t\t\tf: builder.f + 1,\n\t\t\th: $elm$core$Elm$JsArray$empty\n\t\t} : {i: builder.i, f: builder.f, h: appended});\n\t});\nvar $elm$core$List$drop = F2(\n\tfunction (n, list) {\n\t\tdrop:\n\t\twhile (true) {\n\t\t\tif (n <= 0) {\n\t\t\t\treturn list;\n\t\t\t} else {\n\t\t\t\tif (!list.b) {\n\t\t\t\t\treturn list;\n\t\t\t\t} else {\n\t\t\t\t\tvar x = list.a;\n\t\t\t\t\tvar xs = list.b;\n\t\t\t\t\tvar $temp$n = n - 1,\n\t\t\t\t\t\t$temp$list = xs;\n\t\t\t\t\tn = $temp$n;\n\t\t\t\t\tlist = $temp$list;\n\t\t\t\t\tcontinue drop;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\nvar $elm$core$Array$sliceLeft = F2(\n\tfunction (from, array) {\n\t\tvar len = array.a;\n\t\tvar tree = array.c;\n\t\tvar tail = array.d;\n\t\tif (!from) {\n\t\t\treturn array;\n\t\t} else {\n\t\t\tif (_Utils_cmp(\n\t\t\t\tfrom,\n\t\t\t\t$elm$core$Array$tailIndex(len)) > -1) {\n\t\t\t\treturn A4(\n\t\t\t\t\t$elm$core$Array$Array_elm_builtin,\n\t\t\t\t\tlen - from,\n\t\t\t\t\t$elm$core$Array$shiftStep,\n\t\t\t\t\t$elm$core$Elm$JsArray$empty,\n\t\t\t\t\tA3(\n\t\t\t\t\t\t$elm$core$Elm$JsArray$slice,\n\t\t\t\t\t\tfrom - $elm$core$Array$tailIndex(len),\n\t\t\t\t\t\t$elm$core$Elm$JsArray$length(tail),\n\t\t\t\t\t\ttail));\n\t\t\t} else {\n\t\t\t\tvar skipNodes = (from / $elm$core$Array$branchFactor) | 0;\n\t\t\t\tvar helper = F2(\n\t\t\t\t\tfunction (node, acc) {\n\t\t\t\t\t\tif (!node.$) {\n\t\t\t\t\t\t\tvar subTree = node.a;\n\t\t\t\t\t\t\treturn A3($elm$core$Elm$JsArray$foldr, helper, acc, subTree);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tvar leaf = node.a;\n\t\t\t\t\t\t\treturn A2($elm$core$List$cons, leaf, acc);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\tvar leafNodes = A3(\n\t\t\t\t\t$elm$core$Elm$JsArray$foldr,\n\t\t\t\t\thelper,\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[tail]),\n\t\t\t\t\ttree);\n\t\t\t\tvar nodesToInsert = A2($elm$core$List$drop, skipNodes, leafNodes);\n\t\t\t\tif (!nodesToInsert.b) {\n\t\t\t\t\treturn $elm$core$Array$empty;\n\t\t\t\t} else {\n\t\t\t\t\tvar head = nodesToInsert.a;\n\t\t\t\t\tvar rest = nodesToInsert.b;\n\t\t\t\t\tvar firstSlice = from - (skipNodes * $elm$core$Array$branchFactor);\n\t\t\t\t\tvar initialBuilder = {\n\t\t\t\t\t\ti: _List_Nil,\n\t\t\t\t\t\tf: 0,\n\t\t\t\t\t\th: A3(\n\t\t\t\t\t\t\t$elm$core$Elm$JsArray$slice,\n\t\t\t\t\t\t\tfirstSlice,\n\t\t\t\t\t\t\t$elm$core$Elm$JsArray$length(head),\n\t\t\t\t\t\t\thead)\n\t\t\t\t\t};\n\t\t\t\t\treturn A2(\n\t\t\t\t\t\t$elm$core$Array$builderToArray,\n\t\t\t\t\t\ttrue,\n\t\t\t\t\t\tA3($elm$core$List$foldl, $elm$core$Array$appendHelpBuilder, initialBuilder, rest));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\nvar $elm$core$Array$fetchNewTail = F4(\n\tfunction (shift, end, treeEnd, tree) {\n\t\tfetchNewTail:\n\t\twhile (true) {\n\t\t\tvar pos = $elm$core$Array$bitMask & (treeEnd >>> shift);\n\t\t\tvar _v0 = A2($elm$core$Elm$JsArray$unsafeGet, pos, tree);\n\t\t\tif (!_v0.$) {\n\t\t\t\tvar sub = _v0.a;\n\t\t\t\tvar $temp$shift = shift - $elm$core$Array$shiftStep,\n\t\t\t\t\t$temp$end = end,\n\t\t\t\t\t$temp$treeEnd = treeEnd,\n\t\t\t\t\t$temp$tree = sub;\n\t\t\t\tshift = $temp$shift;\n\t\t\t\tend = $temp$end;\n\t\t\t\ttreeEnd = $temp$treeEnd;\n\t\t\t\ttree = $temp$tree;\n\t\t\t\tcontinue fetchNewTail;\n\t\t\t} else {\n\t\t\t\tvar values = _v0.a;\n\t\t\t\treturn A3($elm$core$Elm$JsArray$slice, 0, $elm$core$Array$bitMask & end, values);\n\t\t\t}\n\t\t}\n\t});\nvar $elm$core$Array$hoistTree = F3(\n\tfunction (oldShift, newShift, tree) {\n\t\thoistTree:\n\t\twhile (true) {\n\t\t\tif ((_Utils_cmp(oldShift, newShift) < 1) || (!$elm$core$Elm$JsArray$length(tree))) {\n\t\t\t\treturn tree;\n\t\t\t} else {\n\t\t\t\tvar _v0 = A2($elm$core$Elm$JsArray$unsafeGet, 0, tree);\n\t\t\t\tif (!_v0.$) {\n\t\t\t\t\tvar sub = _v0.a;\n\t\t\t\t\tvar $temp$oldShift = oldShift - $elm$core$Array$shiftStep,\n\t\t\t\t\t\t$temp$newShift = newShift,\n\t\t\t\t\t\t$temp$tree = sub;\n\t\t\t\t\toldShift = $temp$oldShift;\n\t\t\t\t\tnewShift = $temp$newShift;\n\t\t\t\t\ttree = $temp$tree;\n\t\t\t\t\tcontinue hoistTree;\n\t\t\t\t} else {\n\t\t\t\t\treturn tree;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\nvar $elm$core$Elm$JsArray$unsafeSet = _JsArray_unsafeSet;\nvar $elm$core$Array$sliceTree = F3(\n\tfunction (shift, endIdx, tree) {\n\t\tvar lastPos = $elm$core$Array$bitMask & (endIdx >>> shift);\n\t\tvar _v0 = A2($elm$core$Elm$JsArray$unsafeGet, lastPos, tree);\n\t\tif (!_v0.$) {\n\t\t\tvar sub = _v0.a;\n\t\t\tvar newSub = A3($elm$core$Array$sliceTree, shift - $elm$core$Array$shiftStep, endIdx, sub);\n\t\t\treturn (!$elm$core$Elm$JsArray$length(newSub)) ? A3($elm$core$Elm$JsArray$slice, 0, lastPos, tree) : A3(\n\t\t\t\t$elm$core$Elm$JsArray$unsafeSet,\n\t\t\t\tlastPos,\n\t\t\t\t$elm$core$Array$SubTree(newSub),\n\t\t\t\tA3($elm$core$Elm$JsArray$slice, 0, lastPos + 1, tree));\n\t\t} else {\n\t\t\treturn A3($elm$core$Elm$JsArray$slice, 0, lastPos, tree);\n\t\t}\n\t});\nvar $elm$core$Array$sliceRight = F2(\n\tfunction (end, array) {\n\t\tvar len = array.a;\n\t\tvar startShift = array.b;\n\t\tvar tree = array.c;\n\t\tvar tail = array.d;\n\t\tif (_Utils_eq(end, len)) {\n\t\t\treturn array;\n\t\t} else {\n\t\t\tif (_Utils_cmp(\n\t\t\t\tend,\n\t\t\t\t$elm$core$Array$tailIndex(len)) > -1) {\n\t\t\t\treturn A4(\n\t\t\t\t\t$elm$core$Array$Array_elm_builtin,\n\t\t\t\t\tend,\n\t\t\t\t\tstartShift,\n\t\t\t\t\ttree,\n\t\t\t\t\tA3($elm$core$Elm$JsArray$slice, 0, $elm$core$Array$bitMask & end, tail));\n\t\t\t} else {\n\t\t\t\tvar endIdx = $elm$core$Array$tailIndex(end);\n\t\t\t\tvar depth = $elm$core$Basics$floor(\n\t\t\t\t\tA2(\n\t\t\t\t\t\t$elm$core$Basics$logBase,\n\t\t\t\t\t\t$elm$core$Array$branchFactor,\n\t\t\t\t\t\tA2($elm$core$Basics$max, 1, endIdx - 1)));\n\t\t\t\tvar newShift = A2($elm$core$Basics$max, 5, depth * $elm$core$Array$shiftStep);\n\t\t\t\treturn A4(\n\t\t\t\t\t$elm$core$Array$Array_elm_builtin,\n\t\t\t\t\tend,\n\t\t\t\t\tnewShift,\n\t\t\t\t\tA3(\n\t\t\t\t\t\t$elm$core$Array$hoistTree,\n\t\t\t\t\t\tstartShift,\n\t\t\t\t\t\tnewShift,\n\t\t\t\t\t\tA3($elm$core$Array$sliceTree, startShift, endIdx, tree)),\n\t\t\t\t\tA4($elm$core$Array$fetchNewTail, startShift, end, endIdx, tree));\n\t\t\t}\n\t\t}\n\t});\nvar $elm$core$Array$translateIndex = F2(\n\tfunction (index, _v0) {\n\t\tvar len = _v0.a;\n\t\tvar posIndex = (index < 0) ? (len + index) : index;\n\t\treturn (posIndex < 0) ? 0 : ((_Utils_cmp(posIndex, len) > 0) ? len : posIndex);\n\t});\nvar $elm$core$Array$slice = F3(\n\tfunction (from, to, array) {\n\t\tvar correctTo = A2($elm$core$Array$translateIndex, to, array);\n\t\tvar correctFrom = A2($elm$core$Array$translateIndex, from, array);\n\t\treturn (_Utils_cmp(correctFrom, correctTo) > 0) ? $elm$core$Array$empty : A2(\n\t\t\t$elm$core$Array$sliceLeft,\n\t\t\tcorrectFrom,\n\t\t\tA2($elm$core$Array$sliceRight, correctTo, array));\n\t});\nvar $author$project$Allele$getPrimerBindIndices = F2(\n\tfunction (primer, allele) {\n\t\tvar tripletArray = $elm$core$Array$fromList(allele.e);\n\t\tvar primerLength = $elm$core$Array$length(primer);\n\t\tvar length = $elm$core$Array$length(tripletArray);\n\t\tvar slidingWindows = A2(\n\t\t\t$elm$core$List$filterMap,\n\t\t\tfunction (i) {\n\t\t\t\treturn _Utils_eq(\n\t\t\t\t\tA3($elm$core$Array$slice, i, i + primerLength, tripletArray),\n\t\t\t\t\tprimer) ? $elm$core$Maybe$Just(i) : $elm$core$Maybe$Nothing;\n\t\t\t},\n\t\t\tA2($elm$core$List$range, 0, length - primerLength));\n\t\treturn slidingWindows;\n\t});\nvar $author$project$Allele$getSize = function (allele) {\n\treturn $elm$core$List$length(allele.e);\n};\nvar $author$project$SimAgg$primerRDistance = 90;\nvar $author$project$SimAgg$primerRLength = 25;\nvar $author$project$Triplet$size = 3;\nvar $author$project$Triplet$Agg = 1;\nvar $author$project$Triplet$Cgg = 0;\nvar $author$project$SimAgg$tripletPrimer = $elm$core$Array$fromList(\n\t_List_fromArray(\n\t\t[0, 0, 0, 1]));\nvar $author$project$SimAgg$tripletPrimerAddLength = 23;\nvar $author$project$SimAgg$getTripletFragmentSizes = function (allele) {\n\tvar alleleSize = $author$project$Allele$getSize(allele);\n\treturn A2(\n\t\t$elm$core$List$map,\n\t\tfunction (i) {\n\t\t\treturn ((((alleleSize - i) * $author$project$Triplet$size) + $author$project$SimAgg$primerRDistance) + $author$project$SimAgg$primerRLength) + $author$project$SimAgg$tripletPrimerAddLength;\n\t\t},\n\t\tA2($author$project$Allele$getPrimerBindIndices, $author$project$SimAgg$tripletPrimer, allele));\n};\nvar $author$project$Allele$maxAlleleSize = 225;\nvar $elm$core$Array$repeat = F2(\n\tfunction (n, e) {\n\t\treturn A2(\n\t\t\t$elm$core$Array$initialize,\n\t\t\tn,\n\t\t\tfunction (_v0) {\n\t\t\t\treturn e;\n\t\t\t});\n\t});\nvar $elm$core$Array$setHelp = F4(\n\tfunction (shift, index, value, tree) {\n\t\tvar pos = $elm$core$Array$bitMask & (index >>> shift);\n\t\tvar _v0 = A2($elm$core$Elm$JsArray$unsafeGet, pos, tree);\n\t\tif (!_v0.$) {\n\t\t\tvar subTree = _v0.a;\n\t\t\tvar newSub = A4($elm$core$Array$setHelp, shift - $elm$core$Array$shiftStep, index, value, subTree);\n\t\t\treturn A3(\n\t\t\t\t$elm$core$Elm$JsArray$unsafeSet,\n\t\t\t\tpos,\n\t\t\t\t$elm$core$Array$SubTree(newSub),\n\t\t\t\ttree);\n\t\t} else {\n\t\t\tvar values = _v0.a;\n\t\t\tvar newLeaf = A3($elm$core$Elm$JsArray$unsafeSet, $elm$core$Array$bitMask & index, value, values);\n\t\t\treturn A3(\n\t\t\t\t$elm$core$Elm$JsArray$unsafeSet,\n\t\t\t\tpos,\n\t\t\t\t$elm$core$Array$Leaf(newLeaf),\n\t\t\t\ttree);\n\t\t}\n\t});\nvar $elm$core$Array$set = F3(\n\tfunction (index, value, array) {\n\t\tvar len = array.a;\n\t\tvar startShift = array.b;\n\t\tvar tree = array.c;\n\t\tvar tail = array.d;\n\t\treturn ((index < 0) || (_Utils_cmp(index, len) > -1)) ? array : ((_Utils_cmp(\n\t\t\tindex,\n\t\t\t$elm$core$Array$tailIndex(len)) > -1) ? A4(\n\t\t\t$elm$core$Array$Array_elm_builtin,\n\t\t\tlen,\n\t\t\tstartShift,\n\t\t\ttree,\n\t\t\tA3($elm$core$Elm$JsArray$unsafeSet, $elm$core$Array$bitMask & index, value, tail)) : A4(\n\t\t\t$elm$core$Array$Array_elm_builtin,\n\t\t\tlen,\n\t\t\tstartShift,\n\t\t\tA4($elm$core$Array$setHelp, startShift, index, value, tree),\n\t\t\ttail));\n\t});\nvar $elm$core$Maybe$withDefault = F2(\n\tfunction (_default, maybe) {\n\t\tif (!maybe.$) {\n\t\t\tvar value = maybe.a;\n\t\t\treturn value;\n\t\t} else {\n\t\t\treturn _default;\n\t\t}\n\t});\nvar $author$project$SimAgg$calculateFragmentDistribution = function (allelePair) {\n\tvar relFreq = A2($elm$core$Array$repeat, ((($author$project$Allele$maxAlleleSize * $author$project$Triplet$size) + $author$project$SimAgg$primerRDistance) + $author$project$SimAgg$primerRLength) + $author$project$SimAgg$tripletPrimerAddLength, 0);\n\tvar alleleBFragmentSizes = $author$project$SimAgg$getTripletFragmentSizes(allelePair.ba);\n\tvar alleleAFragmentSizes = $author$project$SimAgg$getTripletFragmentSizes(allelePair.a9);\n\tvar relFreqWithTrip = A3(\n\t\t$elm$core$List$foldl,\n\t\tF2(\n\t\t\tfunction (size, acc) {\n\t\t\t\treturn A3(\n\t\t\t\t\t$elm$core$Array$set,\n\t\t\t\t\tsize,\n\t\t\t\t\tA2(\n\t\t\t\t\t\t$elm$core$Maybe$withDefault,\n\t\t\t\t\t\t0,\n\t\t\t\t\t\tA2($elm$core$Array$get, size, acc)) + 12,\n\t\t\t\t\tacc);\n\t\t\t}),\n\t\trelFreq,\n\t\t_Utils_ap(alleleAFragmentSizes, alleleBFragmentSizes));\n\treturn relFreqWithTrip;\n};\nvar $author$project$SimAggRev$primerFDistance = 91;\nvar $author$project$SimAggRev$primerFLength = 25;\nvar $author$project$SimAggRev$tripletPrimer = $elm$core$Array$fromList(\n\t_List_fromArray(\n\t\t[0, 0, 0, 1]));\nvar $author$project$SimAggRev$tripletPrimerAddLength = 22;\nvar $author$project$SimAggRev$getTripletFragmentSizes = function (allele) {\n\tvar reversedAllele = _Utils_update(\n\t\tallele,\n\t\t{\n\t\t\te: $elm$core$List$reverse(allele.e)\n\t\t});\n\tvar alleleSize = $author$project$Allele$getSize(allele);\n\treturn A2(\n\t\t$elm$core$List$map,\n\t\tfunction (i) {\n\t\t\treturn ((((alleleSize - i) * $author$project$Triplet$size) + $author$project$SimAggRev$primerFDistance) + $author$project$SimAggRev$primerFLength) + $author$project$SimAggRev$tripletPrimerAddLength;\n\t\t},\n\t\tA2($author$project$Allele$getPrimerBindIndices, $author$project$SimAggRev$tripletPrimer, reversedAllele));\n};\nvar $author$project$SimAggRev$calculateFragmentDistribution = function (allelePair) {\n\tvar relFreq = A2($elm$core$Array$repeat, ((($author$project$Allele$maxAlleleSize * $author$project$Triplet$size) + $author$project$SimAggRev$primerFDistance) + $author$project$SimAggRev$primerFLength) + $author$project$SimAggRev$tripletPrimerAddLength, 0);\n\tvar alleleBFragmentSizes = $author$project$SimAggRev$getTripletFragmentSizes(allelePair.ba);\n\tvar alleleAFragmentSizes = $author$project$SimAggRev$getTripletFragmentSizes(allelePair.a9);\n\tvar relFreqWithTrip = A3(\n\t\t$elm$core$List$foldl,\n\t\tF2(\n\t\t\tfunction (size, acc) {\n\t\t\t\treturn A3(\n\t\t\t\t\t$elm$core$Array$set,\n\t\t\t\t\tsize,\n\t\t\t\t\tA2(\n\t\t\t\t\t\t$elm$core$Maybe$withDefault,\n\t\t\t\t\t\t0,\n\t\t\t\t\t\tA2($elm$core$Array$get, size, acc)) + 12,\n\t\t\t\t\tacc);\n\t\t\t}),\n\t\trelFreq,\n\t\t_Utils_ap(alleleAFragmentSizes, alleleBFragmentSizes));\n\treturn relFreqWithTrip;\n};\nvar $elm$core$List$filter = F2(\n\tfunction (isGood, list) {\n\t\treturn A3(\n\t\t\t$elm$core$List$foldr,\n\t\t\tF2(\n\t\t\t\tfunction (x, xs) {\n\t\t\t\t\treturn isGood(x) ? A2($elm$core$List$cons, x, xs) : xs;\n\t\t\t\t}),\n\t\t\t_List_Nil,\n\t\t\tlist);\n\t});\nvar $author$project$SimTriplet$primerFDistance = 91;\nvar $author$project$SimTriplet$primerFLength = 25;\nvar $author$project$SimTriplet$primerRDistance = 90;\nvar $author$project$SimTriplet$primerRLength = 25;\nvar $author$project$SimTriplet$getFullFragmentSize = function (allele) {\n\tvar alleleSize = $author$project$Allele$getSize(allele);\n\treturn (!alleleSize) ? 0 : (((((alleleSize * $author$project$Triplet$size) + $author$project$SimTriplet$primerFDistance) + $author$project$SimTriplet$primerFLength) + $author$project$SimTriplet$primerRDistance) + $author$project$SimTriplet$primerRLength);\n};\nvar $author$project$SimTriplet$tripletPrimer = $elm$core$Array$fromList(\n\t_List_fromArray(\n\t\t[0, 0, 0, 0, 0]));\nvar $author$project$SimTriplet$tripletPrimerAddLength = 23;\nvar $author$project$SimTriplet$getTripletFragmentSizes = function (allele) {\n\tvar alleleSize = $author$project$Allele$getSize(allele);\n\treturn A2(\n\t\t$elm$core$List$map,\n\t\tfunction (i) {\n\t\t\treturn ((((alleleSize - i) * $author$project$Triplet$size) + $author$project$SimTriplet$primerRDistance) + $author$project$SimTriplet$primerRLength) + $author$project$SimTriplet$tripletPrimerAddLength;\n\t\t},\n\t\tA2($author$project$Allele$getPrimerBindIndices, $author$project$SimTriplet$tripletPrimer, allele));\n};\nvar $author$project$SimTriplet$calculateFragmentDistribution = function (allelePair) {\n\tvar relFreq = A2($elm$core$Array$repeat, ((((($author$project$Allele$maxAlleleSize * $author$project$Triplet$size) + $author$project$SimTriplet$primerFDistance) + $author$project$SimTriplet$primerFLength) + $author$project$SimTriplet$primerRDistance) + $author$project$SimTriplet$primerRLength) + 1, 0);\n\tvar alleleBFullFragmentSize = $author$project$SimTriplet$getFullFragmentSize(allelePair.ba);\n\tvar alleleBFragmentSizes = $author$project$SimTriplet$getTripletFragmentSizes(allelePair.ba);\n\tvar alleleAFullFragmentSize = $author$project$SimTriplet$getFullFragmentSize(allelePair.a9);\n\tvar alleleFullFragmentSizes = A2(\n\t\t$elm$core$List$filter,\n\t\tfunction (size) {\n\t\t\treturn size > 0;\n\t\t},\n\t\t_List_fromArray(\n\t\t\t[alleleAFullFragmentSize, alleleBFullFragmentSize]));\n\tvar alleleAFragmentSizes = $author$project$SimTriplet$getTripletFragmentSizes(allelePair.a9);\n\tvar relFreqWithTrip = A3(\n\t\t$elm$core$List$foldl,\n\t\tF2(\n\t\t\tfunction (size, acc) {\n\t\t\t\treturn A3(\n\t\t\t\t\t$elm$core$Array$set,\n\t\t\t\t\tsize,\n\t\t\t\t\tA2(\n\t\t\t\t\t\t$elm$core$Maybe$withDefault,\n\t\t\t\t\t\t0,\n\t\t\t\t\t\tA2($elm$core$Array$get, size, acc)) + 1,\n\t\t\t\t\tacc);\n\t\t\t}),\n\t\trelFreq,\n\t\t_Utils_ap(alleleAFragmentSizes, alleleBFragmentSizes));\n\tvar relFreqWithFull = A3(\n\t\t$elm$core$List$foldl,\n\t\tF2(\n\t\t\tfunction (size, acc) {\n\t\t\t\treturn A3(\n\t\t\t\t\t$elm$core$Array$set,\n\t\t\t\t\tsize,\n\t\t\t\t\tA2(\n\t\t\t\t\t\t$elm$core$Maybe$withDefault,\n\t\t\t\t\t\t0,\n\t\t\t\t\t\tA2($elm$core$Array$get, size, acc)) + 8,\n\t\t\t\t\tacc);\n\t\t\t}),\n\t\trelFreqWithTrip,\n\t\talleleFullFragmentSizes);\n\treturn relFreqWithFull;\n};\nvar $elm$core$List$repeatHelp = F3(\n\tfunction (result, n, value) {\n\t\trepeatHelp:\n\t\twhile (true) {\n\t\t\tif (n <= 0) {\n\t\t\t\treturn result;\n\t\t\t} else {\n\t\t\t\tvar $temp$result = A2($elm$core$List$cons, value, result),\n\t\t\t\t\t$temp$n = n - 1,\n\t\t\t\t\t$temp$value = value;\n\t\t\t\tresult = $temp$result;\n\t\t\t\tn = $temp$n;\n\t\t\t\tvalue = $temp$value;\n\t\t\t\tcontinue repeatHelp;\n\t\t\t}\n\t\t}\n\t});\nvar $elm$core$List$repeat = F2(\n\tfunction (n, value) {\n\t\treturn A3($elm$core$List$repeatHelp, _List_Nil, n, value);\n\t});\nvar $author$project$Allele$createWithSize = function (size) {\n\treturn {\n\t\te: A2($elm$core$List$repeat, size, 0)\n\t};\n};\nvar $author$project$Main$initialModel = function () {\n\tvar initialPair = {\n\t\ta9: $author$project$Allele$createWithSize(20),\n\t\tba: $author$project$Allele$createWithSize(24)\n\t};\n\treturn {\n\t\tm: initialPair,\n\t\tE: _List_Nil,\n\t\tF: _List_Nil,\n\t\tP: $author$project$SimAggRev$calculateFragmentDistribution(initialPair),\n\t\tQ: $author$project$SimAgg$calculateFragmentDistribution(initialPair),\n\t\tX: $author$project$SimTriplet$calculateFragmentDistribution(initialPair)\n\t};\n}();\nvar $elm$core$Platform$Cmd$batch = _Platform_batch;\nvar $elm$core$Platform$Cmd$none = $elm$core$Platform$Cmd$batch(_List_Nil);\nvar $author$project$Main$init = _Utils_Tuple2($author$project$Main$initialModel, $elm$core$Platform$Cmd$none);\nvar $elm$core$Platform$Sub$batch = _Platform_batch;\nvar $elm$core$Platform$Sub$none = $elm$core$Platform$Sub$batch(_List_Nil);\nvar $elm$core$List$takeReverse = F3(\n\tfunction (n, list, kept) {\n\t\ttakeReverse:\n\t\twhile (true) {\n\t\t\tif (n <= 0) {\n\t\t\t\treturn kept;\n\t\t\t} else {\n\t\t\t\tif (!list.b) {\n\t\t\t\t\treturn kept;\n\t\t\t\t} else {\n\t\t\t\t\tvar x = list.a;\n\t\t\t\t\tvar xs = list.b;\n\t\t\t\t\tvar $temp$n = n - 1,\n\t\t\t\t\t\t$temp$list = xs,\n\t\t\t\t\t\t$temp$kept = A2($elm$core$List$cons, x, kept);\n\t\t\t\t\tn = $temp$n;\n\t\t\t\t\tlist = $temp$list;\n\t\t\t\t\tkept = $temp$kept;\n\t\t\t\t\tcontinue takeReverse;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\nvar $elm$core$List$takeTailRec = F2(\n\tfunction (n, list) {\n\t\treturn $elm$core$List$reverse(\n\t\t\tA3($elm$core$List$takeReverse, n, list, _List_Nil));\n\t});\nvar $elm$core$List$takeFast = F3(\n\tfunction (ctr, n, list) {\n\t\tif (n <= 0) {\n\t\t\treturn _List_Nil;\n\t\t} else {\n\t\t\tvar _v0 = _Utils_Tuple2(n, list);\n\t\t\t_v0$1:\n\t\t\twhile (true) {\n\t\t\t\t_v0$5:\n\t\t\t\twhile (true) {\n\t\t\t\t\tif (!_v0.b.b) {\n\t\t\t\t\t\treturn list;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (_v0.b.b.b) {\n\t\t\t\t\t\t\tswitch (_v0.a) {\n\t\t\t\t\t\t\t\tcase 1:\n\t\t\t\t\t\t\t\t\tbreak _v0$1;\n\t\t\t\t\t\t\t\tcase 2:\n\t\t\t\t\t\t\t\t\tvar _v2 = _v0.b;\n\t\t\t\t\t\t\t\t\tvar x = _v2.a;\n\t\t\t\t\t\t\t\t\tvar _v3 = _v2.b;\n\t\t\t\t\t\t\t\t\tvar y = _v3.a;\n\t\t\t\t\t\t\t\t\treturn _List_fromArray(\n\t\t\t\t\t\t\t\t\t\t[x, y]);\n\t\t\t\t\t\t\t\tcase 3:\n\t\t\t\t\t\t\t\t\tif (_v0.b.b.b.b) {\n\t\t\t\t\t\t\t\t\t\tvar _v4 = _v0.b;\n\t\t\t\t\t\t\t\t\t\tvar x = _v4.a;\n\t\t\t\t\t\t\t\t\t\tvar _v5 = _v4.b;\n\t\t\t\t\t\t\t\t\t\tvar y = _v5.a;\n\t\t\t\t\t\t\t\t\t\tvar _v6 = _v5.b;\n\t\t\t\t\t\t\t\t\t\tvar z = _v6.a;\n\t\t\t\t\t\t\t\t\t\treturn _List_fromArray(\n\t\t\t\t\t\t\t\t\t\t\t[x, y, z]);\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\tbreak _v0$5;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t\tif (_v0.b.b.b.b && _v0.b.b.b.b.b) {\n\t\t\t\t\t\t\t\t\t\tvar _v7 = _v0.b;\n\t\t\t\t\t\t\t\t\t\tvar x = _v7.a;\n\t\t\t\t\t\t\t\t\t\tvar _v8 = _v7.b;\n\t\t\t\t\t\t\t\t\t\tvar y = _v8.a;\n\t\t\t\t\t\t\t\t\t\tvar _v9 = _v8.b;\n\t\t\t\t\t\t\t\t\t\tvar z = _v9.a;\n\t\t\t\t\t\t\t\t\t\tvar _v10 = _v9.b;\n\t\t\t\t\t\t\t\t\t\tvar w = _v10.a;\n\t\t\t\t\t\t\t\t\t\tvar tl = _v10.b;\n\t\t\t\t\t\t\t\t\t\treturn (ctr > 1000) ? A2(\n\t\t\t\t\t\t\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t\t\t\t\t\t\tx,\n\t\t\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t\t\t\t\t\t\t\ty,\n\t\t\t\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t\t\t\t\t\t\t\t\tz,\n\t\t\t\t\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tw,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tA2($elm$core$List$takeTailRec, n - 4, tl))))) : A2(\n\t\t\t\t\t\t\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t\t\t\t\t\t\tx,\n\t\t\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t\t\t\t\t\t\t\ty,\n\t\t\t\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t\t\t\t\t\t\t\t\tz,\n\t\t\t\t\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tw,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tA3($elm$core$List$takeFast, ctr + 1, n - 4, tl)))));\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\tbreak _v0$5;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tif (_v0.a === 1) {\n\t\t\t\t\t\t\t\tbreak _v0$1;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tbreak _v0$5;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn list;\n\t\t\t}\n\t\t\tvar _v1 = _v0.b;\n\t\t\tvar x = _v1.a;\n\t\t\treturn _List_fromArray(\n\t\t\t\t[x]);\n\t\t}\n\t});\nvar $elm$core$List$take = F2(\n\tfunction (n, list) {\n\t\treturn A3($elm$core$List$takeFast, 0, n, list);\n\t});\nvar $author$project$Allele$changeTripletLength = F2(\n\tfunction (newLength, allele) {\n\t\tvar currentLength = $elm$core$List$length(allele.e);\n\t\treturn (_Utils_cmp(newLength, currentLength) > 0) ? _Utils_update(\n\t\t\tallele,\n\t\t\t{\n\t\t\t\te: _Utils_ap(\n\t\t\t\t\tallele.e,\n\t\t\t\t\tA2($elm$core$List$repeat, newLength - currentLength, 0))\n\t\t\t}) : _Utils_update(\n\t\t\tallele,\n\t\t\t{\n\t\t\t\te: A2($elm$core$List$take, newLength, allele.e)\n\t\t\t});\n\t});\nvar $author$project$Triplet$cycle = function (t) {\n\tif (!t) {\n\t\treturn 1;\n\t} else {\n\t\treturn 0;\n\t}\n};\nvar $author$project$Allele$cycleTripletAtIndex = F2(\n\tfunction (index, allele) {\n\t\treturn _Utils_update(\n\t\t\tallele,\n\t\t\t{\n\t\t\t\te: A2(\n\t\t\t\t\t$elm$core$List$indexedMap,\n\t\t\t\t\tF2(\n\t\t\t\t\t\tfunction (i, t) {\n\t\t\t\t\t\t\treturn _Utils_eq(i, index) ? $author$project$Triplet$cycle(t) : t;\n\t\t\t\t\t\t}),\n\t\t\t\t\tallele.e)\n\t\t\t});\n\t});\nvar $elm$core$List$head = function (list) {\n\tif (list.b) {\n\t\tvar x = list.a;\n\t\tvar xs = list.b;\n\t\treturn $elm$core$Maybe$Just(x);\n\t} else {\n\t\treturn $elm$core$Maybe$Nothing;\n\t}\n};\nvar $elm_community$list_extra$List$Extra$getAt = F2(\n\tfunction (idx, xs) {\n\t\treturn (idx < 0) ? $elm$core$Maybe$Nothing : $elm$core$List$head(\n\t\t\tA2($elm$core$List$drop, idx, xs));\n\t});\nvar $author$project$Allele$getTripletAtIndex = F2(\n\tfunction (index, allele) {\n\t\treturn A2($elm_community$list_extra$List$Extra$getAt, index, allele.e);\n\t});\nvar $elm$core$Basics$neq = _Utils_notEqual;\nvar $author$project$Allele$setTripletAtIndex = F3(\n\tfunction (index, triplet, allele) {\n\t\treturn _Utils_update(\n\t\t\tallele,\n\t\t\t{\n\t\t\t\te: A2(\n\t\t\t\t\t$elm$core$List$indexedMap,\n\t\t\t\t\tF2(\n\t\t\t\t\t\tfunction (i, t) {\n\t\t\t\t\t\t\treturn _Utils_eq(i, index) ? triplet : t;\n\t\t\t\t\t\t}),\n\t\t\t\t\tallele.e)\n\t\t\t});\n\t});\nvar $author$project$Main$withCmd = F2(\n\tfunction (cmd, model) {\n\t\treturn _Utils_Tuple2(model, cmd);\n\t});\nvar $author$project$Main$update = F2(\n\tfunction (msg, model) {\n\t\tswitch (msg.$) {\n\t\t\tcase 0:\n\t\t\t\tvar allelePairId = msg.a;\n\t\t\t\tvar string = msg.b;\n\t\t\t\tvar newSize = function () {\n\t\t\t\t\tvar _v2 = $elm$core$String$toInt(string);\n\t\t\t\t\tif (!_v2.$) {\n\t\t\t\t\t\tvar size = _v2.a;\n\t\t\t\t\t\treturn ((size >= 0) && (_Utils_cmp(size, $author$project$Allele$maxAlleleSize) < 1)) ? size : ((size < 0) ? 0 : $author$project$Allele$maxAlleleSize);\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn 0;\n\t\t\t\t\t}\n\t\t\t\t}();\n\t\t\t\tvar allelePair = model.m;\n\t\t\t\tvar newAllelePair = function () {\n\t\t\t\t\tif (!allelePairId) {\n\t\t\t\t\t\treturn _Utils_update(\n\t\t\t\t\t\t\tallelePair,\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\ta9: A3(\n\t\t\t\t\t\t\t\t\t$elm$core$List$foldl,\n\t\t\t\t\t\t\t\t\tF2(\n\t\t\t\t\t\t\t\t\t\tfunction (i, acc) {\n\t\t\t\t\t\t\t\t\t\t\treturn A3($author$project$Allele$setTripletAtIndex, i, 1, acc);\n\t\t\t\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\t\t\tA2($author$project$Allele$changeTripletLength, newSize, model.m.a9),\n\t\t\t\t\t\t\t\t\tmodel.E)\n\t\t\t\t\t\t\t});\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn _Utils_update(\n\t\t\t\t\t\t\tallelePair,\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tba: A3(\n\t\t\t\t\t\t\t\t\t$elm$core$List$foldl,\n\t\t\t\t\t\t\t\t\tF2(\n\t\t\t\t\t\t\t\t\t\tfunction (i, acc) {\n\t\t\t\t\t\t\t\t\t\t\treturn A3($author$project$Allele$setTripletAtIndex, i, 1, acc);\n\t\t\t\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\t\t\tA2($author$project$Allele$changeTripletLength, newSize, model.m.ba),\n\t\t\t\t\t\t\t\t\tmodel.F)\n\t\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}();\n\t\t\t\tvar newCalculatedSimAggRevValues = $author$project$SimAggRev$calculateFragmentDistribution(newAllelePair);\n\t\t\t\tvar newCalculatedSimAggValues = $author$project$SimAgg$calculateFragmentDistribution(newAllelePair);\n\t\t\t\tvar newCalculatedSimTripletValues = $author$project$SimTriplet$calculateFragmentDistribution(newAllelePair);\n\t\t\t\treturn A2(\n\t\t\t\t\t$author$project$Main$withCmd,\n\t\t\t\t\t$elm$core$Platform$Cmd$none,\n\t\t\t\t\t_Utils_update(\n\t\t\t\t\t\tmodel,\n\t\t\t\t\t\t{m: newAllelePair, P: newCalculatedSimAggRevValues, Q: newCalculatedSimAggValues, X: newCalculatedSimTripletValues}));\n\t\t\tcase 1:\n\t\t\t\tvar allelePairId = msg.a;\n\t\t\t\tvar index = msg.b;\n\t\t\t\tvar allelePair = model.m;\n\t\t\t\tvar lastAggPositionsA = function () {\n\t\t\t\t\tif (!allelePairId) {\n\t\t\t\t\t\treturn _Utils_eq(\n\t\t\t\t\t\t\tA2($author$project$Allele$getTripletAtIndex, index, allelePair.a9),\n\t\t\t\t\t\t\t$elm$core$Maybe$Just(1)) ? A2(\n\t\t\t\t\t\t\t$elm$core$List$filter,\n\t\t\t\t\t\t\tfunction (i) {\n\t\t\t\t\t\t\t\treturn !_Utils_eq(i, index);\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tmodel.E) : A2($elm$core$List$cons, index, model.E);\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn model.E;\n\t\t\t\t\t}\n\t\t\t\t}();\n\t\t\t\tvar lastAggPositionsB = function () {\n\t\t\t\t\tif (allelePairId === 1) {\n\t\t\t\t\t\treturn _Utils_eq(\n\t\t\t\t\t\t\tA2($author$project$Allele$getTripletAtIndex, index, allelePair.ba),\n\t\t\t\t\t\t\t$elm$core$Maybe$Just(1)) ? A2(\n\t\t\t\t\t\t\t$elm$core$List$filter,\n\t\t\t\t\t\t\tfunction (i) {\n\t\t\t\t\t\t\t\treturn !_Utils_eq(i, index);\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tmodel.F) : A2($elm$core$List$cons, index, model.F);\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn model.F;\n\t\t\t\t\t}\n\t\t\t\t}();\n\t\t\t\tvar newAllelePair = function () {\n\t\t\t\t\tif (!allelePairId) {\n\t\t\t\t\t\treturn _Utils_update(\n\t\t\t\t\t\t\tallelePair,\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\ta9: A2($author$project$Allele$cycleTripletAtIndex, index, allelePair.a9)\n\t\t\t\t\t\t\t});\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn _Utils_update(\n\t\t\t\t\t\t\tallelePair,\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tba: A2($author$project$Allele$cycleTripletAtIndex, index, allelePair.ba)\n\t\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}();\n\t\t\t\tvar newCalculatedSimAggRevValues = $author$project$SimAggRev$calculateFragmentDistribution(newAllelePair);\n\t\t\t\tvar newCalculatedSimAggValues = $author$project$SimAgg$calculateFragmentDistribution(newAllelePair);\n\t\t\t\tvar newCalculatedSimTripletValues = $author$project$SimTriplet$calculateFragmentDistribution(newAllelePair);\n\t\t\t\treturn A2(\n\t\t\t\t\t$author$project$Main$withCmd,\n\t\t\t\t\t$elm$core$Platform$Cmd$none,\n\t\t\t\t\t_Utils_update(\n\t\t\t\t\t\tmodel,\n\t\t\t\t\t\t{m: newAllelePair, E: lastAggPositionsA, F: lastAggPositionsB, P: newCalculatedSimAggRevValues, Q: newCalculatedSimAggValues, X: newCalculatedSimTripletValues}));\n\t\t\tdefault:\n\t\t\t\treturn _Utils_Tuple2(model, $elm$core$Platform$Cmd$none);\n\t\t}\n\t});\nvar $author$project$Allele$AlleleA = 0;\nvar $author$project$Allele$AlleleB = 1;\nvar $elm$html$Html$a = _VirtualDom_node('a');\nvar $elm$html$Html$b = _VirtualDom_node('b');\nvar $elm$json$Json$Encode$string = _Json_wrap;\nvar $elm$html$Html$Attributes$stringProperty = F2(\n\tfunction (key, string) {\n\t\treturn A2(\n\t\t\t_VirtualDom_property,\n\t\t\tkey,\n\t\t\t$elm$json$Json$Encode$string(string));\n\t});\nvar $elm$html$Html$Attributes$class = $elm$html$Html$Attributes$stringProperty('className');\nvar $elm$html$Html$div = _VirtualDom_node('div');\nvar $elm$html$Html$h1 = _VirtualDom_node('h1');\nvar $elm$html$Html$h2 = _VirtualDom_node('h2');\nvar $elm$html$Html$Attributes$href = function (url) {\n\treturn A2(\n\t\t$elm$html$Html$Attributes$stringProperty,\n\t\t'href',\n\t\t_VirtualDom_noJavaScriptUri(url));\n};\nvar $elm$html$Html$Attributes$id = $elm$html$Html$Attributes$stringProperty('id');\nvar $elm$html$Html$p = _VirtualDom_node('p');\nvar $elm$html$Html$span = _VirtualDom_node('span');\nvar $elm$virtual_dom$VirtualDom$text = _VirtualDom_text;\nvar $elm$html$Html$text = $elm$virtual_dom$VirtualDom$text;\nvar $author$project$Main$ChangedAlleleSize = F2(\n\tfunction (a, b) {\n\t\treturn {$: 0, a: a, b: b};\n\t});\nvar $author$project$Allele$allelePairIdToString = function (allelePairId) {\n\tif (!allelePairId) {\n\t\treturn 'A';\n\t} else {\n\t\treturn 'B';\n\t}\n};\nvar $author$project$Main$inertBlock = function (inner) {\n\treturn A2(\n\t\t$elm$html$Html$div,\n\t\t_List_fromArray(\n\t\t\t[\n\t\t\t\t$elm$html$Html$Attributes$class('allele-visual-block-inert')\n\t\t\t]),\n\t\t_List_fromArray(\n\t\t\t[\n\t\t\t\t$elm$html$Html$text(inner)\n\t\t\t]));\n};\nvar $elm$html$Html$input = _VirtualDom_node('input');\nvar $elm$html$Html$Events$alwaysStop = function (x) {\n\treturn _Utils_Tuple2(x, true);\n};\nvar $elm$virtual_dom$VirtualDom$MayStopPropagation = function (a) {\n\treturn {$: 1, a: a};\n};\nvar $elm$virtual_dom$VirtualDom$on = _VirtualDom_on;\nvar $elm$html$Html$Events$stopPropagationOn = F2(\n\tfunction (event, decoder) {\n\t\treturn A2(\n\t\t\t$elm$virtual_dom$VirtualDom$on,\n\t\t\tevent,\n\t\t\t$elm$virtual_dom$VirtualDom$MayStopPropagation(decoder));\n\t});\nvar $elm$json$Json$Decode$field = _Json_decodeField;\nvar $elm$json$Json$Decode$at = F2(\n\tfunction (fields, decoder) {\n\t\treturn A3($elm$core$List$foldr, $elm$json$Json$Decode$field, decoder, fields);\n\t});\nvar $elm$json$Json$Decode$string = _Json_decodeString;\nvar $elm$html$Html$Events$targetValue = A2(\n\t$elm$json$Json$Decode$at,\n\t_List_fromArray(\n\t\t['target', 'value']),\n\t$elm$json$Json$Decode$string);\nvar $elm$html$Html$Events$onInput = function (tagger) {\n\treturn A2(\n\t\t$elm$html$Html$Events$stopPropagationOn,\n\t\t'input',\n\t\tA2(\n\t\t\t$elm$json$Json$Decode$map,\n\t\t\t$elm$html$Html$Events$alwaysStop,\n\t\t\tA2($elm$json$Json$Decode$map, tagger, $elm$html$Html$Events$targetValue)));\n};\nvar $elm_community$list_extra$List$Extra$groupWhile = F2(\n\tfunction (isSameGroup, items) {\n\t\treturn A3(\n\t\t\t$elm$core$List$foldr,\n\t\t\tF2(\n\t\t\t\tfunction (x, acc) {\n\t\t\t\t\tif (!acc.b) {\n\t\t\t\t\t\treturn _List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t_Utils_Tuple2(x, _List_Nil)\n\t\t\t\t\t\t\t]);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar _v1 = acc.a;\n\t\t\t\t\t\tvar y = _v1.a;\n\t\t\t\t\t\tvar restOfGroup = _v1.b;\n\t\t\t\t\t\tvar groups = acc.b;\n\t\t\t\t\t\treturn A2(isSameGroup, x, y) ? A2(\n\t\t\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t\t\t_Utils_Tuple2(\n\t\t\t\t\t\t\t\tx,\n\t\t\t\t\t\t\t\tA2($elm$core$List$cons, y, restOfGroup)),\n\t\t\t\t\t\t\tgroups) : A2(\n\t\t\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t\t\t_Utils_Tuple2(x, _List_Nil),\n\t\t\t\t\t\t\tacc);\n\t\t\t\t\t}\n\t\t\t\t}),\n\t\t\t_List_Nil,\n\t\t\titems);\n\t});\nvar $author$project$Triplet$toString = function (t) {\n\tif (!t) {\n\t\treturn 'CGG';\n\t} else {\n\t\treturn 'AGG';\n\t}\n};\nvar $author$project$Allele$toGroupedString = function (allele) {\n\treturn A2(\n\t\t$elm$core$String$join,\n\t\t' ',\n\t\tA2(\n\t\t\t$elm$core$List$map,\n\t\t\tfunction (_v1) {\n\t\t\t\tvar triplet = _v1.a;\n\t\t\t\tvar count = _v1.b;\n\t\t\t\treturn (count === 1) ? $author$project$Triplet$toString(triplet) : ('(' + ($author$project$Triplet$toString(triplet) + (')' + $elm$core$String$fromInt(count))));\n\t\t\t},\n\t\t\tA2(\n\t\t\t\t$elm$core$List$map,\n\t\t\t\tfunction (_v0) {\n\t\t\t\t\tvar first = _v0.a;\n\t\t\t\t\tvar rest = _v0.b;\n\t\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t\tfirst,\n\t\t\t\t\t\t$elm$core$List$length(rest) + 1);\n\t\t\t\t},\n\t\t\t\tA2($elm_community$list_extra$List$Extra$groupWhile, $elm$core$Basics$eq, allele.e))));\n};\nvar $elm$html$Html$Attributes$type_ = $elm$html$Html$Attributes$stringProperty('type');\nvar $elm$html$Html$Attributes$value = $elm$html$Html$Attributes$stringProperty('value');\nvar $author$project$Main$ClickedAlleleBlock = F2(\n\tfunction (a, b) {\n\t\treturn {$: 1, a: a, b: b};\n\t});\nvar $elm$virtual_dom$VirtualDom$Normal = function (a) {\n\treturn {$: 0, a: a};\n};\nvar $elm$html$Html$Events$on = F2(\n\tfunction (event, decoder) {\n\t\treturn A2(\n\t\t\t$elm$virtual_dom$VirtualDom$on,\n\t\t\tevent,\n\t\t\t$elm$virtual_dom$VirtualDom$Normal(decoder));\n\t});\nvar $elm$html$Html$Events$onClick = function (msg) {\n\treturn A2(\n\t\t$elm$html$Html$Events$on,\n\t\t'click',\n\t\t$elm$json$Json$Decode$succeed(msg));\n};\nvar $author$project$Main$viewAlleleVisualTriplet = F3(\n\tfunction (allelePairId, index, triplet) {\n\t\treturn A2(\n\t\t\t$elm$html$Html$div,\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\t$elm$html$Html$Attributes$class('allele-visual-block'),\n\t\t\t\t\t$elm$html$Html$Attributes$class(\n\t\t\t\t\t$author$project$Triplet$toString(triplet)),\n\t\t\t\t\t$elm$html$Html$Events$onClick(\n\t\t\t\t\tA2($author$project$Main$ClickedAlleleBlock, allelePairId, index))\n\t\t\t\t]),\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\tA2(\n\t\t\t\t\t$elm$html$Html$div,\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t$elm$html$Html$Attributes$class('allele-visual-block-text')\n\t\t\t\t\t\t]),\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t$elm$html$Html$text(\n\t\t\t\t\t\t\t$elm$core$String$fromInt(1 + index))\n\t\t\t\t\t\t]))\n\t\t\t\t]));\n\t});\nvar $author$project$Main$viewAllele = F2(\n\tfunction (allelePairId, allele) {\n\t\treturn A2(\n\t\t\t$elm$html$Html$div,\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\t$elm$html$Html$Attributes$class('allele-container')\n\t\t\t\t]),\n\t\t\t_List_fromArray(\n\t\t\t\t[\n\t\t\t\t\tA2(\n\t\t\t\t\t$elm$html$Html$div,\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t$elm$html$Html$Attributes$class('allele-top')\n\t\t\t\t\t\t]),\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t$elm$html$Html$div,\n\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t$elm$html$Html$Attributes$class('allele-label-name')\n\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t$elm$html$Html$text(\n\t\t\t\t\t\t\t\t\t'Allele ' + ($author$project$Allele$allelePairIdToString(allelePairId) + ':'))\n\t\t\t\t\t\t\t\t])),\n\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t$elm$html$Html$div,\n\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t$elm$html$Html$Attributes$class('allele-label-repeats')\n\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t$elm$html$Html$input,\n\t\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\t$elm$html$Html$Attributes$class('allele-input'),\n\t\t\t\t\t\t\t\t\t\t\t$elm$html$Html$Attributes$type_('number'),\n\t\t\t\t\t\t\t\t\t\t\t$elm$html$Html$Attributes$value(\n\t\t\t\t\t\t\t\t\t\t\t$elm$core$String$fromInt(\n\t\t\t\t\t\t\t\t\t\t\t\t$author$project$Allele$getSize(allele))),\n\t\t\t\t\t\t\t\t\t\t\t$elm$html$Html$Events$onInput(\n\t\t\t\t\t\t\t\t\t\t\t$author$project$Main$ChangedAlleleSize(allelePairId))\n\t\t\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\t\t_List_Nil),\n\t\t\t\t\t\t\t\t\t$elm$html$Html$text(' repeats =')\n\t\t\t\t\t\t\t\t])),\n\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t$elm$html$Html$div,\n\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t$elm$html$Html$Attributes$class('allele-label-string')\n\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t$elm$html$Html$text(\n\t\t\t\t\t\t\t\t\t$author$project$Allele$toGroupedString(allele))\n\t\t\t\t\t\t\t\t]))\n\t\t\t\t\t\t])),\n\t\t\t\t\tA2(\n\t\t\t\t\t$elm$html$Html$div,\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t$elm$html$Html$Attributes$class('allele-bottom')\n\t\t\t\t\t\t]),\n\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t$elm$html$Html$div,\n\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t$elm$html$Html$Attributes$class('allele-visual-container')\n\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t\t\t\t$author$project$Main$inertBlock('5\\''),\n\t\t\t\t\t\t\t\t_Utils_ap(\n\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t\t$elm$core$List$indexedMap,\n\t\t\t\t\t\t\t\t\t\t$author$project$Main$viewAlleleVisualTriplet(allelePairId),\n\t\t\t\t\t\t\t\t\t\tallele.e),\n\t\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\t$author$project$Main$inertBlock('3\\'')\n\t\t\t\t\t\t\t\t\t\t]))))\n\t\t\t\t\t\t]))\n\t\t\t\t]));\n\t});\nvar $elm$core$Tuple$second = function (_v0) {\n\tvar y = _v0.b;\n\treturn y;\n};\nvar $elm_community$array_extra$Array$Extra$indexedMapToList = function (mapIndexedElement) {\n\treturn function (array) {\n\t\treturn A3(\n\t\t\t$elm$core$Array$foldr,\n\t\t\tF2(\n\t\t\t\tfunction (element, _v0) {\n\t\t\t\t\tvar i = _v0.a;\n\t\t\t\t\tvar listSoFar = _v0.b;\n\t\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t\ti - 1,\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t\t\tA2(mapIndexedElement, i, element),\n\t\t\t\t\t\t\tlistSoFar));\n\t\t\t\t}),\n\t\t\t_Utils_Tuple2(\n\t\t\t\t$elm$core$Array$length(array) - 1,\n\t\t\t\t_List_Nil),\n\t\t\tarray).b;\n\t};\n};\nvar $elm$core$Basics$pow = _Basics_pow;\nvar $author$project$SimAgg$arrayValuesToPolylinePoints = function (array) {\n\tvar list = A2(\n\t\t$elm_community$array_extra$Array$Extra$indexedMapToList,\n\t\tF2(\n\t\t\tfunction (i, v) {\n\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\ti,\n\t\t\t\t\tv * A2($elm$core$Basics$pow, 1.003, 0 - i));\n\t\t\t}),\n\t\tarray);\n\treturn list;\n};\nvar $elm$svg$Svg$Attributes$fill = _VirtualDom_attribute('fill');\nvar $elm$svg$Svg$Attributes$fontSize = _VirtualDom_attribute('font-size');\nvar $elm$core$String$fromFloat = _String_fromNumber;\nvar $elm$svg$Svg$trustedNode = _VirtualDom_nodeNS('http://www.w3.org/2000/svg');\nvar $elm$svg$Svg$g = $elm$svg$Svg$trustedNode('g');\nvar $elm$svg$Svg$Attributes$height = _VirtualDom_attribute('height');\nvar $elm$svg$Svg$Attributes$points = _VirtualDom_attribute('points');\nvar $elm$svg$Svg$polyline = $elm$svg$Svg$trustedNode('polyline');\nvar $elm$svg$Svg$rect = $elm$svg$Svg$trustedNode('rect');\nvar $elm$svg$Svg$Attributes$stroke = _VirtualDom_attribute('stroke');\nvar $elm$svg$Svg$Attributes$strokeLinejoin = _VirtualDom_attribute('stroke-linejoin');\nvar $elm$svg$Svg$svg = $elm$svg$Svg$trustedNode('svg');\nvar $elm$svg$Svg$text = $elm$virtual_dom$VirtualDom$text;\nvar $elm$svg$Svg$Attributes$textAnchor = _VirtualDom_attribute('text-anchor');\nvar $elm$svg$Svg$text_ = $elm$svg$Svg$trustedNode('text');\nvar $elm$svg$Svg$Attributes$viewBox = _VirtualDom_attribute('viewBox');\nvar $elm$svg$Svg$Attributes$width = _VirtualDom_attribute('width');\nvar $elm$svg$Svg$Attributes$x = _VirtualDom_attribute('x');\nvar $elm$svg$Svg$Attributes$y = _VirtualDom_attribute('y');\nvar $author$project$Main$viewSimAgg = function (model) {\n\tvar xmin = 80;\n\tvar xminString = $elm$core$String$fromInt(xmin);\n\tvar xmax = ((((($author$project$SimTriplet$primerRDistance + $author$project$SimTriplet$primerRLength) + ($author$project$Allele$maxAlleleSize * $author$project$Triplet$size)) + $author$project$SimTriplet$primerFDistance) + $author$project$SimTriplet$primerFLength) + $author$project$SimTriplet$tripletPrimerAddLength) + 10;\n\tvar xmaxString = $elm$core$String$fromInt(xmax);\n\tvar viewBoxString = xminString + (' 1 ' + (xmaxString + ' 110'));\n\tvar aboveZeroIndices = A2(\n\t\t$elm$core$List$filterMap,\n\t\t$elm$core$Basics$identity,\n\t\tA2(\n\t\t\t$elm_community$array_extra$Array$Extra$indexedMapToList,\n\t\t\tF2(\n\t\t\t\tfunction (i, v) {\n\t\t\t\t\treturn (v > 0) ? $elm$core$Maybe$Just(i) : $elm$core$Maybe$Nothing;\n\t\t\t\t}),\n\t\t\tmodel.Q));\n\treturn A2(\n\t\t$elm$html$Html$div,\n\t\t_List_fromArray(\n\t\t\t[\n\t\t\t\t$elm$html$Html$Attributes$class('sim-container')\n\t\t\t]),\n\t\t_List_fromArray(\n\t\t\t[\n\t\t\t\tA2(\n\t\t\t\t$elm$html$Html$div,\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\t$elm$html$Html$Attributes$class('sim-graph')\n\t\t\t\t\t]),\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t$elm$svg$Svg$svg,\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t$elm$svg$Svg$Attributes$viewBox(viewBoxString)\n\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t$elm$svg$Svg$g,\n\t\t\t\t\t\t\t\t_List_Nil,\n\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t\t$elm$svg$Svg$polyline,\n\t\t\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\t\t$elm$svg$Svg$Attributes$points(\n\t\t\t\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t\t\t\t\t$elm$core$String$join,\n\t\t\t\t\t\t\t\t\t\t\t\t\t' ',\n\t\t\t\t\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t$elm$core$List$map,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tfunction (_v0) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvar x = _v0.a;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvar y = _v0.b;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn $elm$core$String$fromFloat(x) + (',' + $elm$core$String$fromFloat(100 - (10 * y)));\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t$author$project$SimAgg$arrayValuesToPolylinePoints(model.Q)))),\n\t\t\t\t\t\t\t\t\t\t\t\t$elm$svg$Svg$Attributes$stroke('blue'),\n\t\t\t\t\t\t\t\t\t\t\t\t$elm$svg$Svg$Attributes$fill('none'),\n\t\t\t\t\t\t\t\t\t\t\t\t$elm$svg$Svg$Attributes$strokeLinejoin('round')\n\t\t\t\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\t\t\t_List_Nil)\n\t\t\t\t\t\t\t\t\t])),\n\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t$elm$svg$Svg$g,\n\t\t\t\t\t\t\t\t_List_Nil,\n\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t\t$elm$svg$Svg$rect,\n\t\t\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\t\t$elm$svg$Svg$Attributes$x(xminString),\n\t\t\t\t\t\t\t\t\t\t\t\t$elm$svg$Svg$Attributes$y('1'),\n\t\t\t\t\t\t\t\t\t\t\t\t$elm$svg$Svg$Attributes$width(\n\t\t\t\t\t\t\t\t\t\t\t\t$elm$core$String$fromInt(xmax)),\n\t\t\t\t\t\t\t\t\t\t\t\t$elm$svg$Svg$Attributes$height('99'),\n\t\t\t\t\t\t\t\t\t\t\t\t$elm$svg$Svg$Attributes$fill('none'),\n\t\t\t\t\t\t\t\t\t\t\t\t$elm$svg$Svg$Attributes$stroke('black')\n\t\t\t\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\t\t\t_List_Nil),\n\t\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t\t$elm$svg$Svg$text_,\n\t\t\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\t\t$elm$svg$Svg$Attributes$x(\n\t\t\t\t\t\t\t\t\t\t\t\t$elm$core$String$fromInt(xmin + 4)),\n\t\t\t\t\t\t\t\t\t\t\t\t$elm$svg$Svg$Attributes$y('14'),\n\t\t\t\t\t\t\t\t\t\t\t\t$elm$svg$Svg$Attributes$fill('#222'),\n\t\t\t\t\t\t\t\t\t\t\t\t$elm$svg$Svg$Attributes$fontSize('10px'),\n\t\t\t\t\t\t\t\t\t\t\t\t$elm$svg$Svg$Attributes$textAnchor('left')\n\t\t\t\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\t\t$elm$svg$Svg$text('A-primed PCR')\n\t\t\t\t\t\t\t\t\t\t\t]))\n\t\t\t\t\t\t\t\t\t])),\n\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t$elm$svg$Svg$g,\n\t\t\t\t\t\t\t\t_List_Nil,\n\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t$elm$core$List$map,\n\t\t\t\t\t\t\t\t\tfunction (i) {\n\t\t\t\t\t\t\t\t\t\treturn A2(\n\t\t\t\t\t\t\t\t\t\t\t$elm$svg$Svg$text_,\n\t\t\t\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\t\t\t$elm$svg$Svg$Attributes$x(\n\t\t\t\t\t\t\t\t\t\t\t\t\t$elm$core$String$fromFloat(i)),\n\t\t\t\t\t\t\t\t\t\t\t\t\t$elm$svg$Svg$Attributes$y('110'),\n\t\t\t\t\t\t\t\t\t\t\t\t\t$elm$svg$Svg$Attributes$fill('#222'),\n\t\t\t\t\t\t\t\t\t\t\t\t\t$elm$svg$Svg$Attributes$fontSize('8px'),\n\t\t\t\t\t\t\t\t\t\t\t\t\t$elm$svg$Svg$Attributes$textAnchor('middle')\n\t\t\t\t\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\t\t\t$elm$svg$Svg$text(\n\t\t\t\t\t\t\t\t\t\t\t\t\t$elm$core$String$fromInt(i) + 'bp')\n\t\t\t\t\t\t\t\t\t\t\t\t]));\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\taboveZeroIndices))\n\t\t\t\t\t\t\t]))\n\t\t\t\t\t]))\n\t\t\t]));\n};\nvar $author$project$SimAggRev$arrayValuesToPolylinePoints = function (array) {\n\tvar list = A2(\n\t\t$elm_community$array_extra$Array$Extra$indexedMapToList,\n\t\tF2(\n\t\t\tfunction (i, v) {\n\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\ti,\n\t\t\t\t\tv * A2($elm$core$Basics$pow, 1.003, 0 - i));\n\t\t\t}),\n\t\tarray);\n\treturn list;\n};\nvar $author$project$Main$viewSimAggRev = function (model) {\n\tvar xmin = 80;\n\tvar xminString = $elm$core$String$fromInt(xmin);\n\tvar xmax = ((((($author$project$SimTriplet$primerRDistance + $author$project$SimTriplet$primerRLength) + ($author$project$Allele$maxAlleleSize * $author$project$Triplet$size)) + $author$project$SimTriplet$primerFDistance) + $author$project$SimTriplet$primerFLength) + $author$project$SimTriplet$tripletPrimerAddLength) + 10;\n\tvar xmaxString = $elm$core$String$fromInt(xmax);\n\tvar viewBoxString = xminString + (' 1 ' + (xmaxString + ' 110'));\n\tvar aboveZeroIndices = A2(\n\t\t$elm$core$List$filterMap,\n\t\t$elm$core$Basics$identity,\n\t\tA2(\n\t\t\t$elm_community$array_extra$Array$Extra$indexedMapToList,\n\t\t\tF2(\n\t\t\t\tfunction (i, v) {\n\t\t\t\t\treturn (v > 0) ? $elm$core$Maybe$Just(i) : $elm$core$Maybe$Nothing;\n\t\t\t\t}),\n\t\t\tmodel.P));\n\treturn A2(\n\t\t$elm$html$Html$div,\n\t\t_List_fromArray(\n\t\t\t[\n\t\t\t\t$elm$html$Html$Attributes$class('sim-container')\n\t\t\t]),\n\t\t_List_fromArray(\n\t\t\t[\n\t\t\t\tA2(\n\t\t\t\t$elm$html$Html$div,\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\t$elm$html$Html$Attributes$class('sim-graph')\n\t\t\t\t\t]),\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t$elm$svg$Svg$svg,\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t$elm$svg$Svg$Attributes$viewBox(viewBoxString)\n\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t$elm$svg$Svg$g,\n\t\t\t\t\t\t\t\t_List_Nil,\n\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t\t$elm$svg$Svg$polyline,\n\t\t\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\t\t$elm$svg$Svg$Attributes$points(\n\t\t\t\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t\t\t\t\t$elm$core$String$join,\n\t\t\t\t\t\t\t\t\t\t\t\t\t' ',\n\t\t\t\t\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t$elm$core$List$map,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tfunction (_v0) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvar x = _v0.a;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvar y = _v0.b;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn $elm$core$String$fromFloat(x) + (',' + $elm$core$String$fromFloat(100 - (10 * y)));\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t$author$project$SimAggRev$arrayValuesToPolylinePoints(model.P)))),\n\t\t\t\t\t\t\t\t\t\t\t\t$elm$svg$Svg$Attributes$stroke('blue'),\n\t\t\t\t\t\t\t\t\t\t\t\t$elm$svg$Svg$Attributes$fill('none'),\n\t\t\t\t\t\t\t\t\t\t\t\t$elm$svg$Svg$Attributes$strokeLinejoin('round')\n\t\t\t\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\t\t\t_List_Nil)\n\t\t\t\t\t\t\t\t\t])),\n\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t$elm$svg$Svg$g,\n\t\t\t\t\t\t\t\t_List_Nil,\n\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t\t$elm$svg$Svg$rect,\n\t\t\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\t\t$elm$svg$Svg$Attributes$x(xminString),\n\t\t\t\t\t\t\t\t\t\t\t\t$elm$svg$Svg$Attributes$y('1'),\n\t\t\t\t\t\t\t\t\t\t\t\t$elm$svg$Svg$Attributes$width(\n\t\t\t\t\t\t\t\t\t\t\t\t$elm$core$String$fromInt(xmax)),\n\t\t\t\t\t\t\t\t\t\t\t\t$elm$svg$Svg$Attributes$height('99'),\n\t\t\t\t\t\t\t\t\t\t\t\t$elm$svg$Svg$Attributes$fill('none'),\n\t\t\t\t\t\t\t\t\t\t\t\t$elm$svg$Svg$Attributes$stroke('black')\n\t\t\t\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\t\t\t_List_Nil),\n\t\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t\t$elm$svg$Svg$text_,\n\t\t\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\t\t$elm$svg$Svg$Attributes$x(\n\t\t\t\t\t\t\t\t\t\t\t\t$elm$core$String$fromInt(xmin + 4)),\n\t\t\t\t\t\t\t\t\t\t\t\t$elm$svg$Svg$Attributes$y('14'),\n\t\t\t\t\t\t\t\t\t\t\t\t$elm$svg$Svg$Attributes$fill('#222'),\n\t\t\t\t\t\t\t\t\t\t\t\t$elm$svg$Svg$Attributes$fontSize('10px'),\n\t\t\t\t\t\t\t\t\t\t\t\t$elm$svg$Svg$Attributes$textAnchor('left')\n\t\t\t\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\t\t$elm$svg$Svg$text('T-primed PCR')\n\t\t\t\t\t\t\t\t\t\t\t]))\n\t\t\t\t\t\t\t\t\t])),\n\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t$elm$svg$Svg$g,\n\t\t\t\t\t\t\t\t_List_Nil,\n\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t$elm$core$List$map,\n\t\t\t\t\t\t\t\t\tfunction (i) {\n\t\t\t\t\t\t\t\t\t\treturn A2(\n\t\t\t\t\t\t\t\t\t\t\t$elm$svg$Svg$text_,\n\t\t\t\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\t\t\t$elm$svg$Svg$Attributes$x(\n\t\t\t\t\t\t\t\t\t\t\t\t\t$elm$core$String$fromFloat(i)),\n\t\t\t\t\t\t\t\t\t\t\t\t\t$elm$svg$Svg$Attributes$y('110'),\n\t\t\t\t\t\t\t\t\t\t\t\t\t$elm$svg$Svg$Attributes$fill('#222'),\n\t\t\t\t\t\t\t\t\t\t\t\t\t$elm$svg$Svg$Attributes$fontSize('8px'),\n\t\t\t\t\t\t\t\t\t\t\t\t\t$elm$svg$Svg$Attributes$textAnchor('middle')\n\t\t\t\t\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\t\t\t$elm$svg$Svg$text(\n\t\t\t\t\t\t\t\t\t\t\t\t\t$elm$core$String$fromInt(i) + 'bp')\n\t\t\t\t\t\t\t\t\t\t\t\t]));\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\taboveZeroIndices))\n\t\t\t\t\t\t\t]))\n\t\t\t\t\t]))\n\t\t\t]));\n};\nvar $author$project$SimTriplet$arrayValuesToPolylinePoints = function (array) {\n\tvar list = A2(\n\t\t$elm_community$array_extra$Array$Extra$indexedMapToList,\n\t\tF2(\n\t\t\tfunction (i, v) {\n\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\ti,\n\t\t\t\t\t(v * 5) * A2($elm$core$Basics$pow, 1.005, 0 - i));\n\t\t\t}),\n\t\tarray);\n\treturn list;\n};\nvar $elm$svg$Svg$Attributes$class = _VirtualDom_attribute('class');\nvar $elm$svg$Svg$line = $elm$svg$Svg$trustedNode('line');\nvar $elm$svg$Svg$Attributes$opacity = _VirtualDom_attribute('opacity');\nvar $elm$svg$Svg$Attributes$x1 = _VirtualDom_attribute('x1');\nvar $elm$svg$Svg$Attributes$x2 = _VirtualDom_attribute('x2');\nvar $elm$svg$Svg$Attributes$y1 = _VirtualDom_attribute('y1');\nvar $elm$svg$Svg$Attributes$y2 = _VirtualDom_attribute('y2');\nvar $author$project$Main$viewSimTriplet = function (model) {\n\tvar xmin = 80;\n\tvar xminString = $elm$core$String$fromInt(xmin);\n\tvar xmax = ((((($author$project$SimTriplet$primerRDistance + $author$project$SimTriplet$primerRLength) + ($author$project$Allele$maxAlleleSize * $author$project$Triplet$size)) + $author$project$SimTriplet$primerFDistance) + $author$project$SimTriplet$primerFLength) + $author$project$SimTriplet$tripletPrimerAddLength) + 10;\n\tvar viewBoxString = xminString + (' 1 ' + ($elm$core$String$fromInt(xmax) + ' 112'));\n\tvar fullAlleleBUnsorted = $author$project$SimTriplet$getFullFragmentSize(model.m.ba);\n\tvar fullAlleleAUnsorted = $author$project$SimTriplet$getFullFragmentSize(model.m.a9);\n\tvar alleleBSizeUnsorted = $author$project$Allele$getSize(model.m.ba);\n\tvar alleleASizeUnsorted = $author$project$Allele$getSize(model.m.a9);\n\tvar _v0 = (_Utils_cmp(fullAlleleAUnsorted, fullAlleleBUnsorted) > 0) ? _Utils_Tuple2(fullAlleleAUnsorted, fullAlleleBUnsorted) : _Utils_Tuple2(fullAlleleBUnsorted, fullAlleleAUnsorted);\n\tvar fullAlleleA = _v0.a;\n\tvar fullAlleleB = _v0.b;\n\tvar _v1 = (_Utils_cmp(alleleASizeUnsorted, alleleBSizeUnsorted) > 0) ? _Utils_Tuple2(alleleASizeUnsorted, alleleBSizeUnsorted) : _Utils_Tuple2(alleleBSizeUnsorted, alleleASizeUnsorted);\n\tvar alleleASize = _v1.a;\n\tvar alleleBSize = _v1.b;\n\treturn A2(\n\t\t$elm$html$Html$div,\n\t\t_List_fromArray(\n\t\t\t[\n\t\t\t\t$elm$html$Html$Attributes$class('sim-container')\n\t\t\t]),\n\t\t_List_fromArray(\n\t\t\t[\n\t\t\t\tA2(\n\t\t\t\t$elm$html$Html$div,\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\t$elm$html$Html$Attributes$class('sim-graph')\n\t\t\t\t\t]),\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t$elm$svg$Svg$svg,\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t$elm$svg$Svg$Attributes$viewBox(viewBoxString)\n\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t$elm$svg$Svg$g,\n\t\t\t\t\t\t\t\t_List_Nil,\n\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t\t$elm$svg$Svg$rect,\n\t\t\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\t\t$elm$svg$Svg$Attributes$x(\n\t\t\t\t\t\t\t\t\t\t\t\t$elm$core$String$fromFloat(fullAlleleA - 1.5)),\n\t\t\t\t\t\t\t\t\t\t\t\t$elm$svg$Svg$Attributes$y('11'),\n\t\t\t\t\t\t\t\t\t\t\t\t$elm$svg$Svg$Attributes$width('3'),\n\t\t\t\t\t\t\t\t\t\t\t\t$elm$svg$Svg$Attributes$height('89'),\n\t\t\t\t\t\t\t\t\t\t\t\t$elm$svg$Svg$Attributes$fill('#ccc'),\n\t\t\t\t\t\t\t\t\t\t\t\t$elm$svg$Svg$Attributes$opacity('0.5')\n\t\t\t\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\t\t\t_List_Nil),\n\t\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t\t$elm$svg$Svg$rect,\n\t\t\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\t\t$elm$svg$Svg$Attributes$x(\n\t\t\t\t\t\t\t\t\t\t\t\t$elm$core$String$fromFloat(fullAlleleA - 10)),\n\t\t\t\t\t\t\t\t\t\t\t\t$elm$svg$Svg$Attributes$y('101'),\n\t\t\t\t\t\t\t\t\t\t\t\t$elm$svg$Svg$Attributes$width('20'),\n\t\t\t\t\t\t\t\t\t\t\t\t$elm$svg$Svg$Attributes$height('11'),\n\t\t\t\t\t\t\t\t\t\t\t\t$elm$svg$Svg$Attributes$fill('#ccc'),\n\t\t\t\t\t\t\t\t\t\t\t\t$elm$svg$Svg$Attributes$opacity('0.5'),\n\t\t\t\t\t\t\t\t\t\t\t\t$elm$svg$Svg$Attributes$stroke('green')\n\t\t\t\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\t\t\t_List_Nil),\n\t\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t\t$elm$svg$Svg$text_,\n\t\t\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\t\t$elm$svg$Svg$Attributes$class('no-pointer'),\n\t\t\t\t\t\t\t\t\t\t\t\t$elm$svg$Svg$Attributes$x(\n\t\t\t\t\t\t\t\t\t\t\t\t$elm$core$String$fromInt(fullAlleleA)),\n\t\t\t\t\t\t\t\t\t\t\t\t$elm$svg$Svg$Attributes$y('110'),\n\t\t\t\t\t\t\t\t\t\t\t\t$elm$svg$Svg$Attributes$fill('black'),\n\t\t\t\t\t\t\t\t\t\t\t\t$elm$svg$Svg$Attributes$fontSize('8px'),\n\t\t\t\t\t\t\t\t\t\t\t\t$elm$svg$Svg$Attributes$textAnchor('middle')\n\t\t\t\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\t\t$elm$svg$Svg$text(\n\t\t\t\t\t\t\t\t\t\t\t\t$elm$core$String$fromInt(alleleASize))\n\t\t\t\t\t\t\t\t\t\t\t])),\n\t\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t\t$elm$svg$Svg$rect,\n\t\t\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\t\t$elm$svg$Svg$Attributes$x(\n\t\t\t\t\t\t\t\t\t\t\t\t$elm$core$String$fromFloat(fullAlleleB - 1.5)),\n\t\t\t\t\t\t\t\t\t\t\t\t$elm$svg$Svg$Attributes$y('11'),\n\t\t\t\t\t\t\t\t\t\t\t\t$elm$svg$Svg$Attributes$width('3'),\n\t\t\t\t\t\t\t\t\t\t\t\t$elm$svg$Svg$Attributes$height('89'),\n\t\t\t\t\t\t\t\t\t\t\t\t$elm$svg$Svg$Attributes$fill('#ccc'),\n\t\t\t\t\t\t\t\t\t\t\t\t$elm$svg$Svg$Attributes$opacity('0.5')\n\t\t\t\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\t\t\t_List_Nil),\n\t\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t\t$elm$svg$Svg$rect,\n\t\t\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\t\t$elm$svg$Svg$Attributes$x(\n\t\t\t\t\t\t\t\t\t\t\t\t$elm$core$String$fromFloat(fullAlleleB - 10)),\n\t\t\t\t\t\t\t\t\t\t\t\t$elm$svg$Svg$Attributes$y('101'),\n\t\t\t\t\t\t\t\t\t\t\t\t$elm$svg$Svg$Attributes$width('20'),\n\t\t\t\t\t\t\t\t\t\t\t\t$elm$svg$Svg$Attributes$height('11'),\n\t\t\t\t\t\t\t\t\t\t\t\t$elm$svg$Svg$Attributes$fill('#ccc'),\n\t\t\t\t\t\t\t\t\t\t\t\t$elm$svg$Svg$Attributes$opacity('0.5'),\n\t\t\t\t\t\t\t\t\t\t\t\t$elm$svg$Svg$Attributes$stroke('green')\n\t\t\t\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\t\t\t_List_Nil),\n\t\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t\t$elm$svg$Svg$text_,\n\t\t\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\t\t$elm$svg$Svg$Attributes$class('no-pointer'),\n\t\t\t\t\t\t\t\t\t\t\t\t$elm$svg$Svg$Attributes$x(\n\t\t\t\t\t\t\t\t\t\t\t\t$elm$core$String$fromInt(fullAlleleB)),\n\t\t\t\t\t\t\t\t\t\t\t\t$elm$svg$Svg$Attributes$y('110'),\n\t\t\t\t\t\t\t\t\t\t\t\t$elm$svg$Svg$Attributes$fill('black'),\n\t\t\t\t\t\t\t\t\t\t\t\t$elm$svg$Svg$Attributes$fontSize('8px'),\n\t\t\t\t\t\t\t\t\t\t\t\t$elm$svg$Svg$Attributes$textAnchor('middle')\n\t\t\t\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\t\t$elm$svg$Svg$text(\n\t\t\t\t\t\t\t\t\t\t\t\t$elm$core$String$fromInt(alleleBSize))\n\t\t\t\t\t\t\t\t\t\t\t]))\n\t\t\t\t\t\t\t\t\t])),\n\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t$elm$svg$Svg$line,\n\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t$elm$svg$Svg$Attributes$x1(xminString),\n\t\t\t\t\t\t\t\t\t\t$elm$svg$Svg$Attributes$y1('100'),\n\t\t\t\t\t\t\t\t\t\t$elm$svg$Svg$Attributes$x2('1000'),\n\t\t\t\t\t\t\t\t\t\t$elm$svg$Svg$Attributes$y2('100'),\n\t\t\t\t\t\t\t\t\t\t$elm$svg$Svg$Attributes$stroke('blue')\n\t\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\t_List_Nil),\n\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t$elm$svg$Svg$g,\n\t\t\t\t\t\t\t\t_List_Nil,\n\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t\t$elm$svg$Svg$polyline,\n\t\t\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\t\t$elm$svg$Svg$Attributes$points(\n\t\t\t\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t\t\t\t\t$elm$core$String$join,\n\t\t\t\t\t\t\t\t\t\t\t\t\t' ',\n\t\t\t\t\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t$elm$core$List$map,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tfunction (_v2) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvar x = _v2.a;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvar y = _v2.b;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn $elm$core$String$fromFloat(x) + (',' + $elm$core$String$fromFloat(100 - (10 * y)));\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t$author$project$SimTriplet$arrayValuesToPolylinePoints(model.X)))),\n\t\t\t\t\t\t\t\t\t\t\t\t$elm$svg$Svg$Attributes$stroke('blue'),\n\t\t\t\t\t\t\t\t\t\t\t\t$elm$svg$Svg$Attributes$fill('none'),\n\t\t\t\t\t\t\t\t\t\t\t\t$elm$svg$Svg$Attributes$strokeLinejoin('round')\n\t\t\t\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\t\t\t_List_Nil)\n\t\t\t\t\t\t\t\t\t])),\n\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t$elm$svg$Svg$g,\n\t\t\t\t\t\t\t\t_List_Nil,\n\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t\t$elm$svg$Svg$rect,\n\t\t\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\t\t$elm$svg$Svg$Attributes$x(\n\t\t\t\t\t\t\t\t\t\t\t\t$elm$core$String$fromInt(($author$project$SimTriplet$primerRDistance + $author$project$SimTriplet$primerRLength) + 15)),\n\t\t\t\t\t\t\t\t\t\t\t\t$elm$svg$Svg$Attributes$y('1'),\n\t\t\t\t\t\t\t\t\t\t\t\t$elm$svg$Svg$Attributes$width(\n\t\t\t\t\t\t\t\t\t\t\t\t$elm$core$String$fromInt((((xmax - 10) - 15) - $author$project$SimTriplet$primerRDistance) - $author$project$SimTriplet$primerRLength)),\n\t\t\t\t\t\t\t\t\t\t\t\t$elm$svg$Svg$Attributes$height('10'),\n\t\t\t\t\t\t\t\t\t\t\t\t$elm$svg$Svg$Attributes$fill('#eee'),\n\t\t\t\t\t\t\t\t\t\t\t\t$elm$svg$Svg$Attributes$stroke('green')\n\t\t\t\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\t\t\t_List_Nil),\n\t\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t\t$elm$svg$Svg$rect,\n\t\t\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\t\t$elm$svg$Svg$Attributes$x(xminString),\n\t\t\t\t\t\t\t\t\t\t\t\t$elm$svg$Svg$Attributes$y('11'),\n\t\t\t\t\t\t\t\t\t\t\t\t$elm$svg$Svg$Attributes$width(\n\t\t\t\t\t\t\t\t\t\t\t\t$elm$core$String$fromInt(xmax)),\n\t\t\t\t\t\t\t\t\t\t\t\t$elm$svg$Svg$Attributes$height('89'),\n\t\t\t\t\t\t\t\t\t\t\t\t$elm$svg$Svg$Attributes$fill('none'),\n\t\t\t\t\t\t\t\t\t\t\t\t$elm$svg$Svg$Attributes$stroke('black')\n\t\t\t\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\t\t\t_List_Nil),\n\t\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t\t$elm$svg$Svg$text_,\n\t\t\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\t\t$elm$svg$Svg$Attributes$x('510'),\n\t\t\t\t\t\t\t\t\t\t\t\t$elm$svg$Svg$Attributes$y('9'),\n\t\t\t\t\t\t\t\t\t\t\t\t$elm$svg$Svg$Attributes$fill('#222'),\n\t\t\t\t\t\t\t\t\t\t\t\t$elm$svg$Svg$Attributes$fontSize('8px'),\n\t\t\t\t\t\t\t\t\t\t\t\t$elm$svg$Svg$Attributes$textAnchor('middle')\n\t\t\t\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\t\t$elm$svg$Svg$text('FRAX')\n\t\t\t\t\t\t\t\t\t\t\t])),\n\t\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t\t$elm$svg$Svg$text_,\n\t\t\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\t\t$elm$svg$Svg$Attributes$x(\n\t\t\t\t\t\t\t\t\t\t\t\t$elm$core$String$fromInt(xmin + 4)),\n\t\t\t\t\t\t\t\t\t\t\t\t$elm$svg$Svg$Attributes$y('24'),\n\t\t\t\t\t\t\t\t\t\t\t\t$elm$svg$Svg$Attributes$fill('#222'),\n\t\t\t\t\t\t\t\t\t\t\t\t$elm$svg$Svg$Attributes$fontSize('10px'),\n\t\t\t\t\t\t\t\t\t\t\t\t$elm$svg$Svg$Attributes$textAnchor('left')\n\t\t\t\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\t\t$elm$svg$Svg$text('Triplet-repeat primed PCR')\n\t\t\t\t\t\t\t\t\t\t\t]))\n\t\t\t\t\t\t\t\t\t])),\n\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t$elm$svg$Svg$g,\n\t\t\t\t\t\t\t\t_List_Nil,\n\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t$elm$core$List$map,\n\t\t\t\t\t\t\t\t\tfunction (i) {\n\t\t\t\t\t\t\t\t\t\treturn A2(\n\t\t\t\t\t\t\t\t\t\t\t$elm$svg$Svg$g,\n\t\t\t\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\t\t\t$elm$svg$Svg$Attributes$class('graph-vline')\n\t\t\t\t\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t\t\t\t\t$elm$svg$Svg$rect,\n\t\t\t\t\t\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t$elm$svg$Svg$Attributes$x(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t$elm$core$String$fromFloat((i * 3) - 1.5)),\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t$elm$svg$Svg$Attributes$y('11'),\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t$elm$svg$Svg$Attributes$width('3'),\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t$elm$svg$Svg$Attributes$height('89'),\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t$elm$svg$Svg$Attributes$fill('#ccc')\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\t\t\t\t\t\t_List_Nil),\n\t\t\t\t\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t\t\t\t\t$elm$svg$Svg$text_,\n\t\t\t\t\t\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t$elm$svg$Svg$Attributes$class('no-pointer'),\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t$elm$svg$Svg$Attributes$x(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t$elm$core$String$fromFloat((i * 3) - 1.5)),\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t$elm$svg$Svg$Attributes$y('110'),\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t$elm$svg$Svg$Attributes$fill('black'),\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t$elm$svg$Svg$Attributes$fontSize('8px'),\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t$elm$svg$Svg$Attributes$textAnchor('middle')\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t$elm$svg$Svg$text(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t$elm$core$String$fromInt(i * 3) + 'bp')\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t]))\n\t\t\t\t\t\t\t\t\t\t\t\t]));\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\tA2($elm$core$List$range, 0, (1000 / 3) | 0)))\n\t\t\t\t\t\t\t]))\n\t\t\t\t\t]))\n\t\t\t]));\n};\nvar $author$project$Main$view = function (model) {\n\treturn A2(\n\t\t$elm$html$Html$div,\n\t\t_List_fromArray(\n\t\t\t[\n\t\t\t\t$elm$html$Html$Attributes$id('main')\n\t\t\t]),\n\t\t_List_fromArray(\n\t\t\t[\n\t\t\t\tA2(\n\t\t\t\t$elm$html$Html$div,\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\t$elm$html$Html$Attributes$id('section-top')\n\t\t\t\t\t]),\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t$elm$html$Html$div,\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t$elm$html$Html$Attributes$id('section-top-left')\n\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t$elm$html$Html$h1,\n\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t$elm$html$Html$Attributes$class('title')\n\t\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t$elm$html$Html$text('SimFrax')\n\t\t\t\t\t\t\t\t\t])),\n\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t$elm$html$Html$h2,\n\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t$elm$html$Html$Attributes$class('subtitle')\n\t\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t$elm$html$Html$text('A fragment analysis simulator for Fragile X genotypes.')\n\t\t\t\t\t\t\t\t\t])),\n\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t$elm$html$Html$div,\n\t\t\t\t\t\t\t\t_List_Nil,\n\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t\t$elm$html$Html$p,\n\t\t\t\t\t\t\t\t\t\t_List_Nil,\n\t\t\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\t\t$elm$html$Html$text('Specify the number of '),\n\t\t\t\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t\t\t\t$elm$html$Html$span,\n\t\t\t\t\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t$elm$html$Html$Attributes$class('triplet-text text-cgg')\n\t\t\t\t\t\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t$elm$html$Html$text('CGG')\n\t\t\t\t\t\t\t\t\t\t\t\t\t])),\n\t\t\t\t\t\t\t\t\t\t\t\t$elm$html$Html$text(' repeats in each Fragile X allele on the right. Click on a repeat to change it to an '),\n\t\t\t\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t\t\t\t$elm$html$Html$span,\n\t\t\t\t\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t$elm$html$Html$Attributes$class('triplet-text text-agg')\n\t\t\t\t\t\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t$elm$html$Html$text('AGG')\n\t\t\t\t\t\t\t\t\t\t\t\t\t])),\n\t\t\t\t\t\t\t\t\t\t\t\t$elm$html$Html$text(' interruption and back.')\n\t\t\t\t\t\t\t\t\t\t\t]))\n\t\t\t\t\t\t\t\t\t])),\n\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t$elm$html$Html$p,\n\t\t\t\t\t\t\t\t_List_Nil,\n\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t$elm$html$Html$text('The graphs below will update, showing simulated fragment analysis plots.')\n\t\t\t\t\t\t\t\t\t]))\n\t\t\t\t\t\t\t])),\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t$elm$html$Html$div,\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t$elm$html$Html$Attributes$id('section-top-right')\n\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t$elm$html$Html$div,\n\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t$elm$html$Html$Attributes$id('section-top-right-bordered')\n\t\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t\t$elm$html$Html$div,\n\t\t\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\t\t$elm$html$Html$Attributes$class('allele-section-heading')\n\t\t\t\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\t\t$elm$html$Html$text('Fragile X Genotype')\n\t\t\t\t\t\t\t\t\t\t\t])),\n\t\t\t\t\t\t\t\t\t\tA2($author$project$Main$viewAllele, 0, model.m.a9),\n\t\t\t\t\t\t\t\t\t\tA2($author$project$Main$viewAllele, 1, model.m.ba)\n\t\t\t\t\t\t\t\t\t]))\n\t\t\t\t\t\t\t]))\n\t\t\t\t\t])),\n\t\t\t\tA2(\n\t\t\t\t$elm$html$Html$div,\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\t$elm$html$Html$Attributes$id('section-bottom')\n\t\t\t\t\t]),\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t$elm$html$Html$div,\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t$elm$html$Html$Attributes$id('section-bottom-left')\n\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t$elm$html$Html$div,\n\t\t\t\t\t\t\t\t_List_Nil,\n\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t\t$elm$html$Html$p,\n\t\t\t\t\t\t\t\t\t\t_List_Nil,\n\t\t\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\t\t$elm$html$Html$text('The first plot shows the '),\n\t\t\t\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t\t\t\t$elm$html$Html$b,\n\t\t\t\t\t\t\t\t\t\t\t\t_List_Nil,\n\t\t\t\t\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t$elm$html$Html$text('idealised (noiseless)')\n\t\t\t\t\t\t\t\t\t\t\t\t\t])),\n\t\t\t\t\t\t\t\t\t\t\t\t$elm$html$Html$text(' simulated fragment distribution for a standard triplet-repeat primed PCR kit such as described in '),\n\t\t\t\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t\t\t\t$elm$html$Html$a,\n\t\t\t\t\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t$elm$html$Html$Attributes$href('https://pubmed.ncbi.nlm.nih.gov/20616364/')\n\t\t\t\t\t\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t$elm$html$Html$text('Chen et al 2010')\n\t\t\t\t\t\t\t\t\t\t\t\t\t])),\n\t\t\t\t\t\t\t\t\t\t\t\t$elm$html$Html$text(\n\t\t\t\t\t\t\t\t\t\t\t\t'. The simulation uses a forward primer of length ' + ($elm$core$String$fromInt($author$project$SimTriplet$primerFLength) + ('bp located ' + ($elm$core$String$fromInt($author$project$SimTriplet$primerFDistance) + ('bp from the start of the triplet repeat region, and a reverse primer of length ' + ($elm$core$String$fromInt($author$project$SimTriplet$primerRLength) + ('bp located ' + ($elm$core$String$fromInt($author$project$SimTriplet$primerRDistance) + 'bp from the end of the triplet repeat region.')))))))),\n\t\t\t\t\t\t\t\t\t\t\t\t$elm$html$Html$text(\n\t\t\t\t\t\t\t\t\t\t\t\t' The triplet repeat primer consists of ' + ($elm$core$String$fromInt(\n\t\t\t\t\t\t\t\t\t\t\t\t\t$elm$core$Array$length($author$project$SimTriplet$tripletPrimer)) + ('x CGG repeats with extra 5\\' sequence of ' + ($elm$core$String$fromInt($author$project$SimTriplet$tripletPrimerAddLength) + 'bp.'))))\n\t\t\t\t\t\t\t\t\t\t\t]))\n\t\t\t\t\t\t\t\t\t])),\n\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t$elm$html$Html$p,\n\t\t\t\t\t\t\t\t_List_Nil,\n\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t$elm$html$Html$text('The bottom two plots show the simulated fragment sizes for an A-primed PCR reaction and a T-primed PCR reaction specifically designed to detect AGG repeats as described in '),\n\t\t\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t\t$elm$html$Html$a,\n\t\t\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\t\t$elm$html$Html$Attributes$href('https://pubmed.ncbi.nlm.nih.gov/28818679/')\n\t\t\t\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t\t\t$elm$html$Html$text('Hayward & Usdin 2017')\n\t\t\t\t\t\t\t\t\t\t\t])),\n\t\t\t\t\t\t\t\t\t\t$elm$html$Html$text(\n\t\t\t\t\t\t\t\t\t\t'. The simulated A-primed reaction uses a primer with 3x CGG repeats and a 3\\' A with extra 5\\' sequence of ' + ($elm$core$String$fromInt($author$project$SimAgg$tripletPrimerAddLength) + ('bp. The T-primed reaction uses a primer with 3x CCG repeats and a 3\\' T with extra 5\\' sequence of ' + ($elm$core$String$fromInt($author$project$SimAggRev$tripletPrimerAddLength) + 'bp.'))))\n\t\t\t\t\t\t\t\t\t]))\n\t\t\t\t\t\t\t])),\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t$elm$html$Html$div,\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t$elm$html$Html$Attributes$id('section-bottom-right')\n\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t$author$project$Main$viewSimTriplet(model),\n\t\t\t\t\t\t\t\t$author$project$Main$viewSimAgg(model),\n\t\t\t\t\t\t\t\t$author$project$Main$viewSimAggRev(model)\n\t\t\t\t\t\t\t]))\n\t\t\t\t\t]))\n\t\t\t]));\n};\nvar $author$project$Main$main = $elm$browser$Browser$element(\n\t{\n\t\tbn: function (_v0) {\n\t\t\treturn $author$project$Main$init;\n\t\t},\n\t\tbv: $elm$core$Basics$always($elm$core$Platform$Sub$none),\n\t\tbx: $author$project$Main$update,\n\t\tby: $author$project$Main$view\n\t});\n_Platform_export({'Main':{'init':$author$project$Main$main(\n\t$elm$json$Json$Decode$succeed(0))(0)}});}(this));","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import './main.css';\nimport { Elm } from './Main.elm';\nimport * as serviceWorker from './serviceWorker';\n\nElm.Main.init({\n  node: document.getElementById('root')\n});\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}